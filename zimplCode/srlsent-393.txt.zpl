# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Make_agreement_on_action","Desirability","Emotion_directed","Political_locales","Cause_change","Collaboration","Political_locales","Dimension","Sign","Importance","Intentionally_act","Weapon","Cognitive_connection","Statement"};
set Roles[Frames] :=  <"Make_agreement_on_action"> {"Place","Party_2","Party_1","Medium","Topic","Manner","Time","Parties","Obligation","Descriptor"}, <"Desirability"> {"Parameter","Affected_party","Circumstances","Depictive","Comparison_set","Degree","Evaluee"}, <"Emotion_directed"> {"Topic","Circumstances","Parameter","Degree","Experiencer","Event","Expressor","Reason","Empathy_target","Manner","State","Stimulus","Frequency"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Cause_change"> {"Duration","Purpose","Attribute","Initial_value","Role","Circumstances","Agent","Manner","Means","Event_description","Final_category","Cause","Time","Period_of_iterations","Containing_event","Degree","Place","Re_encoding","Reason","Initial_category","Final_value","Entity"}, <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Dimension"> {"Object","Domain","Measurement","Dimension","Location"}, <"Sign"> {"Degree","Indicator","Indicated"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Cognitive_connection"> {"Point_of_view","Circumstances","Specification","Concept_2","Concept_1","Degree","Concepts"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"};
set Spans := {"-1_-1","0_0","0_1","0_2","0_31","0_34","0_35","10_10","11_11","11_31","12_12","12_13","12_31","13_13","13_31","14_14","14_31","15_15","15_16","16_16","17_17","17_22","18_18","18_20","18_22","19_19","1_1","20_20","21_21","22_22","23_23","24_24","24_31","25_25","25_27","25_31","26_26","27_27","28_28","28_31","29_29","29_31","2_2","2_31","30_30","31_31","32_32","33_33","34_34","35_35","3_3","3_31","4_31","4_4","5_5","6_6","7_10","7_7","8_10","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Make_agreement_on_action"]] binary;
var z1[Assignment["Desirability"]] binary;
var z2[Assignment["Emotion_directed"]] binary;
var z3[Assignment["Political_locales"]] binary;
var z4[Assignment["Cause_change"]] binary;
var z5[Assignment["Collaboration"]] binary;
var z6[Assignment["Political_locales"]] binary;
var z7[Assignment["Dimension"]] binary;
var z8[Assignment["Sign"]] binary;
var z9[Assignment["Importance"]] binary;
var z10[Assignment["Intentionally_act"]] binary;
var z11[Assignment["Weapon"]] binary;
var z12[Assignment["Cognitive_connection"]] binary;
var z13[Assignment["Statement"]] binary;
param probabilities0[Assignment["Make_agreement_on_action"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Desirability"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Emotion_directed"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Political_locales"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Cause_change"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Collaboration"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Political_locales"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Dimension"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Sign"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Importance"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Intentionally_act"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Weapon"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Cognitive_connection"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Statement"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Make_agreement_on_action"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Desirability"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Emotion_directed"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Cause_change"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Collaboration"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Dimension"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Sign"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Cognitive_connection"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 35};
set G[I] := <0> {"0_0","0_1","0_2","0_31","0_34","0_35"}, <1> {"0_1","0_2","0_31","0_34","0_35","1_1"}, <2> {"0_2","0_31","0_34","0_35","2_2","2_31"}, <3> {"0_31","0_34","0_35","2_31","3_3","3_31"}, <4> {"0_31","0_34","0_35","2_31","3_31","4_31","4_4"}, <5> {"0_31","0_34","0_35","2_31","3_31","4_31","5_5"}, <6> {"0_31","0_34","0_35","2_31","3_31","4_31","6_6"}, <7> {"0_31","0_34","0_35","2_31","3_31","4_31","7_10","7_7"}, <8> {"0_31","0_34","0_35","2_31","3_31","4_31","7_10","8_10","8_8"}, <9> {"0_31","0_34","0_35","2_31","3_31","4_31","7_10","8_10","9_9"}, <10> {"0_31","0_34","0_35","10_10","2_31","3_31","4_31","7_10","8_10"}, <11> {"0_31","0_34","0_35","11_11","11_31","2_31","3_31","4_31"}, <12> {"0_31","0_34","0_35","11_31","12_12","12_13","12_31","2_31","3_31","4_31"}, <13> {"0_31","0_34","0_35","11_31","12_13","12_31","13_13","13_31","2_31","3_31","4_31"}, <14> {"0_31","0_34","0_35","11_31","12_31","13_31","14_14","14_31","2_31","3_31","4_31"}, <15> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","15_15","15_16","2_31","3_31","4_31"}, <16> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","15_16","16_16","2_31","3_31","4_31"}, <17> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","17_17","17_22","2_31","3_31","4_31"}, <18> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","17_22","18_18","18_20","18_22","2_31","3_31","4_31"}, <19> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","17_22","18_20","18_22","19_19","2_31","3_31","4_31"}, <20> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","17_22","18_20","18_22","20_20","2_31","3_31","4_31"}, <21> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","17_22","18_22","21_21","2_31","3_31","4_31"}, <22> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","17_22","18_22","22_22","2_31","3_31","4_31"}, <23> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","23_23","2_31","3_31","4_31"}, <24> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_24","24_31","2_31","3_31","4_31"}, <25> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_25","25_27","25_31","2_31","3_31","4_31"}, <26> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_27","25_31","26_26","2_31","3_31","4_31"}, <27> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_27","25_31","27_27","2_31","3_31","4_31"}, <28> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_31","28_28","28_31","2_31","3_31","4_31"}, <29> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_31","28_31","29_29","29_31","2_31","3_31","4_31"}, <30> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_31","28_31","29_31","2_31","30_30","3_31","4_31"}, <31> {"0_31","0_34","0_35","11_31","12_31","13_31","14_31","24_31","25_31","28_31","29_31","2_31","31_31","3_31","4_31"}, <32> {"0_34","0_35","32_32"}, <33> {"0_34","0_35","33_33"}, <34> {"0_34","0_35","34_34"}, <35> {"0_35","35_35"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Make_agreement_on_action"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Desirability"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Emotion_directed"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Cause_change"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Dimension"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Sign"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Cognitive_connection"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Make_agreement_on_action"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Desirability"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Emotion_directed"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Cause_change"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Dimension"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Sign"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Importance"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Weapon"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Cognitive_connection"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Statement"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Parties","Party_2">,<"Parties","Party_1">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc2 := {<"Event","Experiencer">,<"Experiencer","Expressor">,<"Event","Expressor">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc4 := {<"Final_category","Initial_value">,<"Attribute","Final_category">,<"Agent","Cause">,<"Final_category","Final_value">,<"Initial_category","Initial_value">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc5 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc9 := {<"Field","Interested_party">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc12 := {<"Concept_2","Concepts">,<"Concept_1","Concepts">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr4 := {<"Attribute","Final_value">,<"Attribute","Initial_value">};
subto require4: forall <ri,rj> in Reqr4 do z4[ri,"-1_-1"] - z4[rj,"-1_-1"] == 0;
set Reqr5 := {<"Partner_1","Partner_2">};
subto require5: forall <ri,rj> in Reqr5 do z5[ri,"-1_-1"] - z5[rj,"-1_-1"] == 0;

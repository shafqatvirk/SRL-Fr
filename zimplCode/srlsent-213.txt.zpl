# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Intentionally_act","Cardinal_numbers","Collaboration","Conquering","Execution","Killing","Origin","Increment","Origin","Organization"};
set Roles[Frames] :=  <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"Conquering"> {"Conqueror","Place","Instrument","Theme","Degree","Time","Means","Purpose","Depictive"}, <"Execution"> {"Place","Executed","Manner","Execution","Time","Reason","Means","Instrument","Executioner"}, <"Killing"> {"Purpose","Means","Depictive","Circumstances","Manner","Result","Explanation","Instrument","Cause","Time","Killer","Beneficiary","Degree","Place","Frequency","Reason","Period_of_iterations","Victim"}, <"Origin"> {"Entity","Origin"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Origin"> {"Entity","Origin"}, <"Organization"> {"Period_of_existence","Members","Place","Name","Container_possessor","Organization","Purpose","Descriptor"};
set Spans := {"-1_-1","0_0","0_3","0_31","10_10","11_11","11_30","12_12","12_30","13_13","13_28","14_14","15_15","15_27","16_16","16_27","17_17","17_27","18_18","19_19","19_27","1_1","20_20","20_22","20_27","21_21","22_22","23_23","24_24","25_25","26_26","27_27","28_28","29_29","29_30","2_2","30_30","31_31","3_3","4_31","4_4","5_30","5_5","6_6","7_7","8_30","8_8","9_10","9_30","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Intentionally_act"]] binary;
var z1[Assignment["Cardinal_numbers"]] binary;
var z2[Assignment["Collaboration"]] binary;
var z3[Assignment["Conquering"]] binary;
var z4[Assignment["Execution"]] binary;
var z5[Assignment["Killing"]] binary;
var z6[Assignment["Origin"]] binary;
var z7[Assignment["Increment"]] binary;
var z8[Assignment["Origin"]] binary;
var z9[Assignment["Organization"]] binary;
param probabilities0[Assignment["Intentionally_act"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Cardinal_numbers"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Collaboration"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Conquering"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Execution"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Killing"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Origin"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Increment"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Origin"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Organization"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Intentionally_act"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Collaboration"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Conquering"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Execution"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Killing"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Organization"] : probabilities9[r,s] * z9[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 31};
set G[I] := <0> {"0_0","0_3","0_31"}, <1> {"0_3","0_31","1_1"}, <2> {"0_3","0_31","2_2"}, <3> {"0_3","0_31","3_3"}, <4> {"0_31","4_31","4_4"}, <5> {"0_31","4_31","5_30","5_5"}, <6> {"0_31","4_31","5_30","6_6"}, <7> {"0_31","4_31","5_30","7_7"}, <8> {"0_31","4_31","5_30","8_30","8_8"}, <9> {"0_31","4_31","5_30","8_30","9_10","9_30","9_9"}, <10> {"0_31","10_10","4_31","5_30","8_30","9_10","9_30"}, <11> {"0_31","11_11","11_30","4_31","5_30","8_30","9_30"}, <12> {"0_31","11_30","12_12","12_30","4_31","5_30","8_30","9_30"}, <13> {"0_31","11_30","12_30","13_13","13_28","4_31","5_30","8_30","9_30"}, <14> {"0_31","11_30","12_30","13_28","14_14","4_31","5_30","8_30","9_30"}, <15> {"0_31","11_30","12_30","13_28","15_15","15_27","4_31","5_30","8_30","9_30"}, <16> {"0_31","11_30","12_30","13_28","15_27","16_16","16_27","4_31","5_30","8_30","9_30"}, <17> {"0_31","11_30","12_30","13_28","15_27","16_27","17_17","17_27","4_31","5_30","8_30","9_30"}, <18> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","18_18","4_31","5_30","8_30","9_30"}, <19> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_19","19_27","4_31","5_30","8_30","9_30"}, <20> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_20","20_22","20_27","4_31","5_30","8_30","9_30"}, <21> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_22","20_27","21_21","4_31","5_30","8_30","9_30"}, <22> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_22","20_27","22_22","4_31","5_30","8_30","9_30"}, <23> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_27","23_23","4_31","5_30","8_30","9_30"}, <24> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_27","24_24","4_31","5_30","8_30","9_30"}, <25> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_27","25_25","4_31","5_30","8_30","9_30"}, <26> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_27","26_26","4_31","5_30","8_30","9_30"}, <27> {"0_31","11_30","12_30","13_28","15_27","16_27","17_27","19_27","20_27","27_27","4_31","5_30","8_30","9_30"}, <28> {"0_31","11_30","12_30","13_28","28_28","4_31","5_30","8_30","9_30"}, <29> {"0_31","11_30","12_30","29_29","29_30","4_31","5_30","8_30","9_30"}, <30> {"0_31","11_30","12_30","29_30","30_30","4_31","5_30","8_30","9_30"}, <31> {"0_31","31_31","4_31"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Conquering"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Execution"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Killing"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Organization"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Conquering"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Execution"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Killing"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Origin"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Increment"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Origin"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Organization"] do sum <s> in Spans : z9[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc5 := {<"Cause","Killer">,<"Cause","Means">,<"Cause","Instrument">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr2 := {<"Partner_1","Partner_2">};
subto require2: forall <ri,rj> in Reqr2 do z2[ri,"-1_-1"] - z2[rj,"-1_-1"] == 0;

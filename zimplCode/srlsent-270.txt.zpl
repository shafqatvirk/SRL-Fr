# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Experiencer_focus","Make_agreement_on_action","Using","Eclipse","Transfer","Increment","Health_response","Weapon","Artifact","Supply","Education_teaching","Origin","Weapon","Expertise","Capability","Using","Supporting","Project"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Experiencer_focus"> {"Topic","Circumstances","Parameter","Time","Degree","Experiencer","Event","Expressor","Reason","State","Content","Manner"}, <"Make_agreement_on_action"> {"Place","Party_2","Party_1","Medium","Topic","Manner","Time","Parties","Obligation","Descriptor"}, <"Using"> {"Duration","Depictive","Purpose","Means","Role","Circumstances","Agent","Manner","Explanation","Outcome","Instrument","Time","Period_of_iterations","Containing_event","Degree","Place","Frequency","Group"}, <"Eclipse"> {"Obstruction","Degree","Eclipsed","Vantage_point","Subregion"}, <"Transfer"> {"Place","Theme","Manner","Donor","Time","Transferors","Reason","Means","Recipient","Purpose"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Health_response"> {"Manner","Body_part","Protagonist","Degree","Trigger"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Education_teaching"> {"Duration","Depictive","Purpose","Means","Role","Institution","Level","Manner","Result","Subject","Teacher","Course","Time","Material","Degree","Place","Skill","Qualification","Student","Fact","Precept"}, <"Origin"> {"Entity","Origin"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Expertise"> {"Skill","Knowledge","Degree","Manner","Behavior_product","Time","Protagonist","Role","Focal_participant"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Using"> {"Duration","Depictive","Purpose","Means","Role","Circumstances","Agent","Manner","Explanation","Outcome","Instrument","Time","Period_of_iterations","Containing_event","Degree","Place","Frequency","Group"}, <"Supporting"> {"Event_description","Place","Supported","Degree","Manner","Time","Supporter","Means"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"};
set Spans := {"-1_-1","0_0","0_39","10_10","11_11","11_38","12_12","12_20","13_13","14_14","14_18","15_15","15_16","15_18","16_16","17_17","18_18","19_19","19_20","1_1","1_39","20_20","21_21","22_22","22_23","22_38","23_23","23_38","24_24","24_38","25_25","25_38","26_26","26_28","26_38","27_27","28_28","29_29","29_38","2_2","2_38","30_30","30_38","31_31","31_38","32_32","32_38","33_33","33_34","33_38","34_34","34_38","35_35","35_38","36_36","37_37","38_38","39_39","3_3","3_38","3_4","3_5","4_4","5_38","5_5","6_38","6_6","7_38","7_7","8_10","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Experiencer_focus"]] binary;
var z2[Assignment["Make_agreement_on_action"]] binary;
var z3[Assignment["Using"]] binary;
var z4[Assignment["Eclipse"]] binary;
var z5[Assignment["Transfer"]] binary;
var z6[Assignment["Increment"]] binary;
var z7[Assignment["Health_response"]] binary;
var z8[Assignment["Weapon"]] binary;
var z9[Assignment["Artifact"]] binary;
var z10[Assignment["Supply"]] binary;
var z11[Assignment["Education_teaching"]] binary;
var z12[Assignment["Origin"]] binary;
var z13[Assignment["Weapon"]] binary;
var z14[Assignment["Expertise"]] binary;
var z15[Assignment["Capability"]] binary;
var z16[Assignment["Using"]] binary;
var z17[Assignment["Supporting"]] binary;
var z18[Assignment["Project"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Experiencer_focus"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Make_agreement_on_action"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Using"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Eclipse"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Transfer"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Increment"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Health_response"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Weapon"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Artifact"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Supply"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Education_teaching"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Origin"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Weapon"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Expertise"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Capability"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Using"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Supporting"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Project"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Experiencer_focus"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Make_agreement_on_action"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Using"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Eclipse"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Transfer"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Health_response"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Education_teaching"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Expertise"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Using"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Supporting"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Project"] : probabilities18[r,s] * z18[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 39};
set G[I] := <0> {"0_0","0_39"}, <1> {"0_39","1_1","1_39"}, <2> {"0_39","1_39","2_2","2_38"}, <3> {"0_39","1_39","2_38","3_3","3_38","3_4","3_5"}, <4> {"0_39","1_39","2_38","3_38","3_4","3_5","4_4"}, <5> {"0_39","1_39","2_38","3_38","3_5","5_38","5_5"}, <6> {"0_39","1_39","2_38","3_38","5_38","6_38","6_6"}, <7> {"0_39","1_39","2_38","3_38","5_38","6_38","7_38","7_7"}, <8> {"0_39","1_39","2_38","3_38","5_38","6_38","7_38","8_10","8_8"}, <9> {"0_39","1_39","2_38","3_38","5_38","6_38","7_38","8_10","9_10","9_9"}, <10> {"0_39","10_10","1_39","2_38","3_38","5_38","6_38","7_38","8_10","9_10"}, <11> {"0_39","11_11","11_38","1_39","2_38","3_38","5_38","6_38","7_38"}, <12> {"0_39","11_38","12_12","12_20","1_39","2_38","3_38","5_38","6_38","7_38"}, <13> {"0_39","11_38","12_20","13_13","1_39","2_38","3_38","5_38","6_38","7_38"}, <14> {"0_39","11_38","12_20","14_14","14_18","1_39","2_38","3_38","5_38","6_38","7_38"}, <15> {"0_39","11_38","12_20","14_18","15_15","15_16","15_18","1_39","2_38","3_38","5_38","6_38","7_38"}, <16> {"0_39","11_38","12_20","14_18","15_16","15_18","16_16","1_39","2_38","3_38","5_38","6_38","7_38"}, <17> {"0_39","11_38","12_20","14_18","15_18","17_17","1_39","2_38","3_38","5_38","6_38","7_38"}, <18> {"0_39","11_38","12_20","14_18","15_18","18_18","1_39","2_38","3_38","5_38","6_38","7_38"}, <19> {"0_39","11_38","12_20","19_19","19_20","1_39","2_38","3_38","5_38","6_38","7_38"}, <20> {"0_39","11_38","12_20","19_20","1_39","20_20","2_38","3_38","5_38","6_38","7_38"}, <21> {"0_39","11_38","1_39","21_21","2_38","3_38","5_38","6_38","7_38"}, <22> {"0_39","11_38","1_39","22_22","22_23","22_38","2_38","3_38","5_38","6_38","7_38"}, <23> {"0_39","11_38","1_39","22_23","22_38","23_23","23_38","2_38","3_38","5_38","6_38","7_38"}, <24> {"0_39","11_38","1_39","22_38","23_38","24_24","24_38","2_38","3_38","5_38","6_38","7_38"}, <25> {"0_39","11_38","1_39","22_38","23_38","24_38","25_25","25_38","2_38","3_38","5_38","6_38","7_38"}, <26> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_26","26_28","26_38","2_38","3_38","5_38","6_38","7_38"}, <27> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_28","26_38","27_27","2_38","3_38","5_38","6_38","7_38"}, <28> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_28","26_38","28_28","2_38","3_38","5_38","6_38","7_38"}, <29> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_29","29_38","2_38","3_38","5_38","6_38","7_38"}, <30> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_30","30_38","3_38","5_38","6_38","7_38"}, <31> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_31","31_38","3_38","5_38","6_38","7_38"}, <32> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_32","32_38","3_38","5_38","6_38","7_38"}, <33> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_38","33_33","33_34","33_38","3_38","5_38","6_38","7_38"}, <34> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_38","33_34","33_38","34_34","34_38","3_38","5_38","6_38","7_38"}, <35> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_38","33_38","34_38","35_35","35_38","3_38","5_38","6_38","7_38"}, <36> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_38","33_38","34_38","35_38","36_36","3_38","5_38","6_38","7_38"}, <37> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_38","33_38","34_38","35_38","37_37","3_38","5_38","6_38","7_38"}, <38> {"0_39","11_38","1_39","22_38","23_38","24_38","25_38","26_38","29_38","2_38","30_38","31_38","32_38","33_38","34_38","35_38","38_38","3_38","5_38","6_38","7_38"}, <39> {"0_39","1_39","39_39"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Experiencer_focus"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Make_agreement_on_action"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Using"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Eclipse"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Transfer"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Health_response"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Education_teaching"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Expertise"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Using"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Supporting"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Experiencer_focus"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Make_agreement_on_action"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Using"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Eclipse"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Transfer"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Increment"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Health_response"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Weapon"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Artifact"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Supply"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Education_teaching"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Origin"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Weapon"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Expertise"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Capability"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Using"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Supporting"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Project"] do sum <s> in Spans : z18[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Parties","Party_2">,<"Parties","Party_1">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc5 := {<"Donor","Transferors">,<"Recipient","Transferors">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc11 := {<"Precept","Subject">,<"Precept","Skill">,<"Skill","Subject">,<"Fact","Precept">,<"Fact","Qualification">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
set Exc14 := {<"Behavior_product","Knowledge">,<"Behavior_product","Role">,<"Behavior_product","Focal_participant">,<"Behavior_product","Skill">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
set Exc18 := {<"Activity","Salient_entity">};
subto exclusion18: forall <ri,rj> in Exc18 do z18[ri,"-1_-1"] + z18[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

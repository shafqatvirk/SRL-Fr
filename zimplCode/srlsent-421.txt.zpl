# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Attributed_information","Unattributed_information","Assistance","Cause_to_make_progress","Weapon","Weapon","Information","Source_of_getting","Supply","Artifact","Locale_by_use"};
set Roles[Frames] :=  <"Attributed_information"> {"Text","Speaker","Proposition"}, <"Unattributed_information"> {"Reported_fact","Time","Explanation","Duration"}, <"Assistance"> {"Purpose","Time","Goal","Place","Frequency","Degree","Helper","Means","Benefited_party","Domain","Duration","Focal_entity","Manner","Explanation"}, <"Cause_to_make_progress"> {"Purpose","Time","Place","Degree","Rate","Means","Domain","Duration","Particular_iteration","Project","Post_state","Manner","Explanation","Agent","Prior_state"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Information"> {"Means_of_Gathering","Source","Topic","Information","Cognizer"}, <"Source_of_getting"> {"Goal","Theme","Descriptor","Source"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_1","0_16","0_35","10_10","10_12","10_15","11_11","12_12","13_13","13_14","13_15","14_14","14_15","15_15","16_16","17_17","18_18","18_24","19_19","19_24","1_1","20_20","20_24","21_21","22_22","23_23","24_24","25_25","26_26","26_27","27_27","28_28","29_29","29_34","2_16","2_2","30_30","30_34","31_31","31_32","31_34","32_32","33_33","34_34","35_35","3_3","4_15","4_4","5_5","6_15","6_6","7_15","7_7","7_8","8_8","9_15","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Attributed_information"]] binary;
var z1[Assignment["Unattributed_information"]] binary;
var z2[Assignment["Assistance"]] binary;
var z3[Assignment["Cause_to_make_progress"]] binary;
var z4[Assignment["Weapon"]] binary;
var z5[Assignment["Weapon"]] binary;
var z6[Assignment["Information"]] binary;
var z7[Assignment["Source_of_getting"]] binary;
var z8[Assignment["Supply"]] binary;
var z9[Assignment["Artifact"]] binary;
var z10[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Attributed_information"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Unattributed_information"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Assistance"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Cause_to_make_progress"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Weapon"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Weapon"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Information"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Source_of_getting"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Supply"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Artifact"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Locale_by_use"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Attributed_information"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Unattributed_information"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Assistance"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Cause_to_make_progress"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Information"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Source_of_getting"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities10[r,s] * z10[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 35};
set G[I] := <0> {"0_0","0_1","0_16","0_35"}, <1> {"0_1","0_16","0_35","1_1"}, <2> {"0_16","0_35","2_16","2_2"}, <3> {"0_16","0_35","2_16","3_3"}, <4> {"0_16","0_35","2_16","4_15","4_4"}, <5> {"0_16","0_35","2_16","4_15","5_5"}, <6> {"0_16","0_35","2_16","4_15","6_15","6_6"}, <7> {"0_16","0_35","2_16","4_15","6_15","7_15","7_7","7_8"}, <8> {"0_16","0_35","2_16","4_15","6_15","7_15","7_8","8_8"}, <9> {"0_16","0_35","2_16","4_15","6_15","7_15","9_15","9_9"}, <10> {"0_16","0_35","10_10","10_12","10_15","2_16","4_15","6_15","7_15","9_15"}, <11> {"0_16","0_35","10_12","10_15","11_11","2_16","4_15","6_15","7_15","9_15"}, <12> {"0_16","0_35","10_12","10_15","12_12","2_16","4_15","6_15","7_15","9_15"}, <13> {"0_16","0_35","10_15","13_13","13_14","13_15","2_16","4_15","6_15","7_15","9_15"}, <14> {"0_16","0_35","10_15","13_14","13_15","14_14","14_15","2_16","4_15","6_15","7_15","9_15"}, <15> {"0_16","0_35","10_15","13_15","14_15","15_15","2_16","4_15","6_15","7_15","9_15"}, <16> {"0_16","0_35","16_16","2_16"}, <17> {"0_35","17_17"}, <18> {"0_35","18_18","18_24"}, <19> {"0_35","18_24","19_19","19_24"}, <20> {"0_35","18_24","19_24","20_20","20_24"}, <21> {"0_35","18_24","19_24","20_24","21_21"}, <22> {"0_35","18_24","19_24","20_24","22_22"}, <23> {"0_35","18_24","19_24","20_24","23_23"}, <24> {"0_35","18_24","19_24","20_24","24_24"}, <25> {"0_35","25_25"}, <26> {"0_35","26_26","26_27"}, <27> {"0_35","26_27","27_27"}, <28> {"0_35","28_28"}, <29> {"0_35","29_29","29_34"}, <30> {"0_35","29_34","30_30","30_34"}, <31> {"0_35","29_34","30_34","31_31","31_32","31_34"}, <32> {"0_35","29_34","30_34","31_32","31_34","32_32"}, <33> {"0_35","29_34","30_34","31_34","33_33"}, <34> {"0_35","29_34","30_34","31_34","34_34"}, <35> {"0_35","35_35"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Attributed_information"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Unattributed_information"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Assistance"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Cause_to_make_progress"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Information"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Source_of_getting"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Attributed_information"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Unattributed_information"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Assistance"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Cause_to_make_progress"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Weapon"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Weapon"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Information"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Source_of_getting"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Supply"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Artifact"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z10[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

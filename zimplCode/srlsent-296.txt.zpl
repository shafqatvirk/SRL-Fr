# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Quantity","Research","Intentionally_act","Relative_time","Individual_history","Giving","Temporal_collocation","Cause_to_make_progress","Process_completed_state","Weapon","Operate_vehicle","Temporal_subregion","Processing_materials","Reliance","Part_inner_outer","Assistance"};
set Roles[Frames] :=  <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Relative_time"> {"Focal_participant","Interval","Degree","Focal_occasion","Landmark_occasion"}, <"Individual_history"> {"Time","Start_time","End_time","Participant","Events","Time_span","Domain"}, <"Giving"> {"Recipient","Donor","Circumstances","Time","Place","Theme","Purpose","Means","Period_of_iterations","Reason","Depictive","Purpose_of_theme","Manner"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Cause_to_make_progress"> {"Purpose","Time","Place","Degree","Rate","Means","Domain","Duration","Particular_iteration","Project","Post_state","Manner","Explanation","Agent","Prior_state"}, <"Process_completed_state"> {"Process"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Operate_vehicle"> {"Speed","Area","Cotheme","Distance","Depictive","Circumstances","Manner","Explanation","Vehicle","Time","Source","Place","Frequency","Goal","Particular_iteration","Path","Driver","Event"}, <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Processing_materials"> {"Place","Duration","Agent","Result","Material","Dimension","Time","Alterant","Reason","Purpose","Subregion"}, <"Reliance"> {"Instrument","Degree","Benefit","Intermediary","Circumstances","Means","Purpose","Protagonist"}, <"Part_inner_outer"> {"Part_Prop","Part","Whole"}, <"Assistance"> {"Purpose","Time","Goal","Place","Frequency","Degree","Helper","Means","Benefited_party","Domain","Duration","Focal_entity","Manner","Explanation"};
set Spans := {"-1_-1","0_0","0_2","0_35","0_4","0_8","10_10","11_11","11_34","12_12","12_14","12_34","13_13","14_14","15_15","15_34","16_16","16_34","17_17","18_18","19_19","1_1","20_20","21_21","22_22","22_34","23_23","23_24","23_25","23_34","24_24","25_25","25_34","26_26","26_34","27_27","27_29","27_34","28_28","29_29","2_2","30_30","30_34","31_31","31_34","32_32","32_34","33_33","33_34","34_34","35_35","3_3","4_4","5_5","5_8","6_6","6_8","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Quantity"]] binary;
var z1[Assignment["Research"]] binary;
var z2[Assignment["Intentionally_act"]] binary;
var z3[Assignment["Relative_time"]] binary;
var z4[Assignment["Individual_history"]] binary;
var z5[Assignment["Giving"]] binary;
var z6[Assignment["Temporal_collocation"]] binary;
var z7[Assignment["Cause_to_make_progress"]] binary;
var z8[Assignment["Process_completed_state"]] binary;
var z9[Assignment["Weapon"]] binary;
var z10[Assignment["Operate_vehicle"]] binary;
var z11[Assignment["Temporal_subregion"]] binary;
var z12[Assignment["Processing_materials"]] binary;
var z13[Assignment["Reliance"]] binary;
var z14[Assignment["Part_inner_outer"]] binary;
var z15[Assignment["Assistance"]] binary;
param probabilities0[Assignment["Quantity"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Research"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Intentionally_act"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Relative_time"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Individual_history"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Giving"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Temporal_collocation"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Cause_to_make_progress"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Process_completed_state"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Weapon"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Operate_vehicle"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Temporal_subregion"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Processing_materials"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Reliance"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Part_inner_outer"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Assistance"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Quantity"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Research"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Relative_time"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Individual_history"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Giving"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Cause_to_make_progress"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Process_completed_state"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Operate_vehicle"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Temporal_subregion"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Processing_materials"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Reliance"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Part_inner_outer"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Assistance"] : probabilities15[r,s] * z15[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 35};
set G[I] := <0> {"0_0","0_2","0_35","0_4","0_8"}, <1> {"0_2","0_35","0_4","0_8","1_1"}, <2> {"0_2","0_35","0_4","0_8","2_2"}, <3> {"0_35","0_4","0_8","3_3"}, <4> {"0_35","0_4","0_8","4_4"}, <5> {"0_35","0_8","5_5","5_8"}, <6> {"0_35","0_8","5_8","6_6","6_8"}, <7> {"0_35","0_8","5_8","6_8","7_7"}, <8> {"0_35","0_8","5_8","6_8","8_8"}, <9> {"0_35","9_9"}, <10> {"0_35","10_10"}, <11> {"0_35","11_11","11_34"}, <12> {"0_35","11_34","12_12","12_14","12_34"}, <13> {"0_35","11_34","12_14","12_34","13_13"}, <14> {"0_35","11_34","12_14","12_34","14_14"}, <15> {"0_35","11_34","12_34","15_15","15_34"}, <16> {"0_35","11_34","12_34","15_34","16_16","16_34"}, <17> {"0_35","11_34","12_34","15_34","16_34","17_17"}, <18> {"0_35","11_34","12_34","15_34","16_34","18_18"}, <19> {"0_35","11_34","12_34","15_34","16_34","19_19"}, <20> {"0_35","11_34","12_34","15_34","16_34","20_20"}, <21> {"0_35","11_34","12_34","15_34","16_34","21_21"}, <22> {"0_35","11_34","12_34","15_34","16_34","22_22","22_34"}, <23> {"0_35","11_34","12_34","15_34","16_34","22_34","23_23","23_24","23_25","23_34"}, <24> {"0_35","11_34","12_34","15_34","16_34","22_34","23_24","23_25","23_34","24_24"}, <25> {"0_35","11_34","12_34","15_34","16_34","22_34","23_25","23_34","25_25","25_34"}, <26> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_26","26_34"}, <27> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_27","27_29","27_34"}, <28> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_29","27_34","28_28"}, <29> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_29","27_34","29_29"}, <30> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_34","30_30","30_34"}, <31> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_34","30_34","31_31","31_34"}, <32> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_34","30_34","31_34","32_32","32_34"}, <33> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_34","30_34","31_34","32_34","33_33","33_34"}, <34> {"0_35","11_34","12_34","15_34","16_34","22_34","23_34","25_34","26_34","27_34","30_34","31_34","32_34","33_34","34_34"}, <35> {"0_35","35_35"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Relative_time"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Individual_history"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Giving"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Cause_to_make_progress"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Process_completed_state"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Operate_vehicle"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Processing_materials"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Reliance"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Part_inner_outer"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Assistance"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Quantity"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Research"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Relative_time"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Individual_history"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Giving"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Cause_to_make_progress"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Process_completed_state"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Weapon"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Operate_vehicle"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Processing_materials"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Reliance"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Part_inner_outer"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Assistance"] do sum <s> in Spans : z15[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Individuals","Mass">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc6 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc10 := {<"Area","Source">,<"Area","Goal">,<"Area","Path">};
subto exclusion10: forall <ri,rj> in Exc10 do z10[ri,"-1_-1"] + z10[rj,"-1_-1"] >= 1;
set Exc13 := {<"Instrument","Means">,<"Benefit","Purpose">,<"Intermediary","Means">,<"Instrument","Intermediary">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

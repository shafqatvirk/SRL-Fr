# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Buildings","Natural_features","Categorization","Custom","Locale","Locale_by_use","Bringing","Cardinal_numbers","Calendric_unit","Statement","Part_ordered_segments"};
set Roles[Frames] :=  <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Categorization"> {"Cognizer","Item","Manner","Explanation","Criteria","Time","Circumstances","Category","Concessive"}, <"Custom"> {"Protagonist","Place","Descriptor","Behavior","Society","Domain"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Bringing"> {"Duration","Area","Constant_location","Theme","Means","Depictive","Agent","Manner","Explanation","Distance","Co_participant","Time","Source","Beneficiary","Degree","Place","Frequency","Goal","Purpose","Particular_iteration","Path","Carrier"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Part_ordered_segments"> {"Part","Whole","Part_prop","Ordinality"};
set Spans := {"-1_-1","0_0","0_2","0_49","10_10","10_19","11_11","12_12","13_13","14_14","14_19","15_15","15_19","16_16","16_18","17_17","18_18","19_19","1_1","20_20","21_21","22_22","23_23","23_48","24_24","24_48","25_25","25_27","25_28","25_48","26_26","27_27","28_28","28_48","29_29","29_48","2_2","30_30","30_32","31_31","31_32","32_32","33_33","33_34","34_34","35_35","35_38","36_36","36_38","37_37","38_38","39_39","3_3","3_49","40_40","40_48","41_41","41_48","42_42","42_48","43_43","43_45","43_48","44_44","45_45","46_46","46_48","47_47","47_48","48_48","49_49","4_4","4_48","5_5","5_7","6_6","6_7","7_7","8_48","8_8","9_22","9_48","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Buildings"]] binary;
var z1[Assignment["Natural_features"]] binary;
var z2[Assignment["Categorization"]] binary;
var z3[Assignment["Custom"]] binary;
var z4[Assignment["Locale"]] binary;
var z5[Assignment["Locale_by_use"]] binary;
var z6[Assignment["Bringing"]] binary;
var z7[Assignment["Cardinal_numbers"]] binary;
var z8[Assignment["Calendric_unit"]] binary;
var z9[Assignment["Statement"]] binary;
var z10[Assignment["Part_ordered_segments"]] binary;
param probabilities0[Assignment["Buildings"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Natural_features"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Categorization"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Custom"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Locale"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locale_by_use"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Bringing"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Cardinal_numbers"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Calendric_unit"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Statement"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Part_ordered_segments"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Buildings"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Categorization"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Custom"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Bringing"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Part_ordered_segments"] : probabilities10[r,s] * z10[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 49};
set G[I] := <0> {"0_0","0_2","0_49"}, <1> {"0_2","0_49","1_1"}, <2> {"0_2","0_49","2_2"}, <3> {"0_49","3_3","3_49"}, <4> {"0_49","3_49","4_4","4_48"}, <5> {"0_49","3_49","4_48","5_5","5_7"}, <6> {"0_49","3_49","4_48","5_7","6_6","6_7"}, <7> {"0_49","3_49","4_48","5_7","6_7","7_7"}, <8> {"0_49","3_49","4_48","8_48","8_8"}, <9> {"0_49","3_49","4_48","8_48","9_22","9_48","9_9"}, <10> {"0_49","10_10","10_19","3_49","4_48","8_48","9_22","9_48"}, <11> {"0_49","10_19","11_11","3_49","4_48","8_48","9_22","9_48"}, <12> {"0_49","10_19","12_12","3_49","4_48","8_48","9_22","9_48"}, <13> {"0_49","10_19","13_13","3_49","4_48","8_48","9_22","9_48"}, <14> {"0_49","10_19","14_14","14_19","3_49","4_48","8_48","9_22","9_48"}, <15> {"0_49","10_19","14_19","15_15","15_19","3_49","4_48","8_48","9_22","9_48"}, <16> {"0_49","10_19","14_19","15_19","16_16","16_18","3_49","4_48","8_48","9_22","9_48"}, <17> {"0_49","10_19","14_19","15_19","16_18","17_17","3_49","4_48","8_48","9_22","9_48"}, <18> {"0_49","10_19","14_19","15_19","16_18","18_18","3_49","4_48","8_48","9_22","9_48"}, <19> {"0_49","10_19","14_19","15_19","19_19","3_49","4_48","8_48","9_22","9_48"}, <20> {"0_49","20_20","3_49","4_48","8_48","9_22","9_48"}, <21> {"0_49","21_21","3_49","4_48","8_48","9_22","9_48"}, <22> {"0_49","22_22","3_49","4_48","8_48","9_22","9_48"}, <23> {"0_49","23_23","23_48","3_49","4_48","8_48","9_48"}, <24> {"0_49","23_48","24_24","24_48","3_49","4_48","8_48","9_48"}, <25> {"0_49","23_48","24_48","25_25","25_27","25_28","25_48","3_49","4_48","8_48","9_48"}, <26> {"0_49","23_48","24_48","25_27","25_28","25_48","26_26","3_49","4_48","8_48","9_48"}, <27> {"0_49","23_48","24_48","25_27","25_28","25_48","27_27","3_49","4_48","8_48","9_48"}, <28> {"0_49","23_48","24_48","25_28","25_48","28_28","28_48","3_49","4_48","8_48","9_48"}, <29> {"0_49","23_48","24_48","25_48","28_48","29_29","29_48","3_49","4_48","8_48","9_48"}, <30> {"0_49","23_48","24_48","25_48","28_48","29_48","30_30","30_32","3_49","4_48","8_48","9_48"}, <31> {"0_49","23_48","24_48","25_48","28_48","29_48","30_32","31_31","31_32","3_49","4_48","8_48","9_48"}, <32> {"0_49","23_48","24_48","25_48","28_48","29_48","30_32","31_32","32_32","3_49","4_48","8_48","9_48"}, <33> {"0_49","23_48","24_48","25_48","28_48","29_48","33_33","33_34","3_49","4_48","8_48","9_48"}, <34> {"0_49","23_48","24_48","25_48","28_48","29_48","33_34","34_34","3_49","4_48","8_48","9_48"}, <35> {"0_49","23_48","24_48","25_48","28_48","29_48","35_35","35_38","3_49","4_48","8_48","9_48"}, <36> {"0_49","23_48","24_48","25_48","28_48","29_48","35_38","36_36","36_38","3_49","4_48","8_48","9_48"}, <37> {"0_49","23_48","24_48","25_48","28_48","29_48","35_38","36_38","37_37","3_49","4_48","8_48","9_48"}, <38> {"0_49","23_48","24_48","25_48","28_48","29_48","35_38","36_38","38_38","3_49","4_48","8_48","9_48"}, <39> {"0_49","23_48","24_48","25_48","28_48","29_48","39_39","3_49","4_48","8_48","9_48"}, <40> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_40","40_48","4_48","8_48","9_48"}, <41> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_41","41_48","4_48","8_48","9_48"}, <42> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_42","42_48","4_48","8_48","9_48"}, <43> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_48","43_43","43_45","43_48","4_48","8_48","9_48"}, <44> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_48","43_45","43_48","44_44","4_48","8_48","9_48"}, <45> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_48","43_45","43_48","45_45","4_48","8_48","9_48"}, <46> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_48","43_48","46_46","46_48","4_48","8_48","9_48"}, <47> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_48","43_48","46_48","47_47","47_48","4_48","8_48","9_48"}, <48> {"0_49","23_48","24_48","25_48","28_48","29_48","3_49","40_48","41_48","42_48","43_48","46_48","47_48","48_48","4_48","8_48","9_48"}, <49> {"0_49","3_49","49_49"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Categorization"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Custom"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Bringing"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Part_ordered_segments"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Buildings"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Categorization"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Custom"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Locale"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Bringing"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Statement"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Part_ordered_segments"] do sum <s> in Spans : z10[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Protagonist","Society">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc6 := {<"Area","Source">,<"Area","Goal">,<"Area","Path">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

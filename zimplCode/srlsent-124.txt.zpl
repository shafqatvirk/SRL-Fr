# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Motion","Locative_relation","Physical_artworks","Locale_by_use","Direction","Part_orientational","Compatibility","Buildings","Cardinal_numbers","Quantity","Buildings","Departing"};
set Roles[Frames] :=  <"Motion"> {"Speed","Duration","Area","Theme","Distance","Depictive","Manner","Result","Direction","Time","Source","Containing_event","Place","Goal","Purpose","Path","Carrier","Path_shape"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Physical_artworks"> {"Type","Place","State_of_represented","Represented","Material","Descriptor","Artifact","Time_of_creation","Creator"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Direction"> {"Base_position","Independent_variable","Degree","Path"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Compatibility"> {"Item_2","Item_1","Degree","Items","Parameter"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Departing"> {"Speed","Place","Theme","Cotheme","Distance","Depictive","Circumstances","Source","Manner","Journey","Explanation","Time","Reason","Containing_event","Event_description","Re_encoding","Goal","Duration_of_end_state","Purpose","Frequency","Path","Mode_of_transportation"};
set Spans := {"-1_-1","0_0","0_32","0_7","10_10","10_12","10_15","11_11","12_12","13_13","13_15","14_14","14_15","15_15","16_16","17_17","17_20","17_22","17_31","18_18","19_19","1_1","1_7","20_20","21_21","22_22","23_23","23_31","24_24","24_27","24_31","25_25","26_26","27_27","28_28","28_31","29_29","29_31","2_2","2_4","2_7","30_30","30_31","31_31","32_32","3_3","4_4","5_5","5_7","6_6","6_7","7_7","8_8","9_15","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Motion"]] binary;
var z1[Assignment["Locative_relation"]] binary;
var z2[Assignment["Physical_artworks"]] binary;
var z3[Assignment["Locale_by_use"]] binary;
var z4[Assignment["Direction"]] binary;
var z5[Assignment["Part_orientational"]] binary;
var z6[Assignment["Compatibility"]] binary;
var z7[Assignment["Buildings"]] binary;
var z8[Assignment["Cardinal_numbers"]] binary;
var z9[Assignment["Quantity"]] binary;
var z10[Assignment["Buildings"]] binary;
var z11[Assignment["Departing"]] binary;
param probabilities0[Assignment["Motion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Locative_relation"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Physical_artworks"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locale_by_use"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Direction"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Part_orientational"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Compatibility"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Buildings"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Cardinal_numbers"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Quantity"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Buildings"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Departing"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Motion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Physical_artworks"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Direction"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Compatibility"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Departing"] : probabilities11[r,s] * z11[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 32};
set G[I] := <0> {"0_0","0_32","0_7"}, <1> {"0_32","0_7","1_1","1_7"}, <2> {"0_32","0_7","1_7","2_2","2_4","2_7"}, <3> {"0_32","0_7","1_7","2_4","2_7","3_3"}, <4> {"0_32","0_7","1_7","2_4","2_7","4_4"}, <5> {"0_32","0_7","1_7","2_7","5_5","5_7"}, <6> {"0_32","0_7","1_7","2_7","5_7","6_6","6_7"}, <7> {"0_32","0_7","1_7","2_7","5_7","6_7","7_7"}, <8> {"0_32","8_8"}, <9> {"0_32","9_15","9_9"}, <10> {"0_32","10_10","10_12","10_15","9_15"}, <11> {"0_32","10_12","10_15","11_11","9_15"}, <12> {"0_32","10_12","10_15","12_12","9_15"}, <13> {"0_32","10_15","13_13","13_15","9_15"}, <14> {"0_32","10_15","13_15","14_14","14_15","9_15"}, <15> {"0_32","10_15","13_15","14_15","15_15","9_15"}, <16> {"0_32","16_16"}, <17> {"0_32","17_17","17_20","17_22","17_31"}, <18> {"0_32","17_20","17_22","17_31","18_18"}, <19> {"0_32","17_20","17_22","17_31","19_19"}, <20> {"0_32","17_20","17_22","17_31","20_20"}, <21> {"0_32","17_22","17_31","21_21"}, <22> {"0_32","17_22","17_31","22_22"}, <23> {"0_32","17_31","23_23","23_31"}, <24> {"0_32","17_31","23_31","24_24","24_27","24_31"}, <25> {"0_32","17_31","23_31","24_27","24_31","25_25"}, <26> {"0_32","17_31","23_31","24_27","24_31","26_26"}, <27> {"0_32","17_31","23_31","24_27","24_31","27_27"}, <28> {"0_32","17_31","23_31","24_31","28_28","28_31"}, <29> {"0_32","17_31","23_31","24_31","28_31","29_29","29_31"}, <30> {"0_32","17_31","23_31","24_31","28_31","29_31","30_30","30_31"}, <31> {"0_32","17_31","23_31","24_31","28_31","29_31","30_31","31_31"}, <32> {"0_32","32_32"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Motion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Physical_artworks"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Direction"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Compatibility"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Departing"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Motion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Physical_artworks"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Direction"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Compatibility"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Buildings"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Quantity"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Buildings"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Departing"] do sum <s> in Spans : z11[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Area","Direction">,<"Area","Distance">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc1 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc6 := {<"Item_2","Items">,<"Item_1","Items">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc9 := {<"Individuals","Mass">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr6 := {<"Item_1","Item_2">};
subto require6: forall <ri,rj> in Reqr6 do z6[ri,"-1_-1"] - z6[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Part_orientational","Sign_agreement","Documents","Proliferating_in_number","Weapon","Weapon","Political_locales","Political_locales","Electricity","Organization","Scrutiny","Relative_time","Verification","Completeness","Weapon","Destroying"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Sign_agreement"> {"Purpose","Time","Signatory","Place","Role","Reason","Depictive","Manner","Co_participant","Beneficiary","Agreement","Signature"}, <"Documents"> {"Obligation","Descriptor","Specification","Status","Issuer","Document","Bearer"}, <"Proliferating_in_number"> {"Difference","Circumstances","Final_number","Time","Final_state","Place","Degree","Set","Final_correlate","Duration","Attribute","Initial_correlate","Initial_number","Manner","Speed"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Electricity"> {"Electricity","Descriptor","Source","Use"}, <"Organization"> {"Period_of_existence","Members","Place","Name","Container_possessor","Organization","Purpose","Descriptor"}, <"Scrutiny"> {"Instrument","Cognizer","Phenomenon","Degree","Manner","Ground","Time","Means","Medium","Purpose","Direction"}, <"Relative_time"> {"Focal_participant","Interval","Degree","Focal_occasion","Landmark_occasion"}, <"Verification"> {"Purpose","Inspector","Time","Descriptor","Place","Degree","Means","Unconfirmed_content","Condition","Epistemic_stance","Manner","Explanation","Medium"}, <"Completeness"> {"Degree","Whole","Time"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Destroying"> {"Purpose","Result","Undergoer","Depictive","Containing_event","Instrument","Place","Frequency","Degree","Destroyer","Means","Cause","Reason","Manner","Explanation","Time"};
set Spans := {"-1_-1","0_0","0_1","0_19","0_44","10_10","10_16","11_11","11_16","12_12","12_13","12_16","13_13","13_16","14_14","14_15","14_16","15_15","15_16","16_16","17_17","17_19","18_18","18_19","19_19","1_1","20_20","21_21","21_23","22_22","23_23","24_24","24_25","25_25","26_26","27_27","28_28","28_31","28_34","29_29","2_19","2_2","30_30","31_31","32_32","32_33","32_34","33_33","33_34","34_34","35_35","36_36","37_37","37_43","38_38","38_39","38_43","39_39","3_3","3_5","40_40","40_43","41_41","41_43","42_42","43_43","44_44","4_4","4_5","5_5","6_6","6_8","7_7","7_8","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Part_orientational"]] binary;
var z2[Assignment["Sign_agreement"]] binary;
var z3[Assignment["Documents"]] binary;
var z4[Assignment["Proliferating_in_number"]] binary;
var z5[Assignment["Weapon"]] binary;
var z6[Assignment["Weapon"]] binary;
var z7[Assignment["Political_locales"]] binary;
var z8[Assignment["Political_locales"]] binary;
var z9[Assignment["Electricity"]] binary;
var z10[Assignment["Organization"]] binary;
var z11[Assignment["Scrutiny"]] binary;
var z12[Assignment["Relative_time"]] binary;
var z13[Assignment["Verification"]] binary;
var z14[Assignment["Completeness"]] binary;
var z15[Assignment["Weapon"]] binary;
var z16[Assignment["Destroying"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Part_orientational"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Sign_agreement"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Documents"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Proliferating_in_number"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Weapon"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Weapon"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Political_locales"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Political_locales"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Electricity"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Organization"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Scrutiny"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Relative_time"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Verification"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Completeness"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Weapon"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Destroying"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Sign_agreement"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Documents"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Proliferating_in_number"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Electricity"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Organization"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Scrutiny"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Relative_time"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Verification"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Completeness"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Destroying"] : probabilities16[r,s] * z16[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 44};
set G[I] := <0> {"0_0","0_1","0_19","0_44"}, <1> {"0_1","0_19","0_44","1_1"}, <2> {"0_19","0_44","2_19","2_2"}, <3> {"0_19","0_44","2_19","3_3","3_5"}, <4> {"0_19","0_44","2_19","3_5","4_4","4_5"}, <5> {"0_19","0_44","2_19","3_5","4_5","5_5"}, <6> {"0_19","0_44","2_19","6_6","6_8"}, <7> {"0_19","0_44","2_19","6_8","7_7","7_8"}, <8> {"0_19","0_44","2_19","6_8","7_8","8_8"}, <9> {"0_19","0_44","2_19","9_9"}, <10> {"0_19","0_44","10_10","10_16","2_19"}, <11> {"0_19","0_44","10_16","11_11","11_16","2_19"}, <12> {"0_19","0_44","10_16","11_16","12_12","12_13","12_16","2_19"}, <13> {"0_19","0_44","10_16","11_16","12_13","12_16","13_13","13_16","2_19"}, <14> {"0_19","0_44","10_16","11_16","12_16","13_16","14_14","14_15","14_16","2_19"}, <15> {"0_19","0_44","10_16","11_16","12_16","13_16","14_15","14_16","15_15","15_16","2_19"}, <16> {"0_19","0_44","10_16","11_16","12_16","13_16","14_16","15_16","16_16","2_19"}, <17> {"0_19","0_44","17_17","17_19","2_19"}, <18> {"0_19","0_44","17_19","18_18","18_19","2_19"}, <19> {"0_19","0_44","17_19","18_19","19_19","2_19"}, <20> {"0_44","20_20"}, <21> {"0_44","21_21","21_23"}, <22> {"0_44","21_23","22_22"}, <23> {"0_44","21_23","23_23"}, <24> {"0_44","24_24","24_25"}, <25> {"0_44","24_25","25_25"}, <26> {"0_44","26_26"}, <27> {"0_44","27_27"}, <28> {"0_44","28_28","28_31","28_34"}, <29> {"0_44","28_31","28_34","29_29"}, <30> {"0_44","28_31","28_34","30_30"}, <31> {"0_44","28_31","28_34","31_31"}, <32> {"0_44","28_34","32_32","32_33","32_34"}, <33> {"0_44","28_34","32_33","32_34","33_33","33_34"}, <34> {"0_44","28_34","32_34","33_34","34_34"}, <35> {"0_44","35_35"}, <36> {"0_44","36_36"}, <37> {"0_44","37_37","37_43"}, <38> {"0_44","37_43","38_38","38_39","38_43"}, <39> {"0_44","37_43","38_39","38_43","39_39"}, <40> {"0_44","37_43","38_43","40_40","40_43"}, <41> {"0_44","37_43","38_43","40_43","41_41","41_43"}, <42> {"0_44","37_43","38_43","40_43","41_43","42_42"}, <43> {"0_44","37_43","38_43","40_43","41_43","43_43"}, <44> {"0_44","44_44"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Sign_agreement"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Documents"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Proliferating_in_number"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Electricity"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Organization"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Scrutiny"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Relative_time"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Verification"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Completeness"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Destroying"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Sign_agreement"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Documents"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Proliferating_in_number"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Weapon"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Weapon"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Electricity"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Organization"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Scrutiny"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Relative_time"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Verification"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Completeness"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Weapon"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Destroying"] do sum <s> in Spans : z16[r,s] == 1;
#pairwise exclusion constraint
set Exc16 := {<"Cause","Destroyer">,<"Cause","Means">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

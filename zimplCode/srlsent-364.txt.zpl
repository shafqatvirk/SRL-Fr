# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Existence","Concessive","Quantity","Operating_a_system","Research","Locale_by_use","Inclusion","Weapon","Research","Locale_by_use","Weapon","Scrutiny","Locale_by_use","Research","Locale_by_use"};
set Roles[Frames] :=  <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"}, <"Concessive"> {"Main_statement","Statement"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Operating_a_system"> {"Duration","Place","System","Manner","Time","Means","Purpose","Operator"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Scrutiny"> {"Instrument","Cognizer","Phenomenon","Degree","Manner","Ground","Time","Means","Medium","Purpose","Direction"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_38","10_10","10_11","11_11","12_12","13_13","13_37","14_14","14_19","14_37","15_15","16_16","17_17","18_18","19_19","1_1","20_20","20_37","21_21","21_26","21_37","22_22","23_23","24_24","25_25","26_26","27_27","28_28","29_29","2_2","30_30","31_31","32_32","33_33","33_34","33_35","34_34","34_35","35_35","36_36","36_37","37_37","38_38","3_3","4_37","4_4","5_5","6_6","6_9","7_7","7_9","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Existence"]] binary;
var z1[Assignment["Concessive"]] binary;
var z2[Assignment["Quantity"]] binary;
var z3[Assignment["Operating_a_system"]] binary;
var z4[Assignment["Research"]] binary;
var z5[Assignment["Locale_by_use"]] binary;
var z6[Assignment["Inclusion"]] binary;
var z7[Assignment["Weapon"]] binary;
var z8[Assignment["Research"]] binary;
var z9[Assignment["Locale_by_use"]] binary;
var z10[Assignment["Weapon"]] binary;
var z11[Assignment["Scrutiny"]] binary;
var z12[Assignment["Locale_by_use"]] binary;
var z13[Assignment["Research"]] binary;
var z14[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Existence"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Concessive"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Quantity"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Operating_a_system"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Research"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locale_by_use"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Inclusion"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Weapon"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Research"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Locale_by_use"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Weapon"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Scrutiny"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Locale_by_use"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Research"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Locale_by_use"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Existence"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Concessive"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Operating_a_system"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Research"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Research"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Scrutiny"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Research"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities14[r,s] * z14[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 38};
set G[I] := <0> {"0_0","0_38"}, <1> {"0_38","1_1"}, <2> {"0_38","2_2"}, <3> {"0_38","3_3"}, <4> {"0_38","4_37","4_4"}, <5> {"0_38","4_37","5_5"}, <6> {"0_38","4_37","6_6","6_9"}, <7> {"0_38","4_37","6_9","7_7","7_9"}, <8> {"0_38","4_37","6_9","7_9","8_8"}, <9> {"0_38","4_37","6_9","7_9","9_9"}, <10> {"0_38","10_10","10_11","4_37"}, <11> {"0_38","10_11","11_11","4_37"}, <12> {"0_38","12_12","4_37"}, <13> {"0_38","13_13","13_37","4_37"}, <14> {"0_38","13_37","14_14","14_19","14_37","4_37"}, <15> {"0_38","13_37","14_19","14_37","15_15","4_37"}, <16> {"0_38","13_37","14_19","14_37","16_16","4_37"}, <17> {"0_38","13_37","14_19","14_37","17_17","4_37"}, <18> {"0_38","13_37","14_19","14_37","18_18","4_37"}, <19> {"0_38","13_37","14_19","14_37","19_19","4_37"}, <20> {"0_38","13_37","14_37","20_20","20_37","4_37"}, <21> {"0_38","13_37","14_37","20_37","21_21","21_26","21_37","4_37"}, <22> {"0_38","13_37","14_37","20_37","21_26","21_37","22_22","4_37"}, <23> {"0_38","13_37","14_37","20_37","21_26","21_37","23_23","4_37"}, <24> {"0_38","13_37","14_37","20_37","21_26","21_37","24_24","4_37"}, <25> {"0_38","13_37","14_37","20_37","21_26","21_37","25_25","4_37"}, <26> {"0_38","13_37","14_37","20_37","21_26","21_37","26_26","4_37"}, <27> {"0_38","13_37","14_37","20_37","21_37","27_27","4_37"}, <28> {"0_38","13_37","14_37","20_37","21_37","28_28","4_37"}, <29> {"0_38","13_37","14_37","20_37","21_37","29_29","4_37"}, <30> {"0_38","13_37","14_37","20_37","21_37","30_30","4_37"}, <31> {"0_38","13_37","14_37","20_37","21_37","31_31","4_37"}, <32> {"0_38","13_37","14_37","20_37","21_37","32_32","4_37"}, <33> {"0_38","13_37","14_37","20_37","21_37","33_33","33_34","33_35","4_37"}, <34> {"0_38","13_37","14_37","20_37","21_37","33_34","33_35","34_34","34_35","4_37"}, <35> {"0_38","13_37","14_37","20_37","21_37","33_35","34_35","35_35","4_37"}, <36> {"0_38","13_37","14_37","20_37","21_37","36_36","36_37","4_37"}, <37> {"0_38","13_37","14_37","20_37","21_37","36_37","37_37","4_37"}, <38> {"0_38","38_38"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Concessive"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Operating_a_system"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Scrutiny"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Existence"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Concessive"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Quantity"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Operating_a_system"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Research"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Weapon"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Research"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Weapon"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Scrutiny"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Research"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z14[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Individuals","Mass">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

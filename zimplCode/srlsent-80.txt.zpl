# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Frequency","Vocalizations","Expectation","Locative_relation","Evoking","Natural_features","Natural_features","Defend","Collaboration","Relational_natural_features","Obviousness","Locative_relation"};
set Roles[Frames] :=  <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"}, <"Vocalizations"> {"Location_of_sound_source","Sound_source","Internal_cause","Degree","Reason"}, <"Expectation"> {"Evidence","Phenomenon","Topic","Manner","Depictive","Degree","Cognizer"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Evoking"> {"Duration","Cognizer","Phenomenon","Degree","Manner","Time","Feature","Reason","Stimulus"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Defend"> {"Defender","Place","Instrument","Manner","Victim","Assailant","Means","Purpose","Depictive","Reason"}, <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"Relational_natural_features"> {"Focal_feature","Relative_location","Landmark_feature","Container_possessor"}, <"Obviousness"> {"Attribute","Perceiver","Phenomenon","Degree","Time","Evidence","Particular_iteration","Direction","Location_of_protagonist"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"};
set Spans := {"-1_-1","0_0","0_2","0_36","0_4","10_10","10_35","11_11","12_12","12_35","13_13","13_14","13_31","14_14","14_31","15_15","15_31","16_16","16_17","16_31","17_17","18_18","19_19","1_1","20_20","21_21","22_22","23_23","24_24","24_30","25_25","25_30","26_26","27_27","27_28","27_30","28_28","28_30","29_29","29_30","2_2","30_30","31_31","32_32","32_35","33_33","33_35","34_34","34_35","35_35","36_36","3_3","3_4","4_4","5_5","6_6","6_8","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Frequency"]] binary;
var z1[Assignment["Vocalizations"]] binary;
var z2[Assignment["Expectation"]] binary;
var z3[Assignment["Locative_relation"]] binary;
var z4[Assignment["Evoking"]] binary;
var z5[Assignment["Natural_features"]] binary;
var z6[Assignment["Natural_features"]] binary;
var z7[Assignment["Defend"]] binary;
var z8[Assignment["Collaboration"]] binary;
var z9[Assignment["Relational_natural_features"]] binary;
var z10[Assignment["Obviousness"]] binary;
var z11[Assignment["Locative_relation"]] binary;
param probabilities0[Assignment["Frequency"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Vocalizations"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Expectation"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locative_relation"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Evoking"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Natural_features"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Natural_features"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Defend"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Collaboration"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Relational_natural_features"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Obviousness"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Locative_relation"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Frequency"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Vocalizations"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Expectation"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Evoking"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Defend"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Collaboration"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Relational_natural_features"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Obviousness"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities11[r,s] * z11[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 36};
set G[I] := <0> {"0_0","0_2","0_36","0_4"}, <1> {"0_2","0_36","0_4","1_1"}, <2> {"0_2","0_36","0_4","2_2"}, <3> {"0_36","0_4","3_3","3_4"}, <4> {"0_36","0_4","3_4","4_4"}, <5> {"0_36","5_5"}, <6> {"0_36","6_6","6_8"}, <7> {"0_36","6_8","7_7"}, <8> {"0_36","6_8","8_8"}, <9> {"0_36","9_9"}, <10> {"0_36","10_10","10_35"}, <11> {"0_36","10_35","11_11"}, <12> {"0_36","10_35","12_12","12_35"}, <13> {"0_36","10_35","12_35","13_13","13_14","13_31"}, <14> {"0_36","10_35","12_35","13_14","13_31","14_14","14_31"}, <15> {"0_36","10_35","12_35","13_31","14_31","15_15","15_31"}, <16> {"0_36","10_35","12_35","13_31","14_31","15_31","16_16","16_17","16_31"}, <17> {"0_36","10_35","12_35","13_31","14_31","15_31","16_17","16_31","17_17"}, <18> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","18_18"}, <19> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","19_19"}, <20> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","20_20"}, <21> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","21_21"}, <22> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","22_22"}, <23> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","23_23"}, <24> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_24","24_30"}, <25> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_30","25_25","25_30"}, <26> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_30","25_30","26_26"}, <27> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_30","25_30","27_27","27_28","27_30"}, <28> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_30","25_30","27_28","27_30","28_28","28_30"}, <29> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_30","25_30","27_30","28_30","29_29","29_30"}, <30> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","24_30","25_30","27_30","28_30","29_30","30_30"}, <31> {"0_36","10_35","12_35","13_31","14_31","15_31","16_31","31_31"}, <32> {"0_36","10_35","12_35","32_32","32_35"}, <33> {"0_36","10_35","12_35","32_35","33_33","33_35"}, <34> {"0_36","10_35","12_35","32_35","33_35","34_34","34_35"}, <35> {"0_36","10_35","12_35","32_35","33_35","34_35","35_35"}, <36> {"0_36","36_36"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Vocalizations"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Expectation"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Evoking"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Defend"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Relational_natural_features"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Obviousness"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Frequency"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Vocalizations"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Expectation"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Evoking"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Defend"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Relational_natural_features"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Obviousness"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z11[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc3 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc8 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc11 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr8 := {<"Partner_1","Partner_2">};
subto require8: forall <ri,rj> in Reqr8 do z8[ri,"-1_-1"] - z8[rj,"-1_-1"] == 0;

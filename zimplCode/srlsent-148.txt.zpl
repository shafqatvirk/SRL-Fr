# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Possession","Frequency","Cardinal_numbers","Calendric_unit","Relational_quantity","Death","Event","Cardinal_numbers","Calendric_unit","Sign","Sign"};
set Roles[Frames] :=  <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Death"> {"Place","Sub_event","Result","Degree","Manner","Time","Protagonist","Reason","Depictive","Cause"}, <"Event"> {"Time","Duration","Place","Manner","Reason","Event","Frequency"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Sign"> {"Degree","Indicator","Indicated"}, <"Sign"> {"Degree","Indicator","Indicated"};
set Spans := {"-1_-1","0_0","0_22","10_10","10_21","11_11","11_12","11_21","12_12","12_21","13_13","13_21","14_14","14_16","15_15","15_16","16_16","17_17","17_21","18_18","18_19","18_21","19_19","1_1","1_22","20_20","20_21","21_21","22_22","2_2","2_21","2_4","3_3","4_4","5_21","5_5","6_21","6_6","6_8","6_9","7_7","8_8","9_21","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Possession"]] binary;
var z1[Assignment["Frequency"]] binary;
var z2[Assignment["Cardinal_numbers"]] binary;
var z3[Assignment["Calendric_unit"]] binary;
var z4[Assignment["Relational_quantity"]] binary;
var z5[Assignment["Death"]] binary;
var z6[Assignment["Event"]] binary;
var z7[Assignment["Cardinal_numbers"]] binary;
var z8[Assignment["Calendric_unit"]] binary;
var z9[Assignment["Sign"]] binary;
var z10[Assignment["Sign"]] binary;
param probabilities0[Assignment["Possession"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Frequency"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Cardinal_numbers"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Calendric_unit"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Relational_quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Death"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Event"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Cardinal_numbers"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Calendric_unit"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Sign"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Sign"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Possession"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Frequency"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Death"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Event"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Sign"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Sign"] : probabilities10[r,s] * z10[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 22};
set G[I] := <0> {"0_0","0_22"}, <1> {"0_22","1_1","1_22"}, <2> {"0_22","1_22","2_2","2_21","2_4"}, <3> {"0_22","1_22","2_21","2_4","3_3"}, <4> {"0_22","1_22","2_21","2_4","4_4"}, <5> {"0_22","1_22","2_21","5_21","5_5"}, <6> {"0_22","1_22","2_21","5_21","6_21","6_6","6_8","6_9"}, <7> {"0_22","1_22","2_21","5_21","6_21","6_8","6_9","7_7"}, <8> {"0_22","1_22","2_21","5_21","6_21","6_8","6_9","8_8"}, <9> {"0_22","1_22","2_21","5_21","6_21","6_9","9_21","9_9"}, <10> {"0_22","10_10","10_21","1_22","2_21","5_21","6_21","9_21"}, <11> {"0_22","10_21","11_11","11_12","11_21","1_22","2_21","5_21","6_21","9_21"}, <12> {"0_22","10_21","11_12","11_21","12_12","12_21","1_22","2_21","5_21","6_21","9_21"}, <13> {"0_22","10_21","11_21","12_21","13_13","13_21","1_22","2_21","5_21","6_21","9_21"}, <14> {"0_22","10_21","11_21","12_21","13_21","14_14","14_16","1_22","2_21","5_21","6_21","9_21"}, <15> {"0_22","10_21","11_21","12_21","13_21","14_16","15_15","15_16","1_22","2_21","5_21","6_21","9_21"}, <16> {"0_22","10_21","11_21","12_21","13_21","14_16","15_16","16_16","1_22","2_21","5_21","6_21","9_21"}, <17> {"0_22","10_21","11_21","12_21","13_21","17_17","17_21","1_22","2_21","5_21","6_21","9_21"}, <18> {"0_22","10_21","11_21","12_21","13_21","17_21","18_18","18_19","18_21","1_22","2_21","5_21","6_21","9_21"}, <19> {"0_22","10_21","11_21","12_21","13_21","17_21","18_19","18_21","19_19","1_22","2_21","5_21","6_21","9_21"}, <20> {"0_22","10_21","11_21","12_21","13_21","17_21","18_21","1_22","20_20","20_21","2_21","5_21","6_21","9_21"}, <21> {"0_22","10_21","11_21","12_21","13_21","17_21","18_21","1_22","20_21","21_21","2_21","5_21","6_21","9_21"}, <22> {"0_22","1_22","22_22"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Death"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Event"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Sign"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Sign"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Possession"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Frequency"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Death"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Event"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Sign"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Sign"] do sum <s> in Spans : z10[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

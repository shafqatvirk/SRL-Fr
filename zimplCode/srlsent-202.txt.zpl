# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Residence","Leadership","Observable_body_parts","Leadership","Relational_quantity","Aggregate","Social_event","Being_located","People_by_origin","Increment","Locale","Hostile_encounter","Terrorism","People"};
set Roles[Frames] :=  <"Residence"> {"Co_resident","Manner","Location","Time","Circumstances","Resident","Depictive","Frequency"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Observable_body_parts"> {"Attachment","Descriptor","Possessor","Body_part","Subregion","Orientational_Location"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Social_event"> {"Honoree","Time","Descriptor","Occasion","Place","Frequency","Degree","Refreshment","Period_of_iterations","Attendee","Duration","Host","Social_event","Name","Style"}, <"Being_located"> {"Cotheme","Location","Theme","Time","Place"}, <"People_by_origin"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Hostile_encounter"> {"Purpose","Result","Depictive","Instrument","Place","Degree","Means","Internal_cause","Reason","Particular_iteration","Duration","Sides","Issue","Side_2","Side_1","Manner","Time"}, <"Terrorism"> {"Place","Instrument","Terrorist","Victim","Act","Organization","Purpose","Descriptor"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"};
set Spans := {"-1_-1","0_0","0_51","10_10","10_50","11_11","11_39","11_50","12_12","13_13","14_14","15_15","15_16","16_16","17_17","18_18","18_19","18_28","18_33","19_19","1_1","20_20","20_22","20_25","21_21","22_22","23_23","23_25","24_24","24_25","25_25","26_26","27_27","28_28","29_29","29_33","2_2","30_30","30_32","30_33","31_31","32_32","33_33","34_34","35_35","35_37","36_36","36_37","37_37","38_38","38_39","39_39","3_3","3_4","3_50","40_40","41_41","42_42","43_43","44_44","45_45","45_46","45_50","46_46","46_50","47_47","47_50","48_48","49_49","4_4","50_50","51_51","5_5","5_50","5_6","6_50","6_6","7_50","7_7","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Residence"]] binary;
var z1[Assignment["Leadership"]] binary;
var z2[Assignment["Observable_body_parts"]] binary;
var z3[Assignment["Leadership"]] binary;
var z4[Assignment["Relational_quantity"]] binary;
var z5[Assignment["Aggregate"]] binary;
var z6[Assignment["Social_event"]] binary;
var z7[Assignment["Being_located"]] binary;
var z8[Assignment["People_by_origin"]] binary;
var z9[Assignment["Increment"]] binary;
var z10[Assignment["Locale"]] binary;
var z11[Assignment["Hostile_encounter"]] binary;
var z12[Assignment["Terrorism"]] binary;
var z13[Assignment["People"]] binary;
param probabilities0[Assignment["Residence"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Leadership"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Observable_body_parts"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Leadership"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Relational_quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Aggregate"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Social_event"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Being_located"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["People_by_origin"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Increment"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Locale"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Hostile_encounter"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Terrorism"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["People"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Residence"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Observable_body_parts"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Social_event"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Being_located"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["People_by_origin"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Hostile_encounter"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Terrorism"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["People"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 51};
set G[I] := <0> {"0_0","0_51"}, <1> {"0_51","1_1"}, <2> {"0_51","2_2"}, <3> {"0_51","3_3","3_4","3_50"}, <4> {"0_51","3_4","3_50","4_4"}, <5> {"0_51","3_50","5_5","5_50","5_6"}, <6> {"0_51","3_50","5_50","5_6","6_50","6_6"}, <7> {"0_51","3_50","5_50","6_50","7_50","7_7"}, <8> {"0_51","3_50","5_50","6_50","7_50","8_8","8_9"}, <9> {"0_51","3_50","5_50","6_50","7_50","8_9","9_9"}, <10> {"0_51","10_10","10_50","3_50","5_50","6_50","7_50"}, <11> {"0_51","10_50","11_11","11_39","11_50","3_50","5_50","6_50","7_50"}, <12> {"0_51","10_50","11_39","11_50","12_12","3_50","5_50","6_50","7_50"}, <13> {"0_51","10_50","11_39","11_50","13_13","3_50","5_50","6_50","7_50"}, <14> {"0_51","10_50","11_39","11_50","14_14","3_50","5_50","6_50","7_50"}, <15> {"0_51","10_50","11_39","11_50","15_15","15_16","3_50","5_50","6_50","7_50"}, <16> {"0_51","10_50","11_39","11_50","15_16","16_16","3_50","5_50","6_50","7_50"}, <17> {"0_51","10_50","11_39","11_50","17_17","3_50","5_50","6_50","7_50"}, <18> {"0_51","10_50","11_39","11_50","18_18","18_19","18_28","18_33","3_50","5_50","6_50","7_50"}, <19> {"0_51","10_50","11_39","11_50","18_19","18_28","18_33","19_19","3_50","5_50","6_50","7_50"}, <20> {"0_51","10_50","11_39","11_50","18_28","18_33","20_20","20_22","20_25","3_50","5_50","6_50","7_50"}, <21> {"0_51","10_50","11_39","11_50","18_28","18_33","20_22","20_25","21_21","3_50","5_50","6_50","7_50"}, <22> {"0_51","10_50","11_39","11_50","18_28","18_33","20_22","20_25","22_22","3_50","5_50","6_50","7_50"}, <23> {"0_51","10_50","11_39","11_50","18_28","18_33","20_25","23_23","23_25","3_50","5_50","6_50","7_50"}, <24> {"0_51","10_50","11_39","11_50","18_28","18_33","20_25","23_25","24_24","24_25","3_50","5_50","6_50","7_50"}, <25> {"0_51","10_50","11_39","11_50","18_28","18_33","20_25","23_25","24_25","25_25","3_50","5_50","6_50","7_50"}, <26> {"0_51","10_50","11_39","11_50","18_28","18_33","26_26","3_50","5_50","6_50","7_50"}, <27> {"0_51","10_50","11_39","11_50","18_28","18_33","27_27","3_50","5_50","6_50","7_50"}, <28> {"0_51","10_50","11_39","11_50","18_28","18_33","28_28","3_50","5_50","6_50","7_50"}, <29> {"0_51","10_50","11_39","11_50","18_33","29_29","29_33","3_50","5_50","6_50","7_50"}, <30> {"0_51","10_50","11_39","11_50","18_33","29_33","30_30","30_32","30_33","3_50","5_50","6_50","7_50"}, <31> {"0_51","10_50","11_39","11_50","18_33","29_33","30_32","30_33","31_31","3_50","5_50","6_50","7_50"}, <32> {"0_51","10_50","11_39","11_50","18_33","29_33","30_32","30_33","32_32","3_50","5_50","6_50","7_50"}, <33> {"0_51","10_50","11_39","11_50","18_33","29_33","30_33","33_33","3_50","5_50","6_50","7_50"}, <34> {"0_51","10_50","11_39","11_50","34_34","3_50","5_50","6_50","7_50"}, <35> {"0_51","10_50","11_39","11_50","35_35","35_37","3_50","5_50","6_50","7_50"}, <36> {"0_51","10_50","11_39","11_50","35_37","36_36","36_37","3_50","5_50","6_50","7_50"}, <37> {"0_51","10_50","11_39","11_50","35_37","36_37","37_37","3_50","5_50","6_50","7_50"}, <38> {"0_51","10_50","11_39","11_50","38_38","38_39","3_50","5_50","6_50","7_50"}, <39> {"0_51","10_50","11_39","11_50","38_39","39_39","3_50","5_50","6_50","7_50"}, <40> {"0_51","10_50","11_50","3_50","40_40","5_50","6_50","7_50"}, <41> {"0_51","10_50","11_50","3_50","41_41","5_50","6_50","7_50"}, <42> {"0_51","10_50","11_50","3_50","42_42","5_50","6_50","7_50"}, <43> {"0_51","10_50","11_50","3_50","43_43","5_50","6_50","7_50"}, <44> {"0_51","10_50","11_50","3_50","44_44","5_50","6_50","7_50"}, <45> {"0_51","10_50","11_50","3_50","45_45","45_46","45_50","5_50","6_50","7_50"}, <46> {"0_51","10_50","11_50","3_50","45_46","45_50","46_46","46_50","5_50","6_50","7_50"}, <47> {"0_51","10_50","11_50","3_50","45_50","46_50","47_47","47_50","5_50","6_50","7_50"}, <48> {"0_51","10_50","11_50","3_50","45_50","46_50","47_50","48_48","5_50","6_50","7_50"}, <49> {"0_51","10_50","11_50","3_50","45_50","46_50","47_50","49_49","5_50","6_50","7_50"}, <50> {"0_51","10_50","11_50","3_50","45_50","46_50","47_50","50_50","5_50","6_50","7_50"}, <51> {"0_51","51_51"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Residence"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Observable_body_parts"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Social_event"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Being_located"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["People_by_origin"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Hostile_encounter"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Terrorism"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Residence"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Leadership"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Observable_body_parts"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Leadership"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Social_event"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Being_located"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["People_by_origin"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Increment"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Locale"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Hostile_encounter"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Terrorism"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["People"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc11 := {<"Side_1","Sides">,<"Side_2","Sides">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr11 := {<"Side_1","Side_2">};
subto require11: forall <ri,rj> in Reqr11 do z11[ri,"-1_-1"] - z11[rj,"-1_-1"] == 0;

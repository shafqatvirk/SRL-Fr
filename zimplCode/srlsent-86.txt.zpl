# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Aesthetics","Natural_features","Natural_features","Political_locales","Locale_by_use","Supply","Increment","Natural_features","Locale_by_use","Locale","Stimulus_focus","Buildings","Locale_by_use","Natural_features"};
set Roles[Frames] :=  <"Aesthetics"> {"Time","Entity","Attribute","Place","Judge","Circumstances","Degree"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Stimulus_focus"> {"Stimulus","Parameter","Circumstances","Property","Experiencer","Comparison_set","Degree"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_10","0_11","0_15","0_3","0_34","10_10","11_11","11_15","12_12","12_15","13_13","14_14","15_15","16_16","17_17","18_18","18_19","19_19","1_1","20_20","21_21","21_33","22_22","22_24","22_33","23_23","24_24","25_25","25_26","25_33","26_26","27_27","27_33","28_28","29_29","29_30","2_2","30_30","31_31","32_32","33_33","34_34","3_3","4_4","5_5","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Aesthetics"]] binary;
var z1[Assignment["Natural_features"]] binary;
var z2[Assignment["Natural_features"]] binary;
var z3[Assignment["Political_locales"]] binary;
var z4[Assignment["Locale_by_use"]] binary;
var z5[Assignment["Supply"]] binary;
var z6[Assignment["Increment"]] binary;
var z7[Assignment["Natural_features"]] binary;
var z8[Assignment["Locale_by_use"]] binary;
var z9[Assignment["Locale"]] binary;
var z10[Assignment["Stimulus_focus"]] binary;
var z11[Assignment["Buildings"]] binary;
var z12[Assignment["Locale_by_use"]] binary;
var z13[Assignment["Natural_features"]] binary;
param probabilities0[Assignment["Aesthetics"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Natural_features"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Natural_features"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Political_locales"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Locale_by_use"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Supply"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Increment"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Natural_features"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Locale_by_use"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Locale"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Stimulus_focus"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Buildings"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Locale_by_use"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Natural_features"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Aesthetics"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Stimulus_focus"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 34};
set G[I] := <0> {"0_0","0_10","0_11","0_15","0_3","0_34"}, <1> {"0_10","0_11","0_15","0_3","0_34","1_1"}, <2> {"0_10","0_11","0_15","0_3","0_34","2_2"}, <3> {"0_10","0_11","0_15","0_3","0_34","3_3"}, <4> {"0_10","0_11","0_15","0_34","4_4"}, <5> {"0_10","0_11","0_15","0_34","5_5"}, <6> {"0_10","0_11","0_15","0_34","6_6"}, <7> {"0_10","0_11","0_15","0_34","7_7"}, <8> {"0_10","0_11","0_15","0_34","8_8"}, <9> {"0_10","0_11","0_15","0_34","9_9"}, <10> {"0_10","0_11","0_15","0_34","10_10"}, <11> {"0_11","0_15","0_34","11_11","11_15"}, <12> {"0_15","0_34","11_15","12_12","12_15"}, <13> {"0_15","0_34","11_15","12_15","13_13"}, <14> {"0_15","0_34","11_15","12_15","14_14"}, <15> {"0_15","0_34","11_15","12_15","15_15"}, <16> {"0_34","16_16"}, <17> {"0_34","17_17"}, <18> {"0_34","18_18","18_19"}, <19> {"0_34","18_19","19_19"}, <20> {"0_34","20_20"}, <21> {"0_34","21_21","21_33"}, <22> {"0_34","21_33","22_22","22_24","22_33"}, <23> {"0_34","21_33","22_24","22_33","23_23"}, <24> {"0_34","21_33","22_24","22_33","24_24"}, <25> {"0_34","21_33","22_33","25_25","25_26","25_33"}, <26> {"0_34","21_33","22_33","25_26","25_33","26_26"}, <27> {"0_34","21_33","22_33","25_33","27_27","27_33"}, <28> {"0_34","21_33","22_33","25_33","27_33","28_28"}, <29> {"0_34","21_33","22_33","25_33","27_33","29_29","29_30"}, <30> {"0_34","21_33","22_33","25_33","27_33","29_30","30_30"}, <31> {"0_34","21_33","22_33","25_33","27_33","31_31"}, <32> {"0_34","21_33","22_33","25_33","27_33","32_32"}, <33> {"0_34","21_33","22_33","25_33","27_33","33_33"}, <34> {"0_34","34_34"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Aesthetics"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Stimulus_focus"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Aesthetics"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Supply"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Increment"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Locale"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Stimulus_focus"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Buildings"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

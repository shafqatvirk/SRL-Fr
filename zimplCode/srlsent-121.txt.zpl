# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Relational_quantity","Cardinal_numbers","Measure_linear_extent","Locative_relation","Natural_features","Ordinal_numbers","Sole_instance","Locale","Businesses"};
set Roles[Frames] :=  <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Measure_linear_extent"> {"Count","Dimension","Unit","Stuff"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Ordinal_numbers"> {"Type","Item","Starting_point","Comparison_set","Basis_of_order"}, <"Sole_instance"> {"Item","Type"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Businesses"> {"Descriptor","Business_Name","Service_provider","Business","Place","Product","Proprietor"};
set Spans := {"-1_-1","0_0","0_1","0_2","0_28","0_5","10_10","11_11","12_12","12_13","13_13","14_14","15_15","15_27","16_16","16_27","17_17","18_18","19_19","19_20","1_1","20_20","21_21","21_27","22_22","22_24","22_25","22_27","23_23","24_24","25_25","25_27","26_26","26_27","27_27","28_28","2_2","3_3","4_4","5_5","6_6","7_10","7_7","8_10","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Relational_quantity"]] binary;
var z1[Assignment["Cardinal_numbers"]] binary;
var z2[Assignment["Measure_linear_extent"]] binary;
var z3[Assignment["Locative_relation"]] binary;
var z4[Assignment["Natural_features"]] binary;
var z5[Assignment["Ordinal_numbers"]] binary;
var z6[Assignment["Sole_instance"]] binary;
var z7[Assignment["Locale"]] binary;
var z8[Assignment["Businesses"]] binary;
param probabilities0[Assignment["Relational_quantity"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Cardinal_numbers"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Measure_linear_extent"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locative_relation"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Natural_features"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Ordinal_numbers"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Sole_instance"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Locale"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Businesses"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Relational_quantity"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Measure_linear_extent"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Ordinal_numbers"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Sole_instance"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Businesses"] : probabilities8[r,s] * z8[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 28};
set G[I] := <0> {"0_0","0_1","0_2","0_28","0_5"}, <1> {"0_1","0_2","0_28","0_5","1_1"}, <2> {"0_2","0_28","0_5","2_2"}, <3> {"0_28","0_5","3_3"}, <4> {"0_28","0_5","4_4"}, <5> {"0_28","0_5","5_5"}, <6> {"0_28","6_6"}, <7> {"0_28","7_10","7_7"}, <8> {"0_28","7_10","8_10","8_8"}, <9> {"0_28","7_10","8_10","9_10","9_9"}, <10> {"0_28","10_10","7_10","8_10","9_10"}, <11> {"0_28","11_11"}, <12> {"0_28","12_12","12_13"}, <13> {"0_28","12_13","13_13"}, <14> {"0_28","14_14"}, <15> {"0_28","15_15","15_27"}, <16> {"0_28","15_27","16_16","16_27"}, <17> {"0_28","15_27","16_27","17_17"}, <18> {"0_28","15_27","16_27","18_18"}, <19> {"0_28","15_27","16_27","19_19","19_20"}, <20> {"0_28","15_27","16_27","19_20","20_20"}, <21> {"0_28","15_27","16_27","21_21","21_27"}, <22> {"0_28","15_27","16_27","21_27","22_22","22_24","22_25","22_27"}, <23> {"0_28","15_27","16_27","21_27","22_24","22_25","22_27","23_23"}, <24> {"0_28","15_27","16_27","21_27","22_24","22_25","22_27","24_24"}, <25> {"0_28","15_27","16_27","21_27","22_25","22_27","25_25","25_27"}, <26> {"0_28","15_27","16_27","21_27","22_27","25_27","26_26","26_27"}, <27> {"0_28","15_27","16_27","21_27","22_27","25_27","26_27","27_27"}, <28> {"0_28","28_28"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Measure_linear_extent"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Ordinal_numbers"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Sole_instance"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Businesses"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Measure_linear_extent"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Ordinal_numbers"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Sole_instance"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Locale"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Businesses"] do sum <s> in Spans : z8[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc5 := {<"Basis_of_order","Starting_point">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

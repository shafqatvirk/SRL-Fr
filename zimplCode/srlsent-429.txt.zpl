# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Needing","Increment","Certainty","Statement","Intentionally_act","Sufficiency","Justifying","Type","Desiring","Certainty","Intentionally_act","Quantity","Possibility","Getting","Extreme_value","Rank","Collaboration","People_by_jurisdiction","Political_locales","Cause_motion","Cardinal_numbers","Calendric_unit"};
set Roles[Frames] :=  <"Needing"> {"Dependent","Place","Requirement","Cognizer","Degree","Iteration","Time","Circumstances","Consequences"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Certainty"> {"Cognizer","Topic","Content","Manner","Explanation","Degree","Expressor","Concessive"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Sufficiency"> {"Item","Scale","Degree","Enabled_situation"}, <"Justifying"> {"Agent","Time","Domain","Judge","State_of_affairs","Act","Reason","Means","Frequency"}, <"Type"> {"Item_Property","Category","Subtype","Type_Property"}, <"Desiring"> {"Time","Place","Degree","Experiencer","Purpose_of_Event","Event","Role_of_focal_participant","Focal_participant","Cause","Reason","Location_of_Event","Duration","Manner","Time_of_Event"}, <"Certainty"> {"Cognizer","Topic","Content","Manner","Explanation","Degree","Expressor","Concessive"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Possibility"> {"Possible_event"}, <"Getting"> {"Recipient","Result","Time","Place","Purpose","Means","Source","Theme","Reason","Beneficiary","Manner","Concessive"}, <"Extreme_value"> {"Attribute","Degree","Domain","Explanation","Value","Period","Depictive","Entity","Descriptor"}, <"Rank"> {"Item","Rank"}, <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"People_by_jurisdiction"> {"Person","Descriptor","Jurisdiction","Ethnicity"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Cause_motion"> {"Initial_State","Area","Theme","Means","Depictive","Agent","Manner","Result","Distance","Explanation","Instrument","Cause","Time","Source","Degree","Place","Goal","Handle","Path"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"};
set Spans := {"-1_-1","0_0","0_61","10_10","10_59","11_11","11_59","12_12","13_13","13_59","14_14","14_16","14_59","15_15","16_16","17_17","17_18","17_59","18_18","19_19","19_59","1_1","1_61","20_20","20_21","20_59","21_21","22_22","22_24","22_59","23_23","24_24","25_25","25_26","25_59","26_26","26_59","27_27","27_59","28_28","28_59","29_29","29_30","29_59","2_2","2_3","2_59","30_30","30_59","31_31","31_59","32_32","32_59","33_33","33_34","33_59","34_34","34_59","35_35","35_36","35_59","36_36","36_59","37_37","37_39","37_59","38_38","39_39","3_3","40_40","40_59","41_41","41_59","42_42","42_43","43_43","44_44","44_59","45_45","45_46","46_46","47_47","47_49","47_59","48_48","49_49","4_4","4_59","50_50","50_59","51_51","51_55","51_58","51_59","52_52","53_53","54_54","55_55","56_56","57_57","58_58","59_59","5_10","5_5","5_59","5_6","5_9","60_60","61_61","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Needing"]] binary;
var z1[Assignment["Increment"]] binary;
var z2[Assignment["Certainty"]] binary;
var z3[Assignment["Statement"]] binary;
var z4[Assignment["Intentionally_act"]] binary;
var z5[Assignment["Sufficiency"]] binary;
var z6[Assignment["Justifying"]] binary;
var z7[Assignment["Type"]] binary;
var z8[Assignment["Desiring"]] binary;
var z9[Assignment["Certainty"]] binary;
var z10[Assignment["Intentionally_act"]] binary;
var z11[Assignment["Quantity"]] binary;
var z12[Assignment["Possibility"]] binary;
var z13[Assignment["Getting"]] binary;
var z14[Assignment["Extreme_value"]] binary;
var z15[Assignment["Rank"]] binary;
var z16[Assignment["Collaboration"]] binary;
var z17[Assignment["People_by_jurisdiction"]] binary;
var z18[Assignment["Political_locales"]] binary;
var z19[Assignment["Cause_motion"]] binary;
var z20[Assignment["Cardinal_numbers"]] binary;
var z21[Assignment["Calendric_unit"]] binary;
param probabilities0[Assignment["Needing"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Increment"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Certainty"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Statement"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Intentionally_act"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Sufficiency"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Justifying"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Type"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Desiring"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Certainty"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Intentionally_act"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Quantity"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Possibility"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Getting"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Extreme_value"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Rank"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Collaboration"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["People_by_jurisdiction"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Political_locales"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Cause_motion"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Cardinal_numbers"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Calendric_unit"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Needing"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Certainty"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Sufficiency"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Justifying"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Type"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Desiring"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Certainty"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Possibility"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Getting"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Extreme_value"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Rank"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Collaboration"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["People_by_jurisdiction"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Cause_motion"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities21[r,s] * z21[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 61};
set G[I] := <0> {"0_0","0_61"}, <1> {"0_61","1_1","1_61"}, <2> {"0_61","1_61","2_2","2_3","2_59"}, <3> {"0_61","1_61","2_3","2_59","3_3"}, <4> {"0_61","1_61","2_59","4_4","4_59"}, <5> {"0_61","1_61","2_59","4_59","5_10","5_5","5_59","5_6","5_9"}, <6> {"0_61","1_61","2_59","4_59","5_10","5_59","5_6","5_9","6_6"}, <7> {"0_61","1_61","2_59","4_59","5_10","5_59","5_9","7_7"}, <8> {"0_61","1_61","2_59","4_59","5_10","5_59","5_9","8_8"}, <9> {"0_61","1_61","2_59","4_59","5_10","5_59","5_9","9_9"}, <10> {"0_61","10_10","10_59","1_61","2_59","4_59","5_10","5_59"}, <11> {"0_61","10_59","11_11","11_59","1_61","2_59","4_59","5_59"}, <12> {"0_61","10_59","11_59","12_12","1_61","2_59","4_59","5_59"}, <13> {"0_61","10_59","11_59","13_13","13_59","1_61","2_59","4_59","5_59"}, <14> {"0_61","10_59","11_59","13_59","14_14","14_16","14_59","1_61","2_59","4_59","5_59"}, <15> {"0_61","10_59","11_59","13_59","14_16","14_59","15_15","1_61","2_59","4_59","5_59"}, <16> {"0_61","10_59","11_59","13_59","14_16","14_59","16_16","1_61","2_59","4_59","5_59"}, <17> {"0_61","10_59","11_59","13_59","14_59","17_17","17_18","17_59","1_61","2_59","4_59","5_59"}, <18> {"0_61","10_59","11_59","13_59","14_59","17_18","17_59","18_18","1_61","2_59","4_59","5_59"}, <19> {"0_61","10_59","11_59","13_59","14_59","17_59","19_19","19_59","1_61","2_59","4_59","5_59"}, <20> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_20","20_21","20_59","2_59","4_59","5_59"}, <21> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_21","20_59","21_21","2_59","4_59","5_59"}, <22> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_22","22_24","22_59","2_59","4_59","5_59"}, <23> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_24","22_59","23_23","2_59","4_59","5_59"}, <24> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_24","22_59","24_24","2_59","4_59","5_59"}, <25> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_25","25_26","25_59","2_59","4_59","5_59"}, <26> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_26","25_59","26_26","26_59","2_59","4_59","5_59"}, <27> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_27","27_59","2_59","4_59","5_59"}, <28> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_28","28_59","2_59","4_59","5_59"}, <29> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_29","29_30","29_59","2_59","4_59","5_59"}, <30> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_30","29_59","2_59","30_30","30_59","4_59","5_59"}, <31> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_31","31_59","4_59","5_59"}, <32> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_32","32_59","4_59","5_59"}, <33> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_33","33_34","33_59","4_59","5_59"}, <34> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_34","33_59","34_34","34_59","4_59","5_59"}, <35> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_35","35_36","35_59","4_59","5_59"}, <36> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_36","35_59","36_36","36_59","4_59","5_59"}, <37> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_37","37_39","37_59","4_59","5_59"}, <38> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_39","37_59","38_38","4_59","5_59"}, <39> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_39","37_59","39_39","4_59","5_59"}, <40> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_40","40_59","4_59","5_59"}, <41> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_41","41_59","4_59","5_59"}, <42> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","42_42","42_43","4_59","5_59"}, <43> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","42_43","43_43","4_59","5_59"}, <44> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_44","44_59","4_59","5_59"}, <45> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","45_45","45_46","4_59","5_59"}, <46> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","45_46","46_46","4_59","5_59"}, <47> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_47","47_49","47_59","4_59","5_59"}, <48> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_49","47_59","48_48","4_59","5_59"}, <49> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_49","47_59","49_49","4_59","5_59"}, <50> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_50","50_59","5_59"}, <51> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_51","51_55","51_58","51_59","5_59"}, <52> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_55","51_58","51_59","52_52","5_59"}, <53> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_55","51_58","51_59","53_53","5_59"}, <54> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_55","51_58","51_59","54_54","5_59"}, <55> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_55","51_58","51_59","55_55","5_59"}, <56> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_58","51_59","56_56","5_59"}, <57> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_58","51_59","57_57","5_59"}, <58> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_58","51_59","58_58","5_59"}, <59> {"0_61","10_59","11_59","13_59","14_59","17_59","19_59","1_61","20_59","22_59","25_59","26_59","27_59","28_59","29_59","2_59","30_59","31_59","32_59","33_59","34_59","35_59","36_59","37_59","40_59","41_59","44_59","47_59","4_59","50_59","51_59","59_59","5_59"}, <60> {"0_61","1_61","60_60"}, <61> {"0_61","1_61","61_61"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Needing"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Certainty"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Sufficiency"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Justifying"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Type"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Desiring"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Certainty"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Possibility"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Getting"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Extreme_value"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Rank"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["People_by_jurisdiction"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Cause_motion"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Needing"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Increment"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Certainty"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Statement"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Sufficiency"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Justifying"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Type"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Desiring"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Certainty"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Quantity"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Possibility"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Getting"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Extreme_value"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Rank"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["People_by_jurisdiction"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Cause_motion"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z21[r,s] == 1;
#pairwise exclusion constraint
set Exc11 := {<"Individuals","Mass">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
set Exc16 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
set Exc19 := {<"Area","Source">,<"Area","Result">,<"Agent","Cause">,<"Area","Initial_State">,<"Area","Path">,<"Area","Goal">};
subto exclusion19: forall <ri,rj> in Exc19 do z19[ri,"-1_-1"] + z19[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr16 := {<"Partner_1","Partner_2">};
subto require16: forall <ri,rj> in Reqr16 do z16[ri,"-1_-1"] - z16[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Evidence","Placing","Locale_by_use","Quantity","Degree_of_processing","Substance","Manufacturing","Inspecting","Increment","Duration_attribute","Quantity","Weapon","Ingredients","Presence","Possession","Quantity","Capability","Inspecting","Locale","Locative_relation","Awareness","Coming_up_with","Research","Likelihood","Possibilities"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Evidence"> {"Domain_of_Relevance","Support","Manner","Depictive","Proposition","Degree","Cognizer"}, <"Placing"> {"Speed","Duration","Area","Theme","Means","Depictive","Agent","Manner","Result","Distance","Cause","Time","Source","Beneficiary","Degree","Place","Goal","Reason","Purpose","Path"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Degree_of_processing"> {"Degree","Material"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Inspecting"> {"Desired_state","Location_of_inspector","Degree","Manner","Inspector","Ground","Time","Circumstances","Unwanted_entity","Means","Purpose"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Duration_attribute"> {"Degree","Period","Eventuality"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Ingredients"> {"Source","Type","Use","Material","Product","Descriptor"}, <"Presence"> {"Location","Entity"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Inspecting"> {"Desired_state","Location_of_inspector","Degree","Manner","Inspector","Ground","Time","Circumstances","Unwanted_entity","Means","Purpose"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Coming_up_with"> {"Place","Cognizer","Result","Location_of_appearance","Idea","Manner","Means","Material","Purpose","Amount_of_progress"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Likelihood"> {"Time","Place","Circumstances","Reason","Hypothetical_event","Degree"}, <"Possibilities"> {"Purpose","Event","Salient_entity","Agent","Number_of_possibilities"};
set Spans := {"-1_-1","0_0","0_54","10_10","11_11","11_13","11_15","12_12","13_13","14_14","14_15","15_15","16_16","17_17","17_21","18_18","18_19","18_21","19_19","1_1","20_20","20_21","21_21","22_22","23_23","23_30","24_24","25_25","25_30","26_26","26_28","26_29","26_30","27_27","28_28","29_29","29_30","2_2","2_53","30_30","31_31","32_32","32_33","33_33","34_34","35_35","35_53","36_36","36_37","36_42","37_37","38_38","38_39","38_42","39_39","39_42","3_15","3_3","3_34","3_4","3_53","40_40","40_42","41_41","41_42","42_42","43_43","43_53","44_44","44_45","44_53","45_45","45_53","46_46","46_49","46_50","46_53","47_47","48_48","49_49","4_15","4_4","50_50","50_53","51_51","51_53","52_52","52_53","53_53","54_54","5_15","5_5","6_6","6_8","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Evidence"]] binary;
var z2[Assignment["Placing"]] binary;
var z3[Assignment["Locale_by_use"]] binary;
var z4[Assignment["Quantity"]] binary;
var z5[Assignment["Degree_of_processing"]] binary;
var z6[Assignment["Substance"]] binary;
var z7[Assignment["Manufacturing"]] binary;
var z8[Assignment["Inspecting"]] binary;
var z9[Assignment["Increment"]] binary;
var z10[Assignment["Duration_attribute"]] binary;
var z11[Assignment["Quantity"]] binary;
var z12[Assignment["Weapon"]] binary;
var z13[Assignment["Ingredients"]] binary;
var z14[Assignment["Presence"]] binary;
var z15[Assignment["Possession"]] binary;
var z16[Assignment["Quantity"]] binary;
var z17[Assignment["Capability"]] binary;
var z18[Assignment["Inspecting"]] binary;
var z19[Assignment["Locale"]] binary;
var z20[Assignment["Locative_relation"]] binary;
var z21[Assignment["Awareness"]] binary;
var z22[Assignment["Coming_up_with"]] binary;
var z23[Assignment["Research"]] binary;
var z24[Assignment["Likelihood"]] binary;
var z25[Assignment["Possibilities"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Evidence"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Placing"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locale_by_use"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Degree_of_processing"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Substance"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Manufacturing"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Inspecting"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Increment"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Duration_attribute"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Quantity"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Weapon"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Ingredients"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Presence"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Possession"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Quantity"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Capability"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Inspecting"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Locale"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Locative_relation"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Awareness"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Coming_up_with"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;
param probabilities23[Assignment["Research"]] := read "../frameData/frame23.txt" as "<1s,2s> 3n" skip 2;
param probabilities24[Assignment["Likelihood"]] := read "../frameData/frame24.txt" as "<1s,2s> 3n" skip 2;
param probabilities25[Assignment["Possibilities"]] := read "../frameData/frame25.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Evidence"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Placing"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Degree_of_processing"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Inspecting"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Duration_attribute"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Ingredients"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Presence"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Inspecting"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Coming_up_with"] : probabilities22[r,s] * z22[r,s])+(sum <r,s> in Assignment["Research"] : probabilities23[r,s] * z23[r,s])+(sum <r,s> in Assignment["Likelihood"] : probabilities24[r,s] * z24[r,s])+(sum <r,s> in Assignment["Possibilities"] : probabilities25[r,s] * z25[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 54};
set G[I] := <0> {"0_0","0_54"}, <1> {"0_54","1_1"}, <2> {"0_54","2_2","2_53"}, <3> {"0_54","2_53","3_15","3_3","3_34","3_4","3_53"}, <4> {"0_54","2_53","3_15","3_34","3_4","3_53","4_15","4_4"}, <5> {"0_54","2_53","3_15","3_34","3_53","4_15","5_15","5_5"}, <6> {"0_54","2_53","3_15","3_34","3_53","4_15","5_15","6_6","6_8"}, <7> {"0_54","2_53","3_15","3_34","3_53","4_15","5_15","6_8","7_7"}, <8> {"0_54","2_53","3_15","3_34","3_53","4_15","5_15","6_8","8_8"}, <9> {"0_54","2_53","3_15","3_34","3_53","4_15","5_15","9_9"}, <10> {"0_54","10_10","2_53","3_15","3_34","3_53","4_15","5_15"}, <11> {"0_54","11_11","11_13","11_15","2_53","3_15","3_34","3_53","4_15","5_15"}, <12> {"0_54","11_13","11_15","12_12","2_53","3_15","3_34","3_53","4_15","5_15"}, <13> {"0_54","11_13","11_15","13_13","2_53","3_15","3_34","3_53","4_15","5_15"}, <14> {"0_54","11_15","14_14","14_15","2_53","3_15","3_34","3_53","4_15","5_15"}, <15> {"0_54","11_15","14_15","15_15","2_53","3_15","3_34","3_53","4_15","5_15"}, <16> {"0_54","16_16","2_53","3_34","3_53"}, <17> {"0_54","17_17","17_21","2_53","3_34","3_53"}, <18> {"0_54","17_21","18_18","18_19","18_21","2_53","3_34","3_53"}, <19> {"0_54","17_21","18_19","18_21","19_19","2_53","3_34","3_53"}, <20> {"0_54","17_21","18_21","20_20","20_21","2_53","3_34","3_53"}, <21> {"0_54","17_21","18_21","20_21","21_21","2_53","3_34","3_53"}, <22> {"0_54","22_22","2_53","3_34","3_53"}, <23> {"0_54","23_23","23_30","2_53","3_34","3_53"}, <24> {"0_54","23_30","24_24","2_53","3_34","3_53"}, <25> {"0_54","23_30","25_25","25_30","2_53","3_34","3_53"}, <26> {"0_54","23_30","25_30","26_26","26_28","26_29","26_30","2_53","3_34","3_53"}, <27> {"0_54","23_30","25_30","26_28","26_29","26_30","27_27","2_53","3_34","3_53"}, <28> {"0_54","23_30","25_30","26_28","26_29","26_30","28_28","2_53","3_34","3_53"}, <29> {"0_54","23_30","25_30","26_29","26_30","29_29","29_30","2_53","3_34","3_53"}, <30> {"0_54","23_30","25_30","26_30","29_30","2_53","30_30","3_34","3_53"}, <31> {"0_54","2_53","31_31","3_34","3_53"}, <32> {"0_54","2_53","32_32","32_33","3_34","3_53"}, <33> {"0_54","2_53","32_33","33_33","3_34","3_53"}, <34> {"0_54","2_53","34_34","3_34","3_53"}, <35> {"0_54","2_53","35_35","35_53","3_53"}, <36> {"0_54","2_53","35_53","36_36","36_37","36_42","3_53"}, <37> {"0_54","2_53","35_53","36_37","36_42","37_37","3_53"}, <38> {"0_54","2_53","35_53","36_42","38_38","38_39","38_42","3_53"}, <39> {"0_54","2_53","35_53","36_42","38_39","38_42","39_39","39_42","3_53"}, <40> {"0_54","2_53","35_53","36_42","38_42","39_42","3_53","40_40","40_42"}, <41> {"0_54","2_53","35_53","36_42","38_42","39_42","3_53","40_42","41_41","41_42"}, <42> {"0_54","2_53","35_53","36_42","38_42","39_42","3_53","40_42","41_42","42_42"}, <43> {"0_54","2_53","35_53","3_53","43_43","43_53"}, <44> {"0_54","2_53","35_53","3_53","43_53","44_44","44_45","44_53"}, <45> {"0_54","2_53","35_53","3_53","43_53","44_45","44_53","45_45","45_53"}, <46> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_46","46_49","46_50","46_53"}, <47> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_49","46_50","46_53","47_47"}, <48> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_49","46_50","46_53","48_48"}, <49> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_49","46_50","46_53","49_49"}, <50> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_50","46_53","50_50","50_53"}, <51> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_53","50_53","51_51","51_53"}, <52> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_53","50_53","51_53","52_52","52_53"}, <53> {"0_54","2_53","35_53","3_53","43_53","44_53","45_53","46_53","50_53","51_53","52_53","53_53"}, <54> {"0_54","54_54"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Evidence"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Placing"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Degree_of_processing"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Inspecting"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Duration_attribute"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Ingredients"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Presence"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Inspecting"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Coming_up_with"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
subto overlap23: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z23[r,s] <= 1;
subto overlap24: forall <i> in I do 
 sum <r> in Roles["Likelihood"] do 
 sum <s> in G[i] do z24[r,s] <= 1;
subto overlap25: forall <i> in I do 
 sum <r> in Roles["Possibilities"] do 
 sum <s> in G[i] do z25[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Evidence"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Placing"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Degree_of_processing"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Substance"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Inspecting"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Increment"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Duration_attribute"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Quantity"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Weapon"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Ingredients"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Presence"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Possession"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Quantity"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Capability"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Inspecting"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Locale"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Awareness"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Coming_up_with"] do sum <s> in Spans : z22[r,s] == 1;
subto unique23: forall <r> in Roles["Research"] do sum <s> in Spans : z23[r,s] == 1;
subto unique24: forall <r> in Roles["Likelihood"] do sum <s> in Spans : z24[r,s] == 1;
subto unique25: forall <r> in Roles["Possibilities"] do sum <s> in Spans : z25[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Agent","Cause">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc4 := {<"Individuals","Mass">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc11 := {<"Individuals","Mass">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
set Exc16 := {<"Individuals","Mass">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
set Exc20 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion20: forall <ri,rj> in Exc20 do z20[ri,"-1_-1"] + z20[rj,"-1_-1"] >= 1;
set Exc21 := {<"Cognizer","Expressor">};
subto exclusion21: forall <ri,rj> in Exc21 do z21[ri,"-1_-1"] + z21[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Temporal_subregion","Cause_to_make_progress","Import_export","Control","Inclusion","Encoding","Law","Weapon","Weapon","Cardinal_numbers","Purpose","Import_export","Commitment","Activity_stop","Exporting","Weapon","Artifact","Protecting","Locale_by_use"};
set Roles[Frames] :=  <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Cause_to_make_progress"> {"Purpose","Time","Place","Degree","Rate","Means","Domain","Duration","Particular_iteration","Project","Post_state","Manner","Explanation","Agent","Prior_state"}, <"Import_export"> {"Exporting_area","Goods","Time","Importing_area","Purpose","Agent"}, <"Control"> {"Manner","Time","Controlling_entity","Dependent_situation","Dependent_entity"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"}, <"Encoding"> {"Manner","Medium","Message","Means","Speaker"}, <"Law"> {"Type","Use","Time_of_creation","Required","Name","Law","Jurisdiction","Forbidden","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Purpose"> {"Attribute","Agent","Goal","Time","Restrictor","Value","Domain","Means"}, <"Import_export"> {"Exporting_area","Goods","Time","Importing_area","Purpose","Agent"}, <"Commitment"> {"Addressee","Medium","Topic","Manner","Speaker","Time","Message","Purpose"}, <"Activity_stop"> {"Result","Circumstances","Time","Containing_event","Place","Frequency","Degree","Means","Particular_iteration","Activity","Re_encoding","Duration","Manner","Explanation","Agent"}, <"Exporting"> {"Purpose","Type","Exporter","Time","Goods","Path","Re_encoding","Importing_area","Exporting_area","Vehicle","Manner","Explanation"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Protecting"> {"Protection","Time","Descriptor","Instrument","Place","Degree","Asset","Means","Depictive","Danger","Duration","Beneficiary","Manner","Explanation"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_3","0_39","10_10","11_11","12_12","12_24","13_13","13_14","13_24","14_14","15_15","15_24","16_16","16_24","17_17","17_24","18_18","18_21","18_22","18_24","19_19","1_1","1_3","20_20","21_21","22_22","23_23","24_24","25_25","26_26","26_38","27_27","27_38","28_28","28_38","29_29","29_38","2_2","30_30","30_33","31_31","31_33","32_32","32_33","33_33","34_34","34_35","34_38","35_35","35_38","36_36","36_37","36_38","37_37","38_38","39_39","3_3","4_4","5_5","6_6","7_24","7_7","8_24","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Temporal_subregion"]] binary;
var z1[Assignment["Cause_to_make_progress"]] binary;
var z2[Assignment["Import_export"]] binary;
var z3[Assignment["Control"]] binary;
var z4[Assignment["Inclusion"]] binary;
var z5[Assignment["Encoding"]] binary;
var z6[Assignment["Law"]] binary;
var z7[Assignment["Weapon"]] binary;
var z8[Assignment["Weapon"]] binary;
var z9[Assignment["Cardinal_numbers"]] binary;
var z10[Assignment["Purpose"]] binary;
var z11[Assignment["Import_export"]] binary;
var z12[Assignment["Commitment"]] binary;
var z13[Assignment["Activity_stop"]] binary;
var z14[Assignment["Exporting"]] binary;
var z15[Assignment["Weapon"]] binary;
var z16[Assignment["Artifact"]] binary;
var z17[Assignment["Protecting"]] binary;
var z18[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Temporal_subregion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Cause_to_make_progress"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Import_export"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Control"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Inclusion"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Encoding"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Law"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Weapon"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Weapon"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Cardinal_numbers"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Purpose"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Import_export"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Commitment"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Activity_stop"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Exporting"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Weapon"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Artifact"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Protecting"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Locale_by_use"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Temporal_subregion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Cause_to_make_progress"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Import_export"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Control"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Encoding"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Law"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Purpose"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Import_export"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Commitment"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Activity_stop"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Exporting"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Protecting"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities18[r,s] * z18[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 39};
set G[I] := <0> {"0_0","0_3","0_39"}, <1> {"0_3","0_39","1_1","1_3"}, <2> {"0_3","0_39","1_3","2_2"}, <3> {"0_3","0_39","1_3","3_3"}, <4> {"0_39","4_4"}, <5> {"0_39","5_5"}, <6> {"0_39","6_6"}, <7> {"0_39","7_24","7_7"}, <8> {"0_39","7_24","8_24","8_8"}, <9> {"0_39","7_24","8_24","9_9"}, <10> {"0_39","10_10","7_24","8_24"}, <11> {"0_39","11_11","7_24","8_24"}, <12> {"0_39","12_12","12_24","7_24","8_24"}, <13> {"0_39","12_24","13_13","13_14","13_24","7_24","8_24"}, <14> {"0_39","12_24","13_14","13_24","14_14","7_24","8_24"}, <15> {"0_39","12_24","13_24","15_15","15_24","7_24","8_24"}, <16> {"0_39","12_24","13_24","15_24","16_16","16_24","7_24","8_24"}, <17> {"0_39","12_24","13_24","15_24","16_24","17_17","17_24","7_24","8_24"}, <18> {"0_39","12_24","13_24","15_24","16_24","17_24","18_18","18_21","18_22","18_24","7_24","8_24"}, <19> {"0_39","12_24","13_24","15_24","16_24","17_24","18_21","18_22","18_24","19_19","7_24","8_24"}, <20> {"0_39","12_24","13_24","15_24","16_24","17_24","18_21","18_22","18_24","20_20","7_24","8_24"}, <21> {"0_39","12_24","13_24","15_24","16_24","17_24","18_21","18_22","18_24","21_21","7_24","8_24"}, <22> {"0_39","12_24","13_24","15_24","16_24","17_24","18_22","18_24","22_22","7_24","8_24"}, <23> {"0_39","12_24","13_24","15_24","16_24","17_24","18_24","23_23","7_24","8_24"}, <24> {"0_39","12_24","13_24","15_24","16_24","17_24","18_24","24_24","7_24","8_24"}, <25> {"0_39","25_25"}, <26> {"0_39","26_26","26_38"}, <27> {"0_39","26_38","27_27","27_38"}, <28> {"0_39","26_38","27_38","28_28","28_38"}, <29> {"0_39","26_38","27_38","28_38","29_29","29_38"}, <30> {"0_39","26_38","27_38","28_38","29_38","30_30","30_33"}, <31> {"0_39","26_38","27_38","28_38","29_38","30_33","31_31","31_33"}, <32> {"0_39","26_38","27_38","28_38","29_38","30_33","31_33","32_32","32_33"}, <33> {"0_39","26_38","27_38","28_38","29_38","30_33","31_33","32_33","33_33"}, <34> {"0_39","26_38","27_38","28_38","29_38","34_34","34_35","34_38"}, <35> {"0_39","26_38","27_38","28_38","29_38","34_35","34_38","35_35","35_38"}, <36> {"0_39","26_38","27_38","28_38","29_38","34_38","35_38","36_36","36_37","36_38"}, <37> {"0_39","26_38","27_38","28_38","29_38","34_38","35_38","36_37","36_38","37_37"}, <38> {"0_39","26_38","27_38","28_38","29_38","34_38","35_38","36_38","38_38"}, <39> {"0_39","39_39"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Cause_to_make_progress"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Import_export"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Control"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Encoding"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Law"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Purpose"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Import_export"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Commitment"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Activity_stop"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Exporting"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Protecting"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Cause_to_make_progress"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Import_export"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Control"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Encoding"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Law"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Weapon"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Weapon"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Purpose"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Import_export"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Commitment"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Activity_stop"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Exporting"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Weapon"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Artifact"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Protecting"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z18[r,s] == 1;
#pairwise exclusion constraint
set Exc10 := {<"Attribute","Goal">,<"Goal","Value">};
subto exclusion10: forall <ri,rj> in Exc10 do z10[ri,"-1_-1"] + z10[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr10 := {<"Attribute","Value">};
subto require10: forall <ri,rj> in Reqr10 do z10[ri,"-1_-1"] - z10[rj,"-1_-1"] == 0;

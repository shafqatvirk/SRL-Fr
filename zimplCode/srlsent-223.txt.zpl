# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Continued_state_of_affairs","Quantity","Evidence","Getting","Evidence","Success_or_failure","Manufacturing","Importance","Quantity","Weapon","Weapon","Active_substance","Cause_to_make_progress","Usefulness","Means","Delivery","Purpose","Intentionally_act","Obviousness","Presence"};
set Roles[Frames] :=  <"Continued_state_of_affairs"> {"State_of_affairs","Circumstances","Reference_occasion"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Evidence"> {"Domain_of_Relevance","Support","Manner","Depictive","Proposition","Degree","Cognizer"}, <"Getting"> {"Recipient","Result","Time","Place","Purpose","Means","Source","Theme","Reason","Beneficiary","Manner","Concessive"}, <"Evidence"> {"Domain_of_Relevance","Support","Manner","Depictive","Proposition","Degree","Cognizer"}, <"Success_or_failure"> {"Place","Agent","Goal","Degree","Re_enconding","Depictive","Explanation","Time","Circumstances","Means","Role"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Active_substance"> {"Name","Type","Substance","Descriptor","Effect"}, <"Cause_to_make_progress"> {"Purpose","Time","Place","Degree","Rate","Means","Domain","Duration","Particular_iteration","Project","Post_state","Manner","Explanation","Agent","Prior_state"}, <"Usefulness"> {"Purpose","Domain","Time","Degree","Entity"}, <"Means"> {"Agent","Purpose","Descriptor","Time","Means"}, <"Delivery"> {"Speed","Place","Theme","Means","Depictive","Circumstances","Manner","Recipient","Vehicle","Time","Source","Period_of_iterations","Beneficiary","Event_description","Goal","Reason","Purpose","Path","Deliverer"}, <"Purpose"> {"Attribute","Agent","Goal","Time","Restrictor","Value","Domain","Means"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Obviousness"> {"Attribute","Perceiver","Phenomenon","Degree","Time","Evidence","Particular_iteration","Direction","Location_of_protagonist"}, <"Presence"> {"Location","Entity"};
set Spans := {"-1_-1","0_0","0_1","0_38","0_4","10_10","11_11","11_27","12_12","12_20","13_13","13_20","14_14","14_15","14_20","15_15","16_16","16_20","17_17","17_19","17_20","18_18","19_19","1_1","20_20","21_21","22_22","22_27","23_23","23_25","23_27","24_24","25_25","26_26","26_27","27_27","28_28","29_29","2_2","2_4","30_30","30_31","30_34","31_31","32_32","32_33","32_34","33_33","33_34","34_34","35_35","36_36","36_37","37_37","38_38","3_3","3_4","4_4","5_38","5_5","6_37","6_6","7_27","7_35","7_37","7_7","7_8","8_8","9_27","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Continued_state_of_affairs"]] binary;
var z1[Assignment["Quantity"]] binary;
var z2[Assignment["Evidence"]] binary;
var z3[Assignment["Getting"]] binary;
var z4[Assignment["Evidence"]] binary;
var z5[Assignment["Success_or_failure"]] binary;
var z6[Assignment["Manufacturing"]] binary;
var z7[Assignment["Importance"]] binary;
var z8[Assignment["Quantity"]] binary;
var z9[Assignment["Weapon"]] binary;
var z10[Assignment["Weapon"]] binary;
var z11[Assignment["Active_substance"]] binary;
var z12[Assignment["Cause_to_make_progress"]] binary;
var z13[Assignment["Usefulness"]] binary;
var z14[Assignment["Means"]] binary;
var z15[Assignment["Delivery"]] binary;
var z16[Assignment["Purpose"]] binary;
var z17[Assignment["Intentionally_act"]] binary;
var z18[Assignment["Obviousness"]] binary;
var z19[Assignment["Presence"]] binary;
param probabilities0[Assignment["Continued_state_of_affairs"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Quantity"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Evidence"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Getting"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Evidence"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Success_or_failure"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Manufacturing"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Importance"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Quantity"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Weapon"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Weapon"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Active_substance"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Cause_to_make_progress"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Usefulness"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Means"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Delivery"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Purpose"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Intentionally_act"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Obviousness"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Presence"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Continued_state_of_affairs"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Evidence"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Getting"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Evidence"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Success_or_failure"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Active_substance"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Cause_to_make_progress"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Usefulness"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Means"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Delivery"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Purpose"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Obviousness"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Presence"] : probabilities19[r,s] * z19[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 38};
set G[I] := <0> {"0_0","0_1","0_38","0_4"}, <1> {"0_1","0_38","0_4","1_1"}, <2> {"0_38","0_4","2_2","2_4"}, <3> {"0_38","0_4","2_4","3_3","3_4"}, <4> {"0_38","0_4","2_4","3_4","4_4"}, <5> {"0_38","5_38","5_5"}, <6> {"0_38","5_38","6_37","6_6"}, <7> {"0_38","5_38","6_37","7_27","7_35","7_37","7_7","7_8"}, <8> {"0_38","5_38","6_37","7_27","7_35","7_37","7_8","8_8"}, <9> {"0_38","5_38","6_37","7_27","7_35","7_37","9_27","9_9"}, <10> {"0_38","10_10","5_38","6_37","7_27","7_35","7_37","9_27"}, <11> {"0_38","11_11","11_27","5_38","6_37","7_27","7_35","7_37","9_27"}, <12> {"0_38","11_27","12_12","12_20","5_38","6_37","7_27","7_35","7_37","9_27"}, <13> {"0_38","11_27","12_20","13_13","13_20","5_38","6_37","7_27","7_35","7_37","9_27"}, <14> {"0_38","11_27","12_20","13_20","14_14","14_15","14_20","5_38","6_37","7_27","7_35","7_37","9_27"}, <15> {"0_38","11_27","12_20","13_20","14_15","14_20","15_15","5_38","6_37","7_27","7_35","7_37","9_27"}, <16> {"0_38","11_27","12_20","13_20","14_20","16_16","16_20","5_38","6_37","7_27","7_35","7_37","9_27"}, <17> {"0_38","11_27","12_20","13_20","14_20","16_20","17_17","17_19","17_20","5_38","6_37","7_27","7_35","7_37","9_27"}, <18> {"0_38","11_27","12_20","13_20","14_20","16_20","17_19","17_20","18_18","5_38","6_37","7_27","7_35","7_37","9_27"}, <19> {"0_38","11_27","12_20","13_20","14_20","16_20","17_19","17_20","19_19","5_38","6_37","7_27","7_35","7_37","9_27"}, <20> {"0_38","11_27","12_20","13_20","14_20","16_20","17_20","20_20","5_38","6_37","7_27","7_35","7_37","9_27"}, <21> {"0_38","11_27","21_21","5_38","6_37","7_27","7_35","7_37","9_27"}, <22> {"0_38","11_27","22_22","22_27","5_38","6_37","7_27","7_35","7_37","9_27"}, <23> {"0_38","11_27","22_27","23_23","23_25","23_27","5_38","6_37","7_27","7_35","7_37","9_27"}, <24> {"0_38","11_27","22_27","23_25","23_27","24_24","5_38","6_37","7_27","7_35","7_37","9_27"}, <25> {"0_38","11_27","22_27","23_25","23_27","25_25","5_38","6_37","7_27","7_35","7_37","9_27"}, <26> {"0_38","11_27","22_27","23_27","26_26","26_27","5_38","6_37","7_27","7_35","7_37","9_27"}, <27> {"0_38","11_27","22_27","23_27","26_27","27_27","5_38","6_37","7_27","7_35","7_37","9_27"}, <28> {"0_38","28_28","5_38","6_37","7_35","7_37"}, <29> {"0_38","29_29","5_38","6_37","7_35","7_37"}, <30> {"0_38","30_30","30_31","30_34","5_38","6_37","7_35","7_37"}, <31> {"0_38","30_31","30_34","31_31","5_38","6_37","7_35","7_37"}, <32> {"0_38","30_34","32_32","32_33","32_34","5_38","6_37","7_35","7_37"}, <33> {"0_38","30_34","32_33","32_34","33_33","33_34","5_38","6_37","7_35","7_37"}, <34> {"0_38","30_34","32_34","33_34","34_34","5_38","6_37","7_35","7_37"}, <35> {"0_38","35_35","5_38","6_37","7_35","7_37"}, <36> {"0_38","36_36","36_37","5_38","6_37","7_37"}, <37> {"0_38","36_37","37_37","5_38","6_37","7_37"}, <38> {"0_38","38_38","5_38"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Continued_state_of_affairs"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Evidence"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Getting"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Evidence"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Success_or_failure"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Active_substance"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Cause_to_make_progress"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Usefulness"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Means"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Delivery"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Purpose"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Obviousness"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Presence"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Continued_state_of_affairs"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Quantity"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Evidence"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Getting"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Evidence"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Success_or_failure"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Importance"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Quantity"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Weapon"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Weapon"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Active_substance"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Cause_to_make_progress"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Usefulness"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Means"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Delivery"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Purpose"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Obviousness"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Presence"] do sum <s> in Spans : z19[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Individuals","Mass">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc5 := {<"Goal","Role">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc7 := {<"Field","Interested_party">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc8 := {<"Individuals","Mass">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc15 := {<"Goal","Recipient">};
subto exclusion15: forall <ri,rj> in Exc15 do z15[ri,"-1_-1"] + z15[rj,"-1_-1"] >= 1;
set Exc16 := {<"Attribute","Goal">,<"Goal","Value">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr16 := {<"Attribute","Value">};
subto require16: forall <ri,rj> in Reqr16 do z16[ri,"-1_-1"] - z16[rj,"-1_-1"] == 0;

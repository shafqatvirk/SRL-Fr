# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Accompaniment","Supply","Leadership","Reveal_secret","Importance","Quantity","Active_substance","Manufacturing","Increment","Cardinal_numbers","Measure_duration","Time_vector","Locale_by_use","Being_located","Biological_area","Substance","Ammunition","Gizmo","Being_necessary","Intentionally_create","Ordinal_numbers","Weapon","Manufacturing","Locale_by_use"};
set Roles[Frames] :=  <"Accompaniment"> {"Participant","Coparticipant"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Reveal_secret"> {"Medium","Place","Means","Depictive","Speaker","Location_of_protagonist","Manner","Completeness","Period_of_iterations","Information","Addressee","Time","Containing_event","Event_description","Frequency","Re-encoding","Internal_cause","Topic","Source_material"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Active_substance"> {"Name","Type","Substance","Descriptor","Effect"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Measure_duration"> {"Agent","Count","Unit","Process"}, <"Time_vector"> {"Distance","Event","Landmark_event","Direction"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Being_located"> {"Cotheme","Location","Theme","Time","Place"}, <"Biological_area"> {"Relative_location","Constituent_parts","Container_possessor","Formational_cause","Descriptor","Name","Locale"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Ammunition"> {"Use","Ammunition","Type"}, <"Gizmo"> {"Descriptor","Power_source","Gizmo","Use","User"}, <"Being_necessary"> {"Dependent","Requirement","Degree","Domain","Condition","Time","Required_entity","Reason","Descriptor","Dependent_individual"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Ordinal_numbers"> {"Type","Item","Starting_point","Comparison_set","Basis_of_order"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_59","0_9","10_10","11_11","12_12","13_13","13_58","14_14","15_15","16_16","17_17","18_18","18_58","19_19","19_20","19_58","1_1","1_9","20_20","20_58","21_21","21_58","22_22","22_23","22_24","22_25","22_26","23_23","23_24","24_24","25_25","26_26","27_27","27_43","28_28","28_43","29_29","2_2","2_9","30_30","30_31","31_31","32_32","33_33","33_43","34_34","34_43","35_35","35_37","35_41","35_43","36_36","37_37","38_38","38_39","39_39","3_3","3_7","40_40","41_41","42_42","42_43","43_43","44_44","45_45","45_58","46_46","46_58","47_47","47_48","47_50","47_58","48_48","49_49","4_4","4_7","50_50","51_51","51_58","52_52","52_53","52_58","53_53","53_58","54_54","54_58","55_55","56_56","57_57","58_58","59_59","5_5","6_6","7_7","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Accompaniment"]] binary;
var z1[Assignment["Supply"]] binary;
var z2[Assignment["Leadership"]] binary;
var z3[Assignment["Reveal_secret"]] binary;
var z4[Assignment["Importance"]] binary;
var z5[Assignment["Quantity"]] binary;
var z6[Assignment["Active_substance"]] binary;
var z7[Assignment["Manufacturing"]] binary;
var z8[Assignment["Increment"]] binary;
var z9[Assignment["Cardinal_numbers"]] binary;
var z10[Assignment["Measure_duration"]] binary;
var z11[Assignment["Time_vector"]] binary;
var z12[Assignment["Locale_by_use"]] binary;
var z13[Assignment["Being_located"]] binary;
var z14[Assignment["Biological_area"]] binary;
var z15[Assignment["Substance"]] binary;
var z16[Assignment["Ammunition"]] binary;
var z17[Assignment["Gizmo"]] binary;
var z18[Assignment["Being_necessary"]] binary;
var z19[Assignment["Intentionally_create"]] binary;
var z20[Assignment["Ordinal_numbers"]] binary;
var z21[Assignment["Weapon"]] binary;
var z22[Assignment["Manufacturing"]] binary;
var z23[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Accompaniment"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Supply"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Leadership"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Reveal_secret"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Importance"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Quantity"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Active_substance"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Manufacturing"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Increment"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Cardinal_numbers"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Measure_duration"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Time_vector"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Locale_by_use"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Being_located"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Biological_area"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Substance"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Ammunition"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Gizmo"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Being_necessary"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Intentionally_create"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Ordinal_numbers"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Weapon"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Manufacturing"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;
param probabilities23[Assignment["Locale_by_use"]] := read "../frameData/frame23.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Accompaniment"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Reveal_secret"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Active_substance"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Measure_duration"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Time_vector"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Being_located"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Biological_area"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Ammunition"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Gizmo"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Being_necessary"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Ordinal_numbers"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities22[r,s] * z22[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities23[r,s] * z23[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 59};
set G[I] := <0> {"0_0","0_59","0_9"}, <1> {"0_59","0_9","1_1","1_9"}, <2> {"0_59","0_9","1_9","2_2","2_9"}, <3> {"0_59","0_9","1_9","2_9","3_3","3_7"}, <4> {"0_59","0_9","1_9","2_9","3_7","4_4","4_7"}, <5> {"0_59","0_9","1_9","2_9","3_7","4_7","5_5"}, <6> {"0_59","0_9","1_9","2_9","3_7","4_7","6_6"}, <7> {"0_59","0_9","1_9","2_9","3_7","4_7","7_7"}, <8> {"0_59","0_9","1_9","2_9","8_8","8_9"}, <9> {"0_59","0_9","1_9","2_9","8_9","9_9"}, <10> {"0_59","10_10"}, <11> {"0_59","11_11"}, <12> {"0_59","12_12"}, <13> {"0_59","13_13","13_58"}, <14> {"0_59","13_58","14_14"}, <15> {"0_59","13_58","15_15"}, <16> {"0_59","13_58","16_16"}, <17> {"0_59","13_58","17_17"}, <18> {"0_59","13_58","18_18","18_58"}, <19> {"0_59","13_58","18_58","19_19","19_20","19_58"}, <20> {"0_59","13_58","18_58","19_20","19_58","20_20","20_58"}, <21> {"0_59","13_58","18_58","19_58","20_58","21_21","21_58"}, <22> {"0_59","13_58","18_58","19_58","20_58","21_58","22_22","22_23","22_24","22_25","22_26"}, <23> {"0_59","13_58","18_58","19_58","20_58","21_58","22_23","22_24","22_25","22_26","23_23","23_24"}, <24> {"0_59","13_58","18_58","19_58","20_58","21_58","22_24","22_25","22_26","23_24","24_24"}, <25> {"0_59","13_58","18_58","19_58","20_58","21_58","22_25","22_26","25_25"}, <26> {"0_59","13_58","18_58","19_58","20_58","21_58","22_26","26_26"}, <27> {"0_59","13_58","18_58","19_58","20_58","21_58","27_27","27_43"}, <28> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_28","28_43"}, <29> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","29_29"}, <30> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","30_30","30_31"}, <31> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","30_31","31_31"}, <32> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","32_32"}, <33> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_33","33_43"}, <34> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_34","34_43"}, <35> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_35","35_37","35_41","35_43"}, <36> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_37","35_41","35_43","36_36"}, <37> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_37","35_41","35_43","37_37"}, <38> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_41","35_43","38_38","38_39"}, <39> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_41","35_43","38_39","39_39"}, <40> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_41","35_43","40_40"}, <41> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_41","35_43","41_41"}, <42> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_43","42_42","42_43"}, <43> {"0_59","13_58","18_58","19_58","20_58","21_58","27_43","28_43","33_43","34_43","35_43","42_43","43_43"}, <44> {"0_59","13_58","18_58","19_58","20_58","21_58","44_44"}, <45> {"0_59","13_58","18_58","19_58","20_58","21_58","45_45","45_58"}, <46> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_46","46_58"}, <47> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_47","47_48","47_50","47_58"}, <48> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_48","47_50","47_58","48_48"}, <49> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_50","47_58","49_49"}, <50> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_50","47_58","50_50"}, <51> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_51","51_58"}, <52> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_52","52_53","52_58"}, <53> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_53","52_58","53_53","53_58"}, <54> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_58","53_58","54_54","54_58"}, <55> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_58","53_58","54_58","55_55"}, <56> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_58","53_58","54_58","56_56"}, <57> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_58","53_58","54_58","57_57"}, <58> {"0_59","13_58","18_58","19_58","20_58","21_58","45_58","46_58","47_58","51_58","52_58","53_58","54_58","58_58"}, <59> {"0_59","59_59"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Accompaniment"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Reveal_secret"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Active_substance"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Measure_duration"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Time_vector"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Being_located"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Biological_area"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Ammunition"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Gizmo"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Being_necessary"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Ordinal_numbers"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
subto overlap23: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z23[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Accompaniment"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Supply"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Leadership"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Reveal_secret"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Importance"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Quantity"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Active_substance"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Increment"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Measure_duration"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Time_vector"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Being_located"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Biological_area"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Substance"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Ammunition"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Gizmo"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Being_necessary"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Ordinal_numbers"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Weapon"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z22[r,s] == 1;
subto unique23: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z23[r,s] == 1;
#pairwise exclusion constraint
set Exc4 := {<"Field","Interested_party">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc5 := {<"Individuals","Mass">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc20 := {<"Basis_of_order","Starting_point">};
subto exclusion20: forall <ri,rj> in Exc20 do z20[ri,"-1_-1"] + z20[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

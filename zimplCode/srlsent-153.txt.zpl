# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Leadership","Buildings","Arriving","Calendric_unit","Roadways","Locative_relation","Expectation","Appearance","Predicament","Origin","Relational_quantity","Cardinal_numbers","Measure_duration","Possibilities","Exchange","Revenge"};
set Roles[Frames] :=  <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Arriving"> {"Theme","Cotheme","Means","Depictive","Circumstances","Manner","Time","Source","Period_of_iterations","Degree","Event_description","Re_encoding","Goal","Purpose","Goal_conditions","Path","Frequency","Mode_of_transportation"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Expectation"> {"Evidence","Phenomenon","Topic","Manner","Depictive","Degree","Cognizer"}, <"Appearance"> {"Characterization","Perceiver_passive","Phenomenon","Degree","State","Ground","Appraisal","Location_of_perceiver","Frequency","Body_part","Inference"}, <"Predicament"> {"Time","Cause","Place","Experiencer","Domain","Situation"}, <"Origin"> {"Entity","Origin"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Measure_duration"> {"Agent","Count","Unit","Process"}, <"Possibilities"> {"Purpose","Event","Salient_entity","Agent","Number_of_possibilities"}, <"Exchange"> {"Theme_2","Place","Period_of_iterations","Manner","Exchangers","Time","Themes","Frequency","Exchanger_2","Exchanger_1","Theme_1"}, <"Revenge"> {"Purpose","Avenger","Depictive","Offender","Instrument","Place","Degree","Injury","Duration","Punishment","Injured_Party","Manner","Time"};
set Spans := {"-1_-1","0_0","0_39","0_9","10_10","10_39","11_11","11_12","12_12","13_13","13_14","14_14","15_15","15_38","16_16","17_17","17_38","18_18","18_38","19_19","1_1","20_20","20_38","21_21","21_22","21_38","22_22","22_38","23_23","23_38","24_24","24_38","25_25","25_38","26_26","26_30","27_27","27_28","27_30","28_28","29_29","29_30","2_2","30_30","31_31","31_38","32_32","32_33","32_34","32_38","33_33","34_34","34_38","35_35","35_38","36_36","36_38","37_37","38_38","39_39","3_3","3_4","3_5","4_4","4_5","5_5","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Leadership"]] binary;
var z1[Assignment["Buildings"]] binary;
var z2[Assignment["Arriving"]] binary;
var z3[Assignment["Calendric_unit"]] binary;
var z4[Assignment["Roadways"]] binary;
var z5[Assignment["Locative_relation"]] binary;
var z6[Assignment["Expectation"]] binary;
var z7[Assignment["Appearance"]] binary;
var z8[Assignment["Predicament"]] binary;
var z9[Assignment["Origin"]] binary;
var z10[Assignment["Relational_quantity"]] binary;
var z11[Assignment["Cardinal_numbers"]] binary;
var z12[Assignment["Measure_duration"]] binary;
var z13[Assignment["Possibilities"]] binary;
var z14[Assignment["Exchange"]] binary;
var z15[Assignment["Revenge"]] binary;
param probabilities0[Assignment["Leadership"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Buildings"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Arriving"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Calendric_unit"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Roadways"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locative_relation"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Expectation"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Appearance"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Predicament"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Origin"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Relational_quantity"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Cardinal_numbers"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Measure_duration"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Possibilities"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Exchange"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Revenge"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Leadership"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Arriving"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Expectation"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Appearance"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Predicament"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Measure_duration"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Possibilities"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Exchange"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Revenge"] : probabilities15[r,s] * z15[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 39};
set G[I] := <0> {"0_0","0_39","0_9"}, <1> {"0_39","0_9","1_1"}, <2> {"0_39","0_9","2_2"}, <3> {"0_39","0_9","3_3","3_4","3_5"}, <4> {"0_39","0_9","3_4","3_5","4_4","4_5"}, <5> {"0_39","0_9","3_5","4_5","5_5"}, <6> {"0_39","0_9","6_6"}, <7> {"0_39","0_9","7_7"}, <8> {"0_39","0_9","8_8"}, <9> {"0_39","0_9","9_9"}, <10> {"0_39","10_10","10_39"}, <11> {"0_39","10_39","11_11","11_12"}, <12> {"0_39","10_39","11_12","12_12"}, <13> {"0_39","10_39","13_13","13_14"}, <14> {"0_39","10_39","13_14","14_14"}, <15> {"0_39","10_39","15_15","15_38"}, <16> {"0_39","10_39","15_38","16_16"}, <17> {"0_39","10_39","15_38","17_17","17_38"}, <18> {"0_39","10_39","15_38","17_38","18_18","18_38"}, <19> {"0_39","10_39","15_38","17_38","18_38","19_19"}, <20> {"0_39","10_39","15_38","17_38","18_38","20_20","20_38"}, <21> {"0_39","10_39","15_38","17_38","18_38","20_38","21_21","21_22","21_38"}, <22> {"0_39","10_39","15_38","17_38","18_38","20_38","21_22","21_38","22_22","22_38"}, <23> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_23","23_38"}, <24> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_24","24_38"}, <25> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_25","25_38"}, <26> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","26_26","26_30"}, <27> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","26_30","27_27","27_28","27_30"}, <28> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","26_30","27_28","27_30","28_28"}, <29> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","26_30","27_30","29_29","29_30"}, <30> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","26_30","27_30","29_30","30_30"}, <31> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_31","31_38"}, <32> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_32","32_33","32_34","32_38"}, <33> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_33","32_34","32_38","33_33"}, <34> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_34","32_38","34_34","34_38"}, <35> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_38","34_38","35_35","35_38"}, <36> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_38","34_38","35_38","36_36","36_38"}, <37> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_38","34_38","35_38","36_38","37_37"}, <38> {"0_39","10_39","15_38","17_38","18_38","20_38","21_38","22_38","23_38","24_38","25_38","31_38","32_38","34_38","35_38","36_38","38_38"}, <39> {"0_39","10_39","39_39"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Arriving"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Expectation"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Appearance"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Predicament"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Measure_duration"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Possibilities"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Exchange"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Revenge"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Leadership"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Buildings"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Arriving"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Roadways"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Expectation"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Appearance"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Predicament"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Origin"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Measure_duration"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Possibilities"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Exchange"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Revenge"] do sum <s> in Spans : z15[r,s] == 1;
#pairwise exclusion constraint
set Exc5 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc14 := {<"Theme_2","Themes">,<"Theme_1","Themes">,<"Exchanger_2","Exchangers">,<"Exchanger_1","Exchangers">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr14 := {<"Exchanger_1","Exchanger_2">,<"Theme_1","Theme_2">,<"Exchangers","Themes">};
subto require14: forall <ri,rj> in Reqr14 do z14[ri,"-1_-1"] - z14[rj,"-1_-1"] == 0;

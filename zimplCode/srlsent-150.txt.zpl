# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Travel","Increment","Catastrophe","Locale","Inclusion","Part_orientational","Used_up","Cardinal_numbers","Calendric_unit","Arriving","Buildings","Increment","Locale_by_use","Seeking_to_achieve","Awareness","Reason","Assistance","Being_in_effect","Building","Increment","Predicament"};
set Roles[Frames] :=  <"Travel"> {"Mode_of_transportation","Area","Time","Path","Reason","Depictive","Traveler","Means","Frequency","Place","Manner","Co_participant","Source","Distance","Descriptor","Speed","Purpose","Travel_means","Duration","Goal","Baggage","Period_of_Iterations","Direction","Iterations"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Catastrophe"> {"Undesirable_Event","Place","Degree","Manner","Undergoer","Time","Circumstances","Cause"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Used_up"> {"Explanation","Degree","Resource","Excess"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Arriving"> {"Theme","Cotheme","Means","Depictive","Circumstances","Manner","Time","Source","Period_of_iterations","Degree","Event_description","Re_encoding","Goal","Purpose","Goal_conditions","Path","Frequency","Mode_of_transportation"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Seeking_to_achieve"> {"Purpose","Circumstances","State_of_affairs","Degree","Means","Source","Sought_entity","Depictive","Duration","Time","Beneficiary","Manner","Explanation","Agent"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Reason"> {"Action","State_of_Affairs","Agent"}, <"Assistance"> {"Purpose","Time","Goal","Place","Frequency","Degree","Helper","Means","Benefited_party","Domain","Duration","Focal_entity","Manner","Explanation"}, <"Being_in_effect"> {"Duration","Place","Degree","Binding_principle","Time","Circumstances","Explanation","Obligated_party"}, <"Building"> {"Purpose","Result","Components","Time","Descriptor","Instrument","Place","Created_entity","Means","Period_of_iterations","Particular_iteration","Duration","Beneficiary","Manner","Agent"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Predicament"> {"Time","Cause","Place","Experiencer","Domain","Situation"};
set Spans := {"-1_-1","0_0","0_17","0_42","10_10","11_11","11_16","12_12","12_13","12_16","13_13","14_14","15_15","16_16","17_17","18_18","18_42","19_19","19_41","1_1","20_20","20_21","20_26","21_21","21_26","22_22","22_26","23_23","23_26","24_24","25_25","26_26","27_27","27_41","28_28","28_41","29_29","2_2","30_30","30_41","31_31","31_32","31_41","32_32","32_41","33_33","33_41","34_34","35_35","35_41","36_36","36_41","37_37","37_41","38_38","39_39","3_3","40_40","41_41","42_42","4_16","4_4","5_16","5_5","6_16","6_6","7_16","7_7","8_10","8_16","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Travel"]] binary;
var z1[Assignment["Increment"]] binary;
var z2[Assignment["Catastrophe"]] binary;
var z3[Assignment["Locale"]] binary;
var z4[Assignment["Inclusion"]] binary;
var z5[Assignment["Part_orientational"]] binary;
var z6[Assignment["Used_up"]] binary;
var z7[Assignment["Cardinal_numbers"]] binary;
var z8[Assignment["Calendric_unit"]] binary;
var z9[Assignment["Arriving"]] binary;
var z10[Assignment["Buildings"]] binary;
var z11[Assignment["Increment"]] binary;
var z12[Assignment["Locale_by_use"]] binary;
var z13[Assignment["Seeking_to_achieve"]] binary;
var z14[Assignment["Awareness"]] binary;
var z15[Assignment["Reason"]] binary;
var z16[Assignment["Assistance"]] binary;
var z17[Assignment["Being_in_effect"]] binary;
var z18[Assignment["Building"]] binary;
var z19[Assignment["Increment"]] binary;
var z20[Assignment["Predicament"]] binary;
param probabilities0[Assignment["Travel"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Increment"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Catastrophe"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locale"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Inclusion"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Part_orientational"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Used_up"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Cardinal_numbers"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Calendric_unit"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Arriving"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Buildings"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Increment"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Locale_by_use"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Seeking_to_achieve"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Awareness"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Reason"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Assistance"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Being_in_effect"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Building"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Increment"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Predicament"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Travel"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Catastrophe"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Used_up"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Arriving"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Seeking_to_achieve"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Reason"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Assistance"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Being_in_effect"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Building"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Predicament"] : probabilities20[r,s] * z20[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 42};
set G[I] := <0> {"0_0","0_17","0_42"}, <1> {"0_17","0_42","1_1"}, <2> {"0_17","0_42","2_2"}, <3> {"0_17","0_42","3_3"}, <4> {"0_17","0_42","4_16","4_4"}, <5> {"0_17","0_42","4_16","5_16","5_5"}, <6> {"0_17","0_42","4_16","5_16","6_16","6_6"}, <7> {"0_17","0_42","4_16","5_16","6_16","7_16","7_7"}, <8> {"0_17","0_42","4_16","5_16","6_16","7_16","8_10","8_16","8_8"}, <9> {"0_17","0_42","4_16","5_16","6_16","7_16","8_10","8_16","9_9"}, <10> {"0_17","0_42","10_10","4_16","5_16","6_16","7_16","8_10","8_16"}, <11> {"0_17","0_42","11_11","11_16","4_16","5_16","6_16","7_16","8_16"}, <12> {"0_17","0_42","11_16","12_12","12_13","12_16","4_16","5_16","6_16","7_16","8_16"}, <13> {"0_17","0_42","11_16","12_13","12_16","13_13","4_16","5_16","6_16","7_16","8_16"}, <14> {"0_17","0_42","11_16","12_16","14_14","4_16","5_16","6_16","7_16","8_16"}, <15> {"0_17","0_42","11_16","12_16","15_15","4_16","5_16","6_16","7_16","8_16"}, <16> {"0_17","0_42","11_16","12_16","16_16","4_16","5_16","6_16","7_16","8_16"}, <17> {"0_17","0_42","17_17"}, <18> {"0_42","18_18","18_42"}, <19> {"0_42","18_42","19_19","19_41"}, <20> {"0_42","18_42","19_41","20_20","20_21","20_26"}, <21> {"0_42","18_42","19_41","20_21","20_26","21_21","21_26"}, <22> {"0_42","18_42","19_41","20_26","21_26","22_22","22_26"}, <23> {"0_42","18_42","19_41","20_26","21_26","22_26","23_23","23_26"}, <24> {"0_42","18_42","19_41","20_26","21_26","22_26","23_26","24_24"}, <25> {"0_42","18_42","19_41","20_26","21_26","22_26","23_26","25_25"}, <26> {"0_42","18_42","19_41","20_26","21_26","22_26","23_26","26_26"}, <27> {"0_42","18_42","19_41","27_27","27_41"}, <28> {"0_42","18_42","19_41","27_41","28_28","28_41"}, <29> {"0_42","18_42","19_41","27_41","28_41","29_29"}, <30> {"0_42","18_42","19_41","27_41","28_41","30_30","30_41"}, <31> {"0_42","18_42","19_41","27_41","28_41","30_41","31_31","31_32","31_41"}, <32> {"0_42","18_42","19_41","27_41","28_41","30_41","31_32","31_41","32_32","32_41"}, <33> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_33","33_41"}, <34> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","34_34"}, <35> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_35","35_41"}, <36> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_41","36_36","36_41"}, <37> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_41","36_41","37_37","37_41"}, <38> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_41","36_41","37_41","38_38"}, <39> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_41","36_41","37_41","39_39"}, <40> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_41","36_41","37_41","40_40"}, <41> {"0_42","18_42","19_41","27_41","28_41","30_41","31_41","32_41","33_41","35_41","36_41","37_41","41_41"}, <42> {"0_42","18_42","42_42"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Travel"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Catastrophe"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Used_up"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Arriving"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Seeking_to_achieve"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Reason"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Assistance"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Being_in_effect"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Building"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Predicament"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Travel"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Increment"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Catastrophe"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locale"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Used_up"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Arriving"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Buildings"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Increment"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Seeking_to_achieve"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Awareness"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Reason"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Assistance"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Being_in_effect"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Building"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Increment"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Predicament"] do sum <s> in Spans : z20[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Area","Direction">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc13 := {<"Sought_entity","State_of_affairs">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
set Exc14 := {<"Cognizer","Expressor">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

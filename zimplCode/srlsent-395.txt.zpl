# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"People_along_political_spectrum","Building_subparts","Size","Accoutrements","Noise_makers","Attaching","Artifact","Moving_in_place","Completeness","Quantity","Process_start","Process_end","Body_decoration","Posture"};
set Roles[Frames] :=  <"People_along_political_spectrum"> {"Individual","Age"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"}, <"Size"> {"Degree","Entity"}, <"Accoutrements"> {"Use","Wearer","Part","Descriptor","Accoutrement","Material","Style","Body_location"}, <"Noise_makers"> {"Name","Type","Material","Use","Noise_maker"}, <"Attaching"> {"Purpose","Result","Time","Goal","Instrument","Place","Connector","Means","Items","Period_of_iterations","Handle","Duration","Item","Manner","Agent"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Moving_in_place"> {"Purpose","Result","Fixed_location","Time","Place","Theme","Direction","Periodicity","Cause","Depictive","Path_shape","Manner","Angle"}, <"Completeness"> {"Degree","Whole","Time"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Process_start"> {"Place","Initial_subevent","Manner","Time","Reason","Depictive","Frequency","Event"}, <"Process_end"> {"Last_subevent","Place","Result","Degree","Manner","Time","Reason","Depictive","Process"}, <"Body_decoration"> {"Picture","Decorated_individual","Type","Use","Body_location","Decoration","Decoration_desriptor"}, <"Posture"> {"Duration","Agent","Dependent_state","Degree","Manner","Location","Time","Point_of_contact","Depictive","Purpose"};
set Spans := {"-1_-1","0_0","0_36","0_4","10_10","11_11","11_13","12_12","12_13","13_13","14_14","15_15","16_16","17_17","17_21","18_18","18_21","19_19","1_1","20_20","21_21","22_22","23_23","23_35","24_24","25_25","25_35","26_26","27_27","27_35","28_28","29_29","29_35","2_2","2_4","30_30","30_35","31_31","32_32","33_33","34_34","35_35","36_36","3_3","3_4","4_4","5_5","6_14","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["People_along_political_spectrum"]] binary;
var z1[Assignment["Building_subparts"]] binary;
var z2[Assignment["Size"]] binary;
var z3[Assignment["Accoutrements"]] binary;
var z4[Assignment["Noise_makers"]] binary;
var z5[Assignment["Attaching"]] binary;
var z6[Assignment["Artifact"]] binary;
var z7[Assignment["Moving_in_place"]] binary;
var z8[Assignment["Completeness"]] binary;
var z9[Assignment["Quantity"]] binary;
var z10[Assignment["Process_start"]] binary;
var z11[Assignment["Process_end"]] binary;
var z12[Assignment["Body_decoration"]] binary;
var z13[Assignment["Posture"]] binary;
param probabilities0[Assignment["People_along_political_spectrum"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Building_subparts"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Size"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Accoutrements"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Noise_makers"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Attaching"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Artifact"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Moving_in_place"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Completeness"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Quantity"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Process_start"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Process_end"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Body_decoration"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Posture"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["People_along_political_spectrum"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Size"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Accoutrements"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Noise_makers"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Attaching"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Moving_in_place"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Completeness"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Process_start"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Process_end"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Body_decoration"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Posture"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 36};
set G[I] := <0> {"0_0","0_36","0_4"}, <1> {"0_36","0_4","1_1"}, <2> {"0_36","0_4","2_2","2_4"}, <3> {"0_36","0_4","2_4","3_3","3_4"}, <4> {"0_36","0_4","2_4","3_4","4_4"}, <5> {"0_36","5_5"}, <6> {"0_36","6_14","6_6"}, <7> {"0_36","6_14","7_7"}, <8> {"0_36","6_14","8_8"}, <9> {"0_36","6_14","9_9"}, <10> {"0_36","10_10","6_14"}, <11> {"0_36","11_11","11_13","6_14"}, <12> {"0_36","11_13","12_12","12_13","6_14"}, <13> {"0_36","11_13","12_13","13_13","6_14"}, <14> {"0_36","14_14","6_14"}, <15> {"0_36","15_15"}, <16> {"0_36","16_16"}, <17> {"0_36","17_17","17_21"}, <18> {"0_36","17_21","18_18","18_21"}, <19> {"0_36","17_21","18_21","19_19"}, <20> {"0_36","17_21","18_21","20_20"}, <21> {"0_36","17_21","18_21","21_21"}, <22> {"0_36","22_22"}, <23> {"0_36","23_23","23_35"}, <24> {"0_36","23_35","24_24"}, <25> {"0_36","23_35","25_25","25_35"}, <26> {"0_36","23_35","25_35","26_26"}, <27> {"0_36","23_35","25_35","27_27","27_35"}, <28> {"0_36","23_35","25_35","27_35","28_28"}, <29> {"0_36","23_35","25_35","27_35","29_29","29_35"}, <30> {"0_36","23_35","25_35","27_35","29_35","30_30","30_35"}, <31> {"0_36","23_35","25_35","27_35","29_35","30_35","31_31"}, <32> {"0_36","23_35","25_35","27_35","29_35","30_35","32_32"}, <33> {"0_36","23_35","25_35","27_35","29_35","30_35","33_33"}, <34> {"0_36","23_35","25_35","27_35","29_35","30_35","34_34"}, <35> {"0_36","23_35","25_35","27_35","29_35","30_35","35_35"}, <36> {"0_36","36_36"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["People_along_political_spectrum"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Size"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Accoutrements"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Noise_makers"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Attaching"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Moving_in_place"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Completeness"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Process_start"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Process_end"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Body_decoration"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Posture"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["People_along_political_spectrum"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Size"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Accoutrements"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Noise_makers"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Attaching"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Artifact"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Moving_in_place"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Completeness"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Quantity"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Process_start"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Process_end"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Body_decoration"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Posture"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc5 := {<"Item","Items">,<"Goal","Items">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc9 := {<"Individuals","Mass">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr5 := {<"Goal","Item">};
subto require5: forall <ri,rj> in Reqr5 do z5[ri,"-1_-1"] - z5[rj,"-1_-1"] == 0;

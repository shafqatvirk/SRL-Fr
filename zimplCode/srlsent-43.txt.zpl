# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Locale","Locative_relation","Natural_features","Biological_area","Isolated_places","Posture","Aggregate","Intoxicants"};
set Roles[Frames] :=  <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Biological_area"> {"Relative_location","Constituent_parts","Container_possessor","Formational_cause","Descriptor","Name","Locale"}, <"Isolated_places"> {"Place","Relative_location"}, <"Posture"> {"Duration","Agent","Dependent_state","Degree","Manner","Location","Time","Point_of_contact","Depictive","Purpose"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Intoxicants"> {"Country_of_origin","Type","Descriptor","Intoxicant"};
set Spans := {"-1_-1","0_0","0_1","0_18","0_4","10_10","10_17","11_11","11_17","12_12","12_17","13_13","14_14","15_15","16_16","17_17","18_18","1_1","2_2","2_4","3_3","3_4","4_4","5_18","5_5","6_6","6_7","7_7","8_8","9_17","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Locale"]] binary;
var z1[Assignment["Locative_relation"]] binary;
var z2[Assignment["Natural_features"]] binary;
var z3[Assignment["Biological_area"]] binary;
var z4[Assignment["Isolated_places"]] binary;
var z5[Assignment["Posture"]] binary;
var z6[Assignment["Aggregate"]] binary;
var z7[Assignment["Intoxicants"]] binary;
param probabilities0[Assignment["Locale"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Locative_relation"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Natural_features"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Biological_area"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Isolated_places"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Posture"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Aggregate"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Intoxicants"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Locale"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Biological_area"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Isolated_places"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Posture"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Intoxicants"] : probabilities7[r,s] * z7[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 18};
set G[I] := <0> {"0_0","0_1","0_18","0_4"}, <1> {"0_1","0_18","0_4","1_1"}, <2> {"0_18","0_4","2_2","2_4"}, <3> {"0_18","0_4","2_4","3_3","3_4"}, <4> {"0_18","0_4","2_4","3_4","4_4"}, <5> {"0_18","5_18","5_5"}, <6> {"0_18","5_18","6_6","6_7"}, <7> {"0_18","5_18","6_7","7_7"}, <8> {"0_18","5_18","8_8"}, <9> {"0_18","5_18","9_17","9_9"}, <10> {"0_18","10_10","10_17","5_18","9_17"}, <11> {"0_18","10_17","11_11","11_17","5_18","9_17"}, <12> {"0_18","10_17","11_17","12_12","12_17","5_18","9_17"}, <13> {"0_18","10_17","11_17","12_17","13_13","5_18","9_17"}, <14> {"0_18","10_17","11_17","12_17","14_14","5_18","9_17"}, <15> {"0_18","10_17","11_17","12_17","15_15","5_18","9_17"}, <16> {"0_18","10_17","11_17","12_17","16_16","5_18","9_17"}, <17> {"0_18","10_17","11_17","12_17","17_17","5_18","9_17"}, <18> {"0_18","18_18","5_18"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Biological_area"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Isolated_places"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Posture"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Intoxicants"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Locale"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Biological_area"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Isolated_places"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Posture"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Intoxicants"] do sum <s> in Spans : z7[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

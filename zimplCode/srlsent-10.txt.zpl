# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Opinion","Reason","Intentionally_affect","Text","Giving","Cardinal_numbers","Capability","Using","Relational_quantity","Direction","Building_subparts","Architectural_part","Frequency"};
set Roles[Frames] :=  <"Opinion"> {"Cognizer","Topic","Manner","Time","Circumstances","Domain","Constancy","Opinion","Evidence"}, <"Reason"> {"Action","State_of_Affairs","Agent"}, <"Intentionally_affect"> {"Patient","Agent"}, <"Text"> {"Topic","Honoree","Use","Author","Containing_text","Genre","Material","Components","Time_of_creation","Title","Text","Medium"}, <"Giving"> {"Recipient","Donor","Circumstances","Time","Place","Theme","Purpose","Means","Period_of_iterations","Reason","Depictive","Purpose_of_theme","Manner"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Using"> {"Duration","Depictive","Purpose","Means","Role","Circumstances","Agent","Manner","Explanation","Outcome","Instrument","Time","Period_of_iterations","Containing_event","Degree","Place","Frequency","Group"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Direction"> {"Base_position","Independent_variable","Degree","Path"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"}, <"Architectural_part"> {"Part","Whole","Descriptor","Material","Orientation"}, <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"};
set Spans := {"-1_-1","0_0","0_1","0_32","0_9","10_10","11_11","12_12","13_13","13_15","13_31","14_14","15_15","16_16","16_17","16_31","17_17","17_31","18_18","18_19","18_31","19_19","19_31","1_1","1_9","20_20","20_31","21_21","21_31","22_22","22_31","23_23","23_31","24_24","24_31","25_25","25_28","25_31","26_26","27_27","28_28","29_29","29_31","2_2","2_3","2_9","30_30","30_31","31_31","32_32","3_3","4_4","4_9","5_5","5_6","5_9","6_6","6_9","7_7","7_9","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Opinion"]] binary;
var z1[Assignment["Reason"]] binary;
var z2[Assignment["Intentionally_affect"]] binary;
var z3[Assignment["Text"]] binary;
var z4[Assignment["Giving"]] binary;
var z5[Assignment["Cardinal_numbers"]] binary;
var z6[Assignment["Capability"]] binary;
var z7[Assignment["Using"]] binary;
var z8[Assignment["Relational_quantity"]] binary;
var z9[Assignment["Direction"]] binary;
var z10[Assignment["Building_subparts"]] binary;
var z11[Assignment["Architectural_part"]] binary;
var z12[Assignment["Frequency"]] binary;
param probabilities0[Assignment["Opinion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Reason"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Intentionally_affect"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Text"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Giving"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Cardinal_numbers"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Capability"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Using"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Relational_quantity"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Direction"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Building_subparts"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Architectural_part"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Frequency"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Opinion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Reason"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Intentionally_affect"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Text"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Giving"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Using"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Direction"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Architectural_part"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Frequency"] : probabilities12[r,s] * z12[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 32};
set G[I] := <0> {"0_0","0_1","0_32","0_9"}, <1> {"0_1","0_32","0_9","1_1","1_9"}, <2> {"0_32","0_9","1_9","2_2","2_3","2_9"}, <3> {"0_32","0_9","1_9","2_3","2_9","3_3"}, <4> {"0_32","0_9","1_9","2_9","4_4","4_9"}, <5> {"0_32","0_9","1_9","2_9","4_9","5_5","5_6","5_9"}, <6> {"0_32","0_9","1_9","2_9","4_9","5_6","5_9","6_6","6_9"}, <7> {"0_32","0_9","1_9","2_9","4_9","5_9","6_9","7_7","7_9"}, <8> {"0_32","0_9","1_9","2_9","4_9","5_9","6_9","7_9","8_8","8_9"}, <9> {"0_32","0_9","1_9","2_9","4_9","5_9","6_9","7_9","8_9","9_9"}, <10> {"0_32","10_10"}, <11> {"0_32","11_11"}, <12> {"0_32","12_12"}, <13> {"0_32","13_13","13_15","13_31"}, <14> {"0_32","13_15","13_31","14_14"}, <15> {"0_32","13_15","13_31","15_15"}, <16> {"0_32","13_31","16_16","16_17","16_31"}, <17> {"0_32","13_31","16_17","16_31","17_17","17_31"}, <18> {"0_32","13_31","16_31","17_31","18_18","18_19","18_31"}, <19> {"0_32","13_31","16_31","17_31","18_19","18_31","19_19","19_31"}, <20> {"0_32","13_31","16_31","17_31","18_31","19_31","20_20","20_31"}, <21> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_21","21_31"}, <22> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_22","22_31"}, <23> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_23","23_31"}, <24> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_24","24_31"}, <25> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_25","25_28","25_31"}, <26> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_28","25_31","26_26"}, <27> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_28","25_31","27_27"}, <28> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_28","25_31","28_28"}, <29> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_31","29_29","29_31"}, <30> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_31","29_31","30_30","30_31"}, <31> {"0_32","13_31","16_31","17_31","18_31","19_31","20_31","21_31","22_31","23_31","24_31","25_31","29_31","30_31","31_31"}, <32> {"0_32","32_32"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Opinion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Reason"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Intentionally_affect"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Text"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Giving"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Using"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Direction"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Architectural_part"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Opinion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Reason"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Intentionally_affect"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Text"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Giving"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Capability"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Using"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Direction"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Architectural_part"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Frequency"] do sum <s> in Spans : z12[r,s] == 1;
#pairwise exclusion constraint
set Exc12 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

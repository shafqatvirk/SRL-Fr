# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Self_motion","Intentionally_act","Arriving","Roadways","Locative_relation","Locating","Locale_by_use","Craft","Secrecy_status","Calendric_unit","Calendric_unit","Cardinal_numbers","Statement","Giving"};
set Roles[Frames] :=  <"Self_motion"> {"Speed","Duration","Area","Purpose","Cotheme","Means","Depictive","Coordinated_event","Manner","Path","Result","Distance","Self_mover","Time","Source","External_cause","Place","Goal","Reason","Direction","Concessive","Internal_cause","Path_shape"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Arriving"> {"Theme","Cotheme","Means","Depictive","Circumstances","Manner","Time","Source","Period_of_iterations","Degree","Event_description","Re_encoding","Goal","Purpose","Goal_conditions","Path","Frequency","Mode_of_transportation"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Locating"> {"Location","Perceiver","Ground","Sought_entity"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Craft"> {"Culture","Descriptor","Activity"}, <"Secrecy_status"> {"Time","Phenomenon","Degree","Epistemic_stance","Cognizer"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Giving"> {"Recipient","Donor","Circumstances","Time","Place","Theme","Purpose","Means","Period_of_iterations","Reason","Depictive","Purpose_of_theme","Manner"};
set Spans := {"-1_-1","0_0","0_20","0_3","0_33","0_5","10_10","10_11","10_20","11_11","11_20","12_12","12_20","13_13","13_20","14_14","15_15","15_17","16_16","16_17","17_17","18_18","18_20","19_19","1_1","1_3","20_20","21_21","22_22","22_23","23_23","24_24","25_25","26_26","26_27","26_32","27_27","28_28","29_29","2_2","2_3","30_30","30_31","31_31","32_32","33_33","3_3","4_4","5_5","6_20","6_6","7_20","7_7","8_8","9_20","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Self_motion"]] binary;
var z1[Assignment["Intentionally_act"]] binary;
var z2[Assignment["Arriving"]] binary;
var z3[Assignment["Roadways"]] binary;
var z4[Assignment["Locative_relation"]] binary;
var z5[Assignment["Locating"]] binary;
var z6[Assignment["Locale_by_use"]] binary;
var z7[Assignment["Craft"]] binary;
var z8[Assignment["Secrecy_status"]] binary;
var z9[Assignment["Calendric_unit"]] binary;
var z10[Assignment["Calendric_unit"]] binary;
var z11[Assignment["Cardinal_numbers"]] binary;
var z12[Assignment["Statement"]] binary;
var z13[Assignment["Giving"]] binary;
param probabilities0[Assignment["Self_motion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Intentionally_act"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Arriving"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Roadways"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Locative_relation"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locating"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locale_by_use"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Craft"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Secrecy_status"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Calendric_unit"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Calendric_unit"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Cardinal_numbers"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Statement"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Giving"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Self_motion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Arriving"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locating"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Craft"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Secrecy_status"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Giving"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 33};
set G[I] := <0> {"0_0","0_20","0_3","0_33","0_5"}, <1> {"0_20","0_3","0_33","0_5","1_1","1_3"}, <2> {"0_20","0_3","0_33","0_5","1_3","2_2","2_3"}, <3> {"0_20","0_3","0_33","0_5","1_3","2_3","3_3"}, <4> {"0_20","0_33","0_5","4_4"}, <5> {"0_20","0_33","0_5","5_5"}, <6> {"0_20","0_33","6_20","6_6"}, <7> {"0_20","0_33","6_20","7_20","7_7"}, <8> {"0_20","0_33","6_20","7_20","8_8"}, <9> {"0_20","0_33","6_20","7_20","9_20","9_9"}, <10> {"0_20","0_33","10_10","10_11","10_20","6_20","7_20","9_20"}, <11> {"0_20","0_33","10_11","10_20","11_11","11_20","6_20","7_20","9_20"}, <12> {"0_20","0_33","10_20","11_20","12_12","12_20","6_20","7_20","9_20"}, <13> {"0_20","0_33","10_20","11_20","12_20","13_13","13_20","6_20","7_20","9_20"}, <14> {"0_20","0_33","10_20","11_20","12_20","13_20","14_14","6_20","7_20","9_20"}, <15> {"0_20","0_33","10_20","11_20","12_20","13_20","15_15","15_17","6_20","7_20","9_20"}, <16> {"0_20","0_33","10_20","11_20","12_20","13_20","15_17","16_16","16_17","6_20","7_20","9_20"}, <17> {"0_20","0_33","10_20","11_20","12_20","13_20","15_17","16_17","17_17","6_20","7_20","9_20"}, <18> {"0_20","0_33","10_20","11_20","12_20","13_20","18_18","18_20","6_20","7_20","9_20"}, <19> {"0_20","0_33","10_20","11_20","12_20","13_20","18_20","19_19","6_20","7_20","9_20"}, <20> {"0_20","0_33","10_20","11_20","12_20","13_20","18_20","20_20","6_20","7_20","9_20"}, <21> {"0_33","21_21"}, <22> {"0_33","22_22","22_23"}, <23> {"0_33","22_23","23_23"}, <24> {"0_33","24_24"}, <25> {"0_33","25_25"}, <26> {"0_33","26_26","26_27","26_32"}, <27> {"0_33","26_27","26_32","27_27"}, <28> {"0_33","26_32","28_28"}, <29> {"0_33","26_32","29_29"}, <30> {"0_33","26_32","30_30","30_31"}, <31> {"0_33","26_32","30_31","31_31"}, <32> {"0_33","26_32","32_32"}, <33> {"0_33","33_33"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Self_motion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Arriving"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locating"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Craft"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Secrecy_status"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Giving"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Self_motion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Arriving"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Roadways"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locating"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Craft"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Secrecy_status"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Statement"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Giving"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Area","Direction">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc4 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

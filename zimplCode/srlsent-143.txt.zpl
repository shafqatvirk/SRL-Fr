# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Increment","Cardinal_numbers","Locale_by_use","Leadership","Statement","Diversity","Event_instance","Locale_by_use","Locale_by_use","Roadways","Part_whole","Desirability","People","Natural_features","Project","Natural_features","Part_orientational","Natural_features","Locale_by_use"};
set Roles[Frames] :=  <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Diversity"> {"Depictive","Group","Degree","Place","Dimension"}, <"Event_instance"> {"Instance","Event","Instance_Prop"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Part_whole"> {"Part","Whole","Part_Prop","Orientation"}, <"Desirability"> {"Parameter","Affected_party","Circumstances","Depictive","Comparison_set","Degree","Evaluee"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_47","0_5","10_10","11_11","11_46","12_12","12_46","13_13","13_14","13_46","14_14","15_15","15_20","15_22","15_46","16_16","16_17","16_20","17_17","17_20","18_18","18_20","19_19","1_1","1_5","20_20","21_21","22_22","23_23","23_25","23_26","23_27","23_46","24_24","25_25","26_26","27_27","27_46","28_28","28_46","29_29","29_34","2_2","2_5","30_30","30_34","31_31","32_32","33_33","34_34","35_35","35_46","36_36","36_46","37_37","38_38","38_42","39_39","39_40","39_42","3_3","40_40","41_41","42_42","43_43","43_46","44_44","44_46","45_45","46_46","47_47","4_4","5_5","6_6","7_7","7_9","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Increment"]] binary;
var z1[Assignment["Cardinal_numbers"]] binary;
var z2[Assignment["Locale_by_use"]] binary;
var z3[Assignment["Leadership"]] binary;
var z4[Assignment["Statement"]] binary;
var z5[Assignment["Diversity"]] binary;
var z6[Assignment["Event_instance"]] binary;
var z7[Assignment["Locale_by_use"]] binary;
var z8[Assignment["Locale_by_use"]] binary;
var z9[Assignment["Roadways"]] binary;
var z10[Assignment["Part_whole"]] binary;
var z11[Assignment["Desirability"]] binary;
var z12[Assignment["People"]] binary;
var z13[Assignment["Natural_features"]] binary;
var z14[Assignment["Project"]] binary;
var z15[Assignment["Natural_features"]] binary;
var z16[Assignment["Part_orientational"]] binary;
var z17[Assignment["Natural_features"]] binary;
var z18[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Increment"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Cardinal_numbers"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Locale_by_use"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Leadership"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Statement"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Diversity"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Event_instance"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Locale_by_use"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Locale_by_use"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Roadways"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Part_whole"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Desirability"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["People"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Natural_features"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Project"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Natural_features"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Part_orientational"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Natural_features"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Locale_by_use"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Increment"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Diversity"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Event_instance"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Part_whole"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Desirability"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["People"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Project"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities18[r,s] * z18[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 47};
set G[I] := <0> {"0_0","0_47","0_5"}, <1> {"0_47","0_5","1_1","1_5"}, <2> {"0_47","0_5","1_5","2_2","2_5"}, <3> {"0_47","0_5","1_5","2_5","3_3"}, <4> {"0_47","0_5","1_5","2_5","4_4"}, <5> {"0_47","0_5","1_5","2_5","5_5"}, <6> {"0_47","6_6"}, <7> {"0_47","7_7","7_9"}, <8> {"0_47","7_9","8_8"}, <9> {"0_47","7_9","9_9"}, <10> {"0_47","10_10"}, <11> {"0_47","11_11","11_46"}, <12> {"0_47","11_46","12_12","12_46"}, <13> {"0_47","11_46","12_46","13_13","13_14","13_46"}, <14> {"0_47","11_46","12_46","13_14","13_46","14_14"}, <15> {"0_47","11_46","12_46","13_46","15_15","15_20","15_22","15_46"}, <16> {"0_47","11_46","12_46","13_46","15_20","15_22","15_46","16_16","16_17","16_20"}, <17> {"0_47","11_46","12_46","13_46","15_20","15_22","15_46","16_17","16_20","17_17","17_20"}, <18> {"0_47","11_46","12_46","13_46","15_20","15_22","15_46","16_20","17_20","18_18","18_20"}, <19> {"0_47","11_46","12_46","13_46","15_20","15_22","15_46","16_20","17_20","18_20","19_19"}, <20> {"0_47","11_46","12_46","13_46","15_20","15_22","15_46","16_20","17_20","18_20","20_20"}, <21> {"0_47","11_46","12_46","13_46","15_22","15_46","21_21"}, <22> {"0_47","11_46","12_46","13_46","15_22","15_46","22_22"}, <23> {"0_47","11_46","12_46","13_46","15_46","23_23","23_25","23_26","23_27","23_46"}, <24> {"0_47","11_46","12_46","13_46","15_46","23_25","23_26","23_27","23_46","24_24"}, <25> {"0_47","11_46","12_46","13_46","15_46","23_25","23_26","23_27","23_46","25_25"}, <26> {"0_47","11_46","12_46","13_46","15_46","23_26","23_27","23_46","26_26"}, <27> {"0_47","11_46","12_46","13_46","15_46","23_27","23_46","27_27","27_46"}, <28> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_28","28_46"}, <29> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","29_29","29_34"}, <30> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","29_34","30_30","30_34"}, <31> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","29_34","30_34","31_31"}, <32> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","29_34","30_34","32_32"}, <33> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","29_34","30_34","33_33"}, <34> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","29_34","30_34","34_34"}, <35> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_35","35_46"}, <36> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_36","36_46"}, <37> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","37_37"}, <38> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","38_38","38_42"}, <39> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","38_42","39_39","39_40","39_42"}, <40> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","38_42","39_40","39_42","40_40"}, <41> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","38_42","39_42","41_41"}, <42> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","38_42","39_42","42_42"}, <43> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","43_43","43_46"}, <44> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","43_46","44_44","44_46"}, <45> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","43_46","44_46","45_45"}, <46> {"0_47","11_46","12_46","13_46","15_46","23_46","27_46","28_46","35_46","36_46","43_46","44_46","46_46"}, <47> {"0_47","47_47"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Diversity"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Event_instance"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Part_whole"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Desirability"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Increment"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Leadership"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Statement"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Diversity"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Event_instance"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Roadways"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Part_whole"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Desirability"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["People"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Project"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z18[r,s] == 1;
#pairwise exclusion constraint
set Exc14 := {<"Activity","Salient_entity">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

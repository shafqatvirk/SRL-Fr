# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Capability","Possession","Objective_influence","Weapon","Statement","Text","Attack","Killing","Sole_instance","Cardinal_numbers","People","Experiencer_obj","Quantity","People_by_origin"};
set Roles[Frames] :=  <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Objective_influence"> {"Dependent_variable","Influencing_entity","Degree","Dependent_situation","Manner","Dependent_entity","Time","Circumstances","Influencing_situation","Influencing_variable"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Text"> {"Topic","Honoree","Use","Author","Containing_text","Genre","Material","Components","Time_of_creation","Title","Text","Medium"}, <"Attack"> {"Particular_iteration","Iteration","Event_description","Means","Depictive","Circumstances","Manner","Result","Explanation","Time","Source","Containing_event","Place","Re_encoding","Weapon","Purpose","Victim","Path","Assailant"}, <"Killing"> {"Purpose","Means","Depictive","Circumstances","Manner","Result","Explanation","Instrument","Cause","Time","Killer","Beneficiary","Degree","Place","Frequency","Reason","Period_of_iterations","Victim"}, <"Sole_instance"> {"Item","Type"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Experiencer_obj"> {"Result","Degree","Manner","Explanation","Experiencer","Time","Circumstances","Means","Stimulus"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"People_by_origin"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"};
set Spans := {"-1_-1","0_0","0_30","10_10","11_11","11_12","11_29","12_12","12_29","13_13","13_29","14_14","14_29","15_15","16_16","17_17","18_18","19_19","1_1","1_30","20_20","20_29","21_21","21_29","22_22","22_23","22_24","23_23","24_24","25_25","26_26","26_29","27_27","27_29","28_28","28_29","29_29","2_2","2_29","30_30","3_3","3_6","3_9","4_4","5_5","6_6","7_7","7_9","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Capability"]] binary;
var z1[Assignment["Possession"]] binary;
var z2[Assignment["Objective_influence"]] binary;
var z3[Assignment["Weapon"]] binary;
var z4[Assignment["Statement"]] binary;
var z5[Assignment["Text"]] binary;
var z6[Assignment["Attack"]] binary;
var z7[Assignment["Killing"]] binary;
var z8[Assignment["Sole_instance"]] binary;
var z9[Assignment["Cardinal_numbers"]] binary;
var z10[Assignment["People"]] binary;
var z11[Assignment["Experiencer_obj"]] binary;
var z12[Assignment["Quantity"]] binary;
var z13[Assignment["People_by_origin"]] binary;
param probabilities0[Assignment["Capability"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Possession"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Objective_influence"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Weapon"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Statement"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Text"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Attack"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Killing"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Sole_instance"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Cardinal_numbers"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["People"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Experiencer_obj"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Quantity"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["People_by_origin"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Capability"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Objective_influence"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Text"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Attack"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Killing"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Sole_instance"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["People"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Experiencer_obj"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["People_by_origin"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 30};
set G[I] := <0> {"0_0","0_30"}, <1> {"0_30","1_1","1_30"}, <2> {"0_30","1_30","2_2","2_29"}, <3> {"0_30","1_30","2_29","3_3","3_6","3_9"}, <4> {"0_30","1_30","2_29","3_6","3_9","4_4"}, <5> {"0_30","1_30","2_29","3_6","3_9","5_5"}, <6> {"0_30","1_30","2_29","3_6","3_9","6_6"}, <7> {"0_30","1_30","2_29","3_9","7_7","7_9"}, <8> {"0_30","1_30","2_29","3_9","7_9","8_8","8_9"}, <9> {"0_30","1_30","2_29","3_9","7_9","8_9","9_9"}, <10> {"0_30","10_10","1_30","2_29"}, <11> {"0_30","11_11","11_12","11_29","1_30","2_29"}, <12> {"0_30","11_12","11_29","12_12","12_29","1_30","2_29"}, <13> {"0_30","11_29","12_29","13_13","13_29","1_30","2_29"}, <14> {"0_30","11_29","12_29","13_29","14_14","14_29","1_30","2_29"}, <15> {"0_30","11_29","12_29","13_29","14_29","15_15","1_30","2_29"}, <16> {"0_30","11_29","12_29","13_29","14_29","16_16","1_30","2_29"}, <17> {"0_30","11_29","12_29","13_29","14_29","17_17","1_30","2_29"}, <18> {"0_30","11_29","12_29","13_29","14_29","18_18","1_30","2_29"}, <19> {"0_30","11_29","12_29","13_29","14_29","19_19","1_30","2_29"}, <20> {"0_30","11_29","12_29","13_29","14_29","1_30","20_20","20_29","2_29"}, <21> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_21","21_29","2_29"}, <22> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","22_22","22_23","22_24","2_29"}, <23> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","22_23","22_24","23_23","2_29"}, <24> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","22_24","24_24","2_29"}, <25> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","25_25","2_29"}, <26> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","26_26","26_29","2_29"}, <27> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","26_29","27_27","27_29","2_29"}, <28> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","26_29","27_29","28_28","28_29","2_29"}, <29> {"0_30","11_29","12_29","13_29","14_29","1_30","20_29","21_29","26_29","27_29","28_29","29_29","2_29"}, <30> {"0_30","1_30","30_30"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Objective_influence"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Text"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Attack"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Killing"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Sole_instance"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Experiencer_obj"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["People_by_origin"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Capability"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Possession"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Objective_influence"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Weapon"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Statement"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Text"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Attack"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Killing"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Sole_instance"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["People"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Experiencer_obj"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Quantity"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["People_by_origin"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Influencing_entity","Influencing_variable">,<"Influencing_entity","Influencing_situation">,<"Influencing_situation","Influencing_variable">,<"Dependent_entity","Dependent_variable">,<"Dependent_situation","Dependent_variable">,<"Dependent_entity","Dependent_situation">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc7 := {<"Cause","Killer">,<"Cause","Means">,<"Cause","Instrument">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc12 := {<"Individuals","Mass">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

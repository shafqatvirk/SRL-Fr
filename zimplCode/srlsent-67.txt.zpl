# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Frequency","Activity_start","Perception_active","Locative_relation","Version_sequence","Intentionally_act","Emptying"};
set Roles[Frames] :=  <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"}, <"Activity_start"> {"Purpose","Circumstances","Subevent","Depictive","Containing_event","Place","Particular_iteration","Activity","Event_description","Manner","Time","Means","Concessive","Explanation","Agent"}, <"Perception_active"> {"Purpose","Depictive","Place","Location_of_perceiver","Expected_entity","Body_part","Direction","State","Means","Phenomenon","Duration","Manner","Perceiver_agentive","Time"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Version_sequence"> {"Degree","Item"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Emptying"> {"Theme","Means","Depictive","Circumstances","Agent","Manner","Result","Explanation","Instrument","Cause","Time","Source","Containing_event","Degree","Place","Goal","Purpose","Path"};
set Spans := {"-1_-1","0_0","0_23","0_3","0_34","10_10","10_23","11_11","11_14","11_18","11_23","12_12","12_13","12_14","13_13","13_14","14_14","15_15","15_18","16_16","17_17","17_18","18_18","19_19","19_21","1_1","20_20","21_21","22_22","23_23","24_24","25_25","26_26","27_27","27_33","28_28","28_33","29_29","29_30","29_33","2_2","30_30","31_31","31_33","32_32","32_33","33_33","34_34","3_3","4_23","4_4","5_23","5_5","6_6","7_23","7_7","7_9","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Frequency"]] binary;
var z1[Assignment["Activity_start"]] binary;
var z2[Assignment["Perception_active"]] binary;
var z3[Assignment["Locative_relation"]] binary;
var z4[Assignment["Version_sequence"]] binary;
var z5[Assignment["Intentionally_act"]] binary;
var z6[Assignment["Emptying"]] binary;
param probabilities0[Assignment["Frequency"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Activity_start"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Perception_active"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locative_relation"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Version_sequence"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Intentionally_act"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Emptying"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Frequency"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Activity_start"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Perception_active"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Version_sequence"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Emptying"] : probabilities6[r,s] * z6[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 34};
set G[I] := <0> {"0_0","0_23","0_3","0_34"}, <1> {"0_23","0_3","0_34","1_1"}, <2> {"0_23","0_3","0_34","2_2"}, <3> {"0_23","0_3","0_34","3_3"}, <4> {"0_23","0_34","4_23","4_4"}, <5> {"0_23","0_34","4_23","5_23","5_5"}, <6> {"0_23","0_34","4_23","5_23","6_6"}, <7> {"0_23","0_34","4_23","5_23","7_23","7_7","7_9"}, <8> {"0_23","0_34","4_23","5_23","7_23","7_9","8_8"}, <9> {"0_23","0_34","4_23","5_23","7_23","7_9","9_9"}, <10> {"0_23","0_34","10_10","10_23","4_23","5_23","7_23"}, <11> {"0_23","0_34","10_23","11_11","11_14","11_18","11_23","4_23","5_23","7_23"}, <12> {"0_23","0_34","10_23","11_14","11_18","11_23","12_12","12_13","12_14","4_23","5_23","7_23"}, <13> {"0_23","0_34","10_23","11_14","11_18","11_23","12_13","12_14","13_13","13_14","4_23","5_23","7_23"}, <14> {"0_23","0_34","10_23","11_14","11_18","11_23","12_14","13_14","14_14","4_23","5_23","7_23"}, <15> {"0_23","0_34","10_23","11_18","11_23","15_15","15_18","4_23","5_23","7_23"}, <16> {"0_23","0_34","10_23","11_18","11_23","15_18","16_16","4_23","5_23","7_23"}, <17> {"0_23","0_34","10_23","11_18","11_23","15_18","17_17","17_18","4_23","5_23","7_23"}, <18> {"0_23","0_34","10_23","11_18","11_23","15_18","17_18","18_18","4_23","5_23","7_23"}, <19> {"0_23","0_34","10_23","11_23","19_19","19_21","4_23","5_23","7_23"}, <20> {"0_23","0_34","10_23","11_23","19_21","20_20","4_23","5_23","7_23"}, <21> {"0_23","0_34","10_23","11_23","19_21","21_21","4_23","5_23","7_23"}, <22> {"0_23","0_34","10_23","11_23","22_22","4_23","5_23","7_23"}, <23> {"0_23","0_34","10_23","11_23","23_23","4_23","5_23","7_23"}, <24> {"0_34","24_24"}, <25> {"0_34","25_25"}, <26> {"0_34","26_26"}, <27> {"0_34","27_27","27_33"}, <28> {"0_34","27_33","28_28","28_33"}, <29> {"0_34","27_33","28_33","29_29","29_30","29_33"}, <30> {"0_34","27_33","28_33","29_30","29_33","30_30"}, <31> {"0_34","27_33","28_33","29_33","31_31","31_33"}, <32> {"0_34","27_33","28_33","29_33","31_33","32_32","32_33"}, <33> {"0_34","27_33","28_33","29_33","31_33","32_33","33_33"}, <34> {"0_34","34_34"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Activity_start"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Perception_active"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Version_sequence"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Emptying"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Frequency"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Activity_start"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Perception_active"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Version_sequence"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Emptying"] do sum <s> in Spans : z6[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc3 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc6 := {<"Agent","Cause">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

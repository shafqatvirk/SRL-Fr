# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Existence","Weapon","Statement","Unattributed_information","Hostile_encounter","Locale_by_use","Capability","Containing","Weapon","Research","Locale_by_use"};
set Roles[Frames] :=  <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Unattributed_information"> {"Reported_fact","Time","Explanation","Duration"}, <"Hostile_encounter"> {"Purpose","Result","Depictive","Instrument","Place","Degree","Means","Internal_cause","Reason","Particular_iteration","Duration","Sides","Issue","Side_2","Side_1","Manner","Time"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Containing"> {"Container","Time","Contents"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_23","10_10","11_11","12_12","12_15","13_13","13_15","14_14","15_15","16_16","16_22","17_17","17_22","18_18","18_20","19_19","1_1","1_23","20_20","21_21","21_22","22_22","23_23","2_2","2_22","3_22","3_3","4_11","4_15","4_16","4_22","4_4","4_7","5_5","6_6","7_7","8_10","8_8","8_9","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Existence"]] binary;
var z1[Assignment["Weapon"]] binary;
var z2[Assignment["Statement"]] binary;
var z3[Assignment["Unattributed_information"]] binary;
var z4[Assignment["Hostile_encounter"]] binary;
var z5[Assignment["Locale_by_use"]] binary;
var z6[Assignment["Capability"]] binary;
var z7[Assignment["Containing"]] binary;
var z8[Assignment["Weapon"]] binary;
var z9[Assignment["Research"]] binary;
var z10[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Existence"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Weapon"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Statement"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Unattributed_information"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Hostile_encounter"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locale_by_use"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Capability"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Containing"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Weapon"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Research"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Locale_by_use"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Existence"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Unattributed_information"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Hostile_encounter"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Containing"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Research"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities10[r,s] * z10[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 23};
set G[I] := <0> {"0_0","0_23"}, <1> {"0_23","1_1","1_23"}, <2> {"0_23","1_23","2_2","2_22"}, <3> {"0_23","1_23","2_22","3_22","3_3"}, <4> {"0_23","1_23","2_22","3_22","4_11","4_15","4_16","4_22","4_4","4_7"}, <5> {"0_23","1_23","2_22","3_22","4_11","4_15","4_16","4_22","4_7","5_5"}, <6> {"0_23","1_23","2_22","3_22","4_11","4_15","4_16","4_22","4_7","6_6"}, <7> {"0_23","1_23","2_22","3_22","4_11","4_15","4_16","4_22","4_7","7_7"}, <8> {"0_23","1_23","2_22","3_22","4_11","4_15","4_16","4_22","8_10","8_8","8_9"}, <9> {"0_23","1_23","2_22","3_22","4_11","4_15","4_16","4_22","8_10","8_9","9_10","9_9"}, <10> {"0_23","10_10","1_23","2_22","3_22","4_11","4_15","4_16","4_22","8_10","9_10"}, <11> {"0_23","11_11","1_23","2_22","3_22","4_11","4_15","4_16","4_22"}, <12> {"0_23","12_12","12_15","1_23","2_22","3_22","4_15","4_16","4_22"}, <13> {"0_23","12_15","13_13","13_15","1_23","2_22","3_22","4_15","4_16","4_22"}, <14> {"0_23","12_15","13_15","14_14","1_23","2_22","3_22","4_15","4_16","4_22"}, <15> {"0_23","12_15","13_15","15_15","1_23","2_22","3_22","4_15","4_16","4_22"}, <16> {"0_23","16_16","16_22","1_23","2_22","3_22","4_16","4_22"}, <17> {"0_23","16_22","17_17","17_22","1_23","2_22","3_22","4_22"}, <18> {"0_23","16_22","17_22","18_18","18_20","1_23","2_22","3_22","4_22"}, <19> {"0_23","16_22","17_22","18_20","19_19","1_23","2_22","3_22","4_22"}, <20> {"0_23","16_22","17_22","18_20","1_23","20_20","2_22","3_22","4_22"}, <21> {"0_23","16_22","17_22","1_23","21_21","21_22","2_22","3_22","4_22"}, <22> {"0_23","16_22","17_22","1_23","21_22","22_22","2_22","3_22","4_22"}, <23> {"0_23","1_23","23_23"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Unattributed_information"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Hostile_encounter"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Containing"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Existence"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Weapon"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Statement"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Unattributed_information"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Hostile_encounter"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Capability"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Containing"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Weapon"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Research"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z10[r,s] == 1;
#pairwise exclusion constraint
set Exc4 := {<"Side_1","Sides">,<"Side_2","Sides">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr4 := {<"Side_1","Side_2">};
subto require4: forall <ri,rj> in Reqr4 do z4[ri,"-1_-1"] - z4[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Being_employed","Weapon","Prohibiting","Point_of_dispute","Cardinal_numbers","Measure_duration","Telling","Desirability","Instance","Likelihood","Killing","Relational_quantity","Residence","Vehicle","Statement","Frequency","Capability","Intentionally_create","Undergoing","Reliance","Ranked_expectation","Sequence"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Being_employed"> {"Type","Rank","Time","Place","Field","Employer","Place_of_employment","Amount_of_work","Compensation","Event_description","Duration","Frequency","Task","Employee","Contract_basis","Manner","Position"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Prohibiting"> {"Explanation","Time","Place","Circumstances","Principle","State_of_affairs"}, <"Point_of_dispute"> {"Status","Descriptor","Group","Domain","Question"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Measure_duration"> {"Agent","Count","Unit","Process"}, <"Telling"> {"Iteration","Topic","Time","Descriptor","Place","Addressee","Epistemic_stance","Manner","Means","Message","Speaker","Medium"}, <"Desirability"> {"Parameter","Affected_party","Circumstances","Depictive","Comparison_set","Degree","Evaluee"}, <"Instance"> {"Type","Instance","Instance_Prop"}, <"Likelihood"> {"Time","Place","Circumstances","Reason","Hypothetical_event","Degree"}, <"Killing"> {"Purpose","Means","Depictive","Circumstances","Manner","Result","Explanation","Instrument","Cause","Time","Killer","Beneficiary","Degree","Place","Frequency","Reason","Period_of_iterations","Victim"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Residence"> {"Co_resident","Manner","Location","Time","Circumstances","Resident","Depictive","Frequency"}, <"Vehicle"> {"Itinerary","Possessor","Descriptor","Vehicle","Use"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Undergoing"> {"Place","Manner","Explanation","Time","Circumstances","Reason","Entity","Purpose","Event"}, <"Reliance"> {"Instrument","Degree","Benefit","Intermediary","Circumstances","Means","Purpose","Protagonist"}, <"Ranked_expectation"> {"Entity"}, <"Sequence"> {"Relation_type","Entity1","Entity2","Entities"};
set Spans := {"-1_-1","0_0","0_17","0_58","10_10","11_11","12_12","13_13","14_14","14_16","15_15","15_16","16_16","17_17","18_18","18_58","19_19","1_1","20_20","20_36","21_21","21_25","21_26","21_27","21_36","22_22","23_23","24_24","25_25","26_26","27_27","27_36","28_28","28_36","29_29","29_36","2_16","2_2","30_30","30_36","31_31","31_32","31_36","32_32","33_33","33_36","34_34","34_36","35_35","36_36","37_37","38_38","39_39","39_56","3_16","3_3","40_40","41_41","41_42","41_49","41_50","41_56","42_42","43_43","43_49","44_44","45_45","46_46","46_48","47_47","47_48","48_48","49_49","4_16","4_4","50_50","50_56","51_51","51_56","52_52","52_54","52_56","53_53","54_54","55_55","55_56","56_56","57_57","58_58","5_13","5_5","6_13","6_6","6_7","6_9","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Being_employed"]] binary;
var z2[Assignment["Weapon"]] binary;
var z3[Assignment["Prohibiting"]] binary;
var z4[Assignment["Point_of_dispute"]] binary;
var z5[Assignment["Cardinal_numbers"]] binary;
var z6[Assignment["Measure_duration"]] binary;
var z7[Assignment["Telling"]] binary;
var z8[Assignment["Desirability"]] binary;
var z9[Assignment["Instance"]] binary;
var z10[Assignment["Likelihood"]] binary;
var z11[Assignment["Killing"]] binary;
var z12[Assignment["Relational_quantity"]] binary;
var z13[Assignment["Residence"]] binary;
var z14[Assignment["Vehicle"]] binary;
var z15[Assignment["Statement"]] binary;
var z16[Assignment["Frequency"]] binary;
var z17[Assignment["Capability"]] binary;
var z18[Assignment["Intentionally_create"]] binary;
var z19[Assignment["Undergoing"]] binary;
var z20[Assignment["Reliance"]] binary;
var z21[Assignment["Ranked_expectation"]] binary;
var z22[Assignment["Sequence"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Being_employed"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Weapon"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Prohibiting"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Point_of_dispute"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Cardinal_numbers"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Measure_duration"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Telling"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Desirability"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Instance"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Likelihood"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Killing"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Relational_quantity"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Residence"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Vehicle"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Statement"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Frequency"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Capability"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Intentionally_create"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Undergoing"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Reliance"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Ranked_expectation"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Sequence"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Being_employed"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Prohibiting"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Point_of_dispute"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Measure_duration"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Telling"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Desirability"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Instance"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Likelihood"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Killing"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Residence"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Vehicle"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Frequency"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Undergoing"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Reliance"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Ranked_expectation"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Sequence"] : probabilities22[r,s] * z22[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 58};
set G[I] := <0> {"0_0","0_17","0_58"}, <1> {"0_17","0_58","1_1"}, <2> {"0_17","0_58","2_16","2_2"}, <3> {"0_17","0_58","2_16","3_16","3_3"}, <4> {"0_17","0_58","2_16","3_16","4_16","4_4"}, <5> {"0_17","0_58","2_16","3_16","4_16","5_13","5_5"}, <6> {"0_17","0_58","2_16","3_16","4_16","5_13","6_13","6_6","6_7","6_9"}, <7> {"0_17","0_58","2_16","3_16","4_16","5_13","6_13","6_7","6_9","7_7"}, <8> {"0_17","0_58","2_16","3_16","4_16","5_13","6_13","6_9","8_8"}, <9> {"0_17","0_58","2_16","3_16","4_16","5_13","6_13","6_9","9_9"}, <10> {"0_17","0_58","10_10","2_16","3_16","4_16","5_13","6_13"}, <11> {"0_17","0_58","11_11","2_16","3_16","4_16","5_13","6_13"}, <12> {"0_17","0_58","12_12","2_16","3_16","4_16","5_13","6_13"}, <13> {"0_17","0_58","13_13","2_16","3_16","4_16","5_13","6_13"}, <14> {"0_17","0_58","14_14","14_16","2_16","3_16","4_16"}, <15> {"0_17","0_58","14_16","15_15","15_16","2_16","3_16","4_16"}, <16> {"0_17","0_58","14_16","15_16","16_16","2_16","3_16","4_16"}, <17> {"0_17","0_58","17_17"}, <18> {"0_58","18_18","18_58"}, <19> {"0_58","18_58","19_19"}, <20> {"0_58","18_58","20_20","20_36"}, <21> {"0_58","18_58","20_36","21_21","21_25","21_26","21_27","21_36"}, <22> {"0_58","18_58","20_36","21_25","21_26","21_27","21_36","22_22"}, <23> {"0_58","18_58","20_36","21_25","21_26","21_27","21_36","23_23"}, <24> {"0_58","18_58","20_36","21_25","21_26","21_27","21_36","24_24"}, <25> {"0_58","18_58","20_36","21_25","21_26","21_27","21_36","25_25"}, <26> {"0_58","18_58","20_36","21_26","21_27","21_36","26_26"}, <27> {"0_58","18_58","20_36","21_27","21_36","27_27","27_36"}, <28> {"0_58","18_58","20_36","21_36","27_36","28_28","28_36"}, <29> {"0_58","18_58","20_36","21_36","27_36","28_36","29_29","29_36"}, <30> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_30","30_36"}, <31> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_36","31_31","31_32","31_36"}, <32> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_36","31_32","31_36","32_32"}, <33> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_36","31_36","33_33","33_36"}, <34> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_36","31_36","33_36","34_34","34_36"}, <35> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_36","31_36","33_36","34_36","35_35"}, <36> {"0_58","18_58","20_36","21_36","27_36","28_36","29_36","30_36","31_36","33_36","34_36","36_36"}, <37> {"0_58","18_58","37_37"}, <38> {"0_58","18_58","38_38"}, <39> {"0_58","18_58","39_39","39_56"}, <40> {"0_58","18_58","39_56","40_40"}, <41> {"0_58","18_58","39_56","41_41","41_42","41_49","41_50","41_56"}, <42> {"0_58","18_58","39_56","41_42","41_49","41_50","41_56","42_42"}, <43> {"0_58","18_58","39_56","41_49","41_50","41_56","43_43","43_49"}, <44> {"0_58","18_58","39_56","41_49","41_50","41_56","43_49","44_44"}, <45> {"0_58","18_58","39_56","41_49","41_50","41_56","43_49","45_45"}, <46> {"0_58","18_58","39_56","41_49","41_50","41_56","43_49","46_46","46_48"}, <47> {"0_58","18_58","39_56","41_49","41_50","41_56","43_49","46_48","47_47","47_48"}, <48> {"0_58","18_58","39_56","41_49","41_50","41_56","43_49","46_48","47_48","48_48"}, <49> {"0_58","18_58","39_56","41_49","41_50","41_56","43_49","49_49"}, <50> {"0_58","18_58","39_56","41_50","41_56","50_50","50_56"}, <51> {"0_58","18_58","39_56","41_56","50_56","51_51","51_56"}, <52> {"0_58","18_58","39_56","41_56","50_56","51_56","52_52","52_54","52_56"}, <53> {"0_58","18_58","39_56","41_56","50_56","51_56","52_54","52_56","53_53"}, <54> {"0_58","18_58","39_56","41_56","50_56","51_56","52_54","52_56","54_54"}, <55> {"0_58","18_58","39_56","41_56","50_56","51_56","52_56","55_55","55_56"}, <56> {"0_58","18_58","39_56","41_56","50_56","51_56","52_56","55_56","56_56"}, <57> {"0_58","18_58","57_57"}, <58> {"0_58","18_58","58_58"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Being_employed"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Prohibiting"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Point_of_dispute"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Measure_duration"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Telling"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Desirability"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Instance"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Likelihood"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Killing"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Residence"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Vehicle"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Undergoing"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Reliance"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Ranked_expectation"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Sequence"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Being_employed"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Weapon"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Prohibiting"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Point_of_dispute"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Measure_duration"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Telling"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Desirability"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Instance"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Likelihood"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Killing"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Residence"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Vehicle"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Statement"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Frequency"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Capability"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Undergoing"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Reliance"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Ranked_expectation"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Sequence"] do sum <s> in Spans : z22[r,s] == 1;
#pairwise exclusion constraint
set Exc11 := {<"Cause","Killer">,<"Cause","Means">,<"Cause","Instrument">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
set Exc16 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
set Exc20 := {<"Instrument","Means">,<"Benefit","Purpose">,<"Intermediary","Means">,<"Instrument","Intermediary">};
subto exclusion20: forall <ri,rj> in Exc20 do z20[ri,"-1_-1"] + z20[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"History","Natural_features","Expansion","Temporal_collocation","Relational_quantity","Locale","Adorning","Temporal_collocation","Natural_features"};
set Roles[Frames] :=  <"History"> {"Duration","Topic"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Expansion"> {"Size_change","Item","Manner","Dimension","Time","Result_size","Degree","Rate","Initial_size"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Adorning"> {"Location","Theme","Subregion"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_2","0_26","0_7","10_10","11_11","12_12","12_25","13_13","13_25","14_14","15_15","15_25","16_16","16_19","16_20","16_25","17_17","17_19","18_18","18_19","19_19","1_1","20_20","20_25","21_21","21_25","22_22","22_25","23_23","23_25","24_24","25_25","26_26","2_2","3_3","3_7","4_4","4_7","5_5","6_6","7_7","8_26","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["History"]] binary;
var z1[Assignment["Natural_features"]] binary;
var z2[Assignment["Expansion"]] binary;
var z3[Assignment["Temporal_collocation"]] binary;
var z4[Assignment["Relational_quantity"]] binary;
var z5[Assignment["Locale"]] binary;
var z6[Assignment["Adorning"]] binary;
var z7[Assignment["Temporal_collocation"]] binary;
var z8[Assignment["Natural_features"]] binary;
param probabilities0[Assignment["History"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Natural_features"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Expansion"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Temporal_collocation"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Relational_quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locale"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Adorning"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Temporal_collocation"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Natural_features"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["History"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Expansion"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Adorning"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities8[r,s] * z8[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 26};
set G[I] := <0> {"0_0","0_2","0_26","0_7"}, <1> {"0_2","0_26","0_7","1_1"}, <2> {"0_2","0_26","0_7","2_2"}, <3> {"0_26","0_7","3_3","3_7"}, <4> {"0_26","0_7","3_7","4_4","4_7"}, <5> {"0_26","0_7","3_7","4_7","5_5"}, <6> {"0_26","0_7","3_7","4_7","6_6"}, <7> {"0_26","0_7","3_7","4_7","7_7"}, <8> {"0_26","8_26","8_8"}, <9> {"0_26","8_26","9_10","9_9"}, <10> {"0_26","10_10","8_26","9_10"}, <11> {"0_26","11_11","8_26"}, <12> {"0_26","12_12","12_25","8_26"}, <13> {"0_26","12_25","13_13","13_25","8_26"}, <14> {"0_26","12_25","13_25","14_14","8_26"}, <15> {"0_26","12_25","13_25","15_15","15_25","8_26"}, <16> {"0_26","12_25","13_25","15_25","16_16","16_19","16_20","16_25","8_26"}, <17> {"0_26","12_25","13_25","15_25","16_19","16_20","16_25","17_17","17_19","8_26"}, <18> {"0_26","12_25","13_25","15_25","16_19","16_20","16_25","17_19","18_18","18_19","8_26"}, <19> {"0_26","12_25","13_25","15_25","16_19","16_20","16_25","17_19","18_19","19_19","8_26"}, <20> {"0_26","12_25","13_25","15_25","16_20","16_25","20_20","20_25","8_26"}, <21> {"0_26","12_25","13_25","15_25","16_25","20_25","21_21","21_25","8_26"}, <22> {"0_26","12_25","13_25","15_25","16_25","20_25","21_25","22_22","22_25","8_26"}, <23> {"0_26","12_25","13_25","15_25","16_25","20_25","21_25","22_25","23_23","23_25","8_26"}, <24> {"0_26","12_25","13_25","15_25","16_25","20_25","21_25","22_25","23_25","24_24","8_26"}, <25> {"0_26","12_25","13_25","15_25","16_25","20_25","21_25","22_25","23_25","25_25","8_26"}, <26> {"0_26","26_26","8_26"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["History"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Expansion"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Adorning"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["History"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Expansion"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locale"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Adorning"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z8[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc7 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

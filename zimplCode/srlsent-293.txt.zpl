# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Board_vehicle","Leadership","Calendric_unit","Resolve_problem","Quantity","Usefulness","Point_of_dispute","Supply","Completeness","Process_completed_state","Statement","Weapon","Substance","Weapon","Intentionally_act","Processing_materials","Project","Relative_time","Cause_change"};
set Roles[Frames] :=  <"Board_vehicle"> {"Place","Traveller","Vehicle","Path","Time","Circumstances","Duration_of_final_state","Depictive","Cotheme"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Resolve_problem"> {"Duration","Medium","Role","Means","Problem","Circumstances","Agent","Manner","Resultant_Situation","Outcome","Instrument","Cause","Time","Beneficiary","Degree","Place","Frequency","Containing_Event","Co_participant"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Usefulness"> {"Purpose","Domain","Time","Degree","Entity"}, <"Point_of_dispute"> {"Status","Descriptor","Group","Domain","Question"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Completeness"> {"Degree","Whole","Time"}, <"Process_completed_state"> {"Process"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Processing_materials"> {"Place","Duration","Agent","Result","Material","Dimension","Time","Alterant","Reason","Purpose","Subregion"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"}, <"Relative_time"> {"Focal_participant","Interval","Degree","Focal_occasion","Landmark_occasion"}, <"Cause_change"> {"Duration","Purpose","Attribute","Initial_value","Role","Circumstances","Agent","Manner","Means","Event_description","Final_category","Cause","Time","Period_of_iterations","Containing_event","Degree","Place","Re_encoding","Reason","Initial_category","Final_value","Entity"};
set Spans := {"-1_-1","0_0","0_2","0_4","0_43","10_10","11_11","12_12","13_13","14_14","14_42","15_15","15_42","16_16","16_18","17_17","18_18","19_19","1_1","20_20","20_21","20_42","21_21","21_42","22_22","22_24","22_25","22_32","22_42","23_23","24_24","25_25","25_32","26_26","26_32","27_27","27_32","28_28","29_29","2_2","30_30","31_31","32_32","33_33","34_34","35_35","35_36","35_38","36_36","37_37","38_38","39_39","3_3","3_4","40_40","41_41","42_42","43_43","4_4","5_43","5_5","6_42","6_6","7_7","7_8","8_8","9_13","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Board_vehicle"]] binary;
var z1[Assignment["Leadership"]] binary;
var z2[Assignment["Calendric_unit"]] binary;
var z3[Assignment["Resolve_problem"]] binary;
var z4[Assignment["Quantity"]] binary;
var z5[Assignment["Usefulness"]] binary;
var z6[Assignment["Point_of_dispute"]] binary;
var z7[Assignment["Supply"]] binary;
var z8[Assignment["Completeness"]] binary;
var z9[Assignment["Process_completed_state"]] binary;
var z10[Assignment["Statement"]] binary;
var z11[Assignment["Weapon"]] binary;
var z12[Assignment["Substance"]] binary;
var z13[Assignment["Weapon"]] binary;
var z14[Assignment["Intentionally_act"]] binary;
var z15[Assignment["Processing_materials"]] binary;
var z16[Assignment["Project"]] binary;
var z17[Assignment["Relative_time"]] binary;
var z18[Assignment["Cause_change"]] binary;
param probabilities0[Assignment["Board_vehicle"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Leadership"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Calendric_unit"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Resolve_problem"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Usefulness"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Point_of_dispute"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Supply"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Completeness"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Process_completed_state"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Statement"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Weapon"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Substance"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Weapon"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Intentionally_act"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Processing_materials"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Project"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Relative_time"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Cause_change"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Board_vehicle"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Resolve_problem"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Usefulness"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Point_of_dispute"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Completeness"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Process_completed_state"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Processing_materials"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Project"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Relative_time"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Cause_change"] : probabilities18[r,s] * z18[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 43};
set G[I] := <0> {"0_0","0_2","0_4","0_43"}, <1> {"0_2","0_4","0_43","1_1"}, <2> {"0_2","0_4","0_43","2_2"}, <3> {"0_4","0_43","3_3","3_4"}, <4> {"0_4","0_43","3_4","4_4"}, <5> {"0_43","5_43","5_5"}, <6> {"0_43","5_43","6_42","6_6"}, <7> {"0_43","5_43","6_42","7_7","7_8"}, <8> {"0_43","5_43","6_42","7_8","8_8"}, <9> {"0_43","5_43","6_42","9_13","9_9"}, <10> {"0_43","10_10","5_43","6_42","9_13"}, <11> {"0_43","11_11","5_43","6_42","9_13"}, <12> {"0_43","12_12","5_43","6_42","9_13"}, <13> {"0_43","13_13","5_43","6_42","9_13"}, <14> {"0_43","14_14","14_42","5_43","6_42"}, <15> {"0_43","14_42","15_15","15_42","5_43","6_42"}, <16> {"0_43","14_42","15_42","16_16","16_18","5_43","6_42"}, <17> {"0_43","14_42","15_42","16_18","17_17","5_43","6_42"}, <18> {"0_43","14_42","15_42","16_18","18_18","5_43","6_42"}, <19> {"0_43","14_42","15_42","19_19","5_43","6_42"}, <20> {"0_43","14_42","15_42","20_20","20_21","20_42","5_43","6_42"}, <21> {"0_43","14_42","15_42","20_21","20_42","21_21","21_42","5_43","6_42"}, <22> {"0_43","14_42","15_42","20_42","21_42","22_22","22_24","22_25","22_32","22_42","5_43","6_42"}, <23> {"0_43","14_42","15_42","20_42","21_42","22_24","22_25","22_32","22_42","23_23","5_43","6_42"}, <24> {"0_43","14_42","15_42","20_42","21_42","22_24","22_25","22_32","22_42","24_24","5_43","6_42"}, <25> {"0_43","14_42","15_42","20_42","21_42","22_25","22_32","22_42","25_25","25_32","5_43","6_42"}, <26> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_26","26_32","5_43","6_42"}, <27> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_32","27_27","27_32","5_43","6_42"}, <28> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_32","27_32","28_28","5_43","6_42"}, <29> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_32","27_32","29_29","5_43","6_42"}, <30> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_32","27_32","30_30","5_43","6_42"}, <31> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_32","27_32","31_31","5_43","6_42"}, <32> {"0_43","14_42","15_42","20_42","21_42","22_32","22_42","25_32","26_32","27_32","32_32","5_43","6_42"}, <33> {"0_43","14_42","15_42","20_42","21_42","22_42","33_33","5_43","6_42"}, <34> {"0_43","14_42","15_42","20_42","21_42","22_42","34_34","5_43","6_42"}, <35> {"0_43","14_42","15_42","20_42","21_42","22_42","35_35","35_36","35_38","5_43","6_42"}, <36> {"0_43","14_42","15_42","20_42","21_42","22_42","35_36","35_38","36_36","5_43","6_42"}, <37> {"0_43","14_42","15_42","20_42","21_42","22_42","35_38","37_37","5_43","6_42"}, <38> {"0_43","14_42","15_42","20_42","21_42","22_42","35_38","38_38","5_43","6_42"}, <39> {"0_43","14_42","15_42","20_42","21_42","22_42","39_39","5_43","6_42"}, <40> {"0_43","14_42","15_42","20_42","21_42","22_42","40_40","5_43","6_42"}, <41> {"0_43","14_42","15_42","20_42","21_42","22_42","41_41","5_43","6_42"}, <42> {"0_43","14_42","15_42","20_42","21_42","22_42","42_42","5_43","6_42"}, <43> {"0_43","43_43","5_43"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Board_vehicle"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Resolve_problem"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Usefulness"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Point_of_dispute"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Completeness"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Process_completed_state"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Processing_materials"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Relative_time"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Cause_change"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Board_vehicle"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Leadership"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Resolve_problem"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Usefulness"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Point_of_dispute"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Supply"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Completeness"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Process_completed_state"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Statement"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Weapon"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Substance"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Weapon"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Processing_materials"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Project"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Relative_time"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Cause_change"] do sum <s> in Spans : z18[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Agent","Cause">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc4 := {<"Individuals","Mass">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc16 := {<"Activity","Salient_entity">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
set Exc18 := {<"Final_category","Initial_value">,<"Attribute","Final_category">,<"Agent","Cause">,<"Final_category","Final_value">,<"Initial_category","Initial_value">};
subto exclusion18: forall <ri,rj> in Exc18 do z18[ri,"-1_-1"] + z18[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr18 := {<"Attribute","Final_value">,<"Attribute","Initial_value">};
subto require18: forall <ri,rj> in Reqr18 do z18[ri,"-1_-1"] - z18[rj,"-1_-1"] == 0;

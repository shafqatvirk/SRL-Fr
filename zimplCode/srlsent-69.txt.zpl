# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Age","Sufficiency","Political_locales","Mental_property","Stimulus_focus","Idiosyncrasy","Ineffability","Possession","People_by_origin"};
set Roles[Frames] :=  <"Age"> {"Attribute","Degree","Entity","Time","Expressor","Duration","Age","Descriptor"}, <"Sufficiency"> {"Item","Scale","Degree","Enabled_situation"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Mental_property"> {"Manner","Protagonist","Degree","Behavior","Practice"}, <"Stimulus_focus"> {"Stimulus","Parameter","Circumstances","Property","Experiencer","Comparison_set","Degree"}, <"Idiosyncrasy"> {"Degree","Entity","Idiosyncrasy"}, <"Ineffability"> {"Circumstances","Attribute","Degree","Stimulus","Property"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"People_by_origin"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"};
set Spans := {"-1_-1","0_0","0_27","10_10","10_12","10_16","11_11","12_12","13_13","13_16","14_14","14_16","15_15","16_16","17_17","18_18","19_19","1_1","1_3","20_20","21_21","21_26","22_22","22_26","23_23","23_26","24_24","25_25","26_26","27_27","2_2","3_3","4_4","5_5","5_6","6_6","7_7","8_8","9_20","9_26","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Age"]] binary;
var z1[Assignment["Sufficiency"]] binary;
var z2[Assignment["Political_locales"]] binary;
var z3[Assignment["Mental_property"]] binary;
var z4[Assignment["Stimulus_focus"]] binary;
var z5[Assignment["Idiosyncrasy"]] binary;
var z6[Assignment["Ineffability"]] binary;
var z7[Assignment["Possession"]] binary;
var z8[Assignment["People_by_origin"]] binary;
param probabilities0[Assignment["Age"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Sufficiency"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Political_locales"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Mental_property"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Stimulus_focus"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Idiosyncrasy"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Ineffability"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Possession"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["People_by_origin"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Age"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Sufficiency"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Mental_property"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Stimulus_focus"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Idiosyncrasy"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Ineffability"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["People_by_origin"] : probabilities8[r,s] * z8[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 27};
set G[I] := <0> {"0_0","0_27"}, <1> {"0_27","1_1","1_3"}, <2> {"0_27","1_3","2_2"}, <3> {"0_27","1_3","3_3"}, <4> {"0_27","4_4"}, <5> {"0_27","5_5","5_6"}, <6> {"0_27","5_6","6_6"}, <7> {"0_27","7_7"}, <8> {"0_27","8_8"}, <9> {"0_27","9_20","9_26","9_9"}, <10> {"0_27","10_10","10_12","10_16","9_20","9_26"}, <11> {"0_27","10_12","10_16","11_11","9_20","9_26"}, <12> {"0_27","10_12","10_16","12_12","9_20","9_26"}, <13> {"0_27","10_16","13_13","13_16","9_20","9_26"}, <14> {"0_27","10_16","13_16","14_14","14_16","9_20","9_26"}, <15> {"0_27","10_16","13_16","14_16","15_15","9_20","9_26"}, <16> {"0_27","10_16","13_16","14_16","16_16","9_20","9_26"}, <17> {"0_27","17_17","9_20","9_26"}, <18> {"0_27","18_18","9_20","9_26"}, <19> {"0_27","19_19","9_20","9_26"}, <20> {"0_27","20_20","9_20","9_26"}, <21> {"0_27","21_21","21_26","9_26"}, <22> {"0_27","21_26","22_22","22_26","9_26"}, <23> {"0_27","21_26","22_26","23_23","23_26","9_26"}, <24> {"0_27","21_26","22_26","23_26","24_24","9_26"}, <25> {"0_27","21_26","22_26","23_26","25_25","9_26"}, <26> {"0_27","21_26","22_26","23_26","26_26","9_26"}, <27> {"0_27","27_27"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Age"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Sufficiency"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Mental_property"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Stimulus_focus"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Idiosyncrasy"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Ineffability"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["People_by_origin"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Age"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Sufficiency"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Mental_property"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Stimulus_focus"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Idiosyncrasy"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Ineffability"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Possession"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["People_by_origin"] do sum <s> in Spans : z8[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Entity","Expressor">,<"Age","Degree">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc3 := {<"Behavior","Practice">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr3 := {<"Practice","Protagonist">};
subto require3: forall <ri,rj> in Reqr3 do z3[ri,"-1_-1"] - z3[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Stage_of_progress","Research","Locale_by_use","Capability","Assistance","Front_for","Legality","Weapon","Cognitive_connection","Intentionally_act","Offering","Legality","Importing","Cardinal_numbers","Purpose","Ingredients"};
set Roles[Frames] :=  <"Stage_of_progress"> {"Degree","Entity"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Assistance"> {"Purpose","Time","Goal","Place","Frequency","Degree","Helper","Means","Benefited_party","Domain","Duration","Focal_entity","Manner","Explanation"}, <"Front_for"> {"Illicit_organization","Illicit_activity","Front"}, <"Legality"> {"Object","Code","Action","Explanation"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Cognitive_connection"> {"Point_of_view","Circumstances","Specification","Concept_2","Concept_1","Degree","Concepts"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Offering"> {"Potential_recipient","Offerer","Theme"}, <"Legality"> {"Object","Code","Action","Explanation"}, <"Importing"> {"Importer","Particular_iteration","Goods","Exporting_area","Manner","Purpose","Frequency","Time","Means","Importing_area","Beneficiary"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Purpose"> {"Attribute","Agent","Goal","Time","Restrictor","Value","Domain","Means"}, <"Ingredients"> {"Source","Type","Use","Material","Product","Descriptor"};
set Spans := {"-1_-1","0_0","0_29","0_3","0_5","10_10","10_11","10_17","11_11","12_12","12_17","13_13","13_14","13_17","14_14","15_15","16_16","17_17","18_18","19_19","19_28","1_1","20_20","20_22","20_28","21_21","22_22","23_23","23_24","23_28","24_24","24_28","25_25","25_28","26_26","27_27","28_28","29_29","2_2","3_3","4_4","4_5","5_5","6_29","6_6","7_7","8_28","8_8","9_17","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Stage_of_progress"]] binary;
var z1[Assignment["Research"]] binary;
var z2[Assignment["Locale_by_use"]] binary;
var z3[Assignment["Capability"]] binary;
var z4[Assignment["Assistance"]] binary;
var z5[Assignment["Front_for"]] binary;
var z6[Assignment["Legality"]] binary;
var z7[Assignment["Weapon"]] binary;
var z8[Assignment["Cognitive_connection"]] binary;
var z9[Assignment["Intentionally_act"]] binary;
var z10[Assignment["Offering"]] binary;
var z11[Assignment["Legality"]] binary;
var z12[Assignment["Importing"]] binary;
var z13[Assignment["Cardinal_numbers"]] binary;
var z14[Assignment["Purpose"]] binary;
var z15[Assignment["Ingredients"]] binary;
param probabilities0[Assignment["Stage_of_progress"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Research"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Locale_by_use"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Capability"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Assistance"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Front_for"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Legality"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Weapon"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Cognitive_connection"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Intentionally_act"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Offering"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Legality"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Importing"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Cardinal_numbers"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Purpose"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Ingredients"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Stage_of_progress"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Research"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Assistance"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Front_for"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Legality"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Cognitive_connection"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Offering"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Legality"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Importing"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Purpose"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Ingredients"] : probabilities15[r,s] * z15[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 29};
set G[I] := <0> {"0_0","0_29","0_3","0_5"}, <1> {"0_29","0_3","0_5","1_1"}, <2> {"0_29","0_3","0_5","2_2"}, <3> {"0_29","0_3","0_5","3_3"}, <4> {"0_29","0_5","4_4","4_5"}, <5> {"0_29","0_5","4_5","5_5"}, <6> {"0_29","6_29","6_6"}, <7> {"0_29","6_29","7_7"}, <8> {"0_29","6_29","8_28","8_8"}, <9> {"0_29","6_29","8_28","9_17","9_9"}, <10> {"0_29","10_10","10_11","10_17","6_29","8_28","9_17"}, <11> {"0_29","10_11","10_17","11_11","6_29","8_28","9_17"}, <12> {"0_29","10_17","12_12","12_17","6_29","8_28","9_17"}, <13> {"0_29","10_17","12_17","13_13","13_14","13_17","6_29","8_28","9_17"}, <14> {"0_29","10_17","12_17","13_14","13_17","14_14","6_29","8_28","9_17"}, <15> {"0_29","10_17","12_17","13_17","15_15","6_29","8_28","9_17"}, <16> {"0_29","10_17","12_17","13_17","16_16","6_29","8_28","9_17"}, <17> {"0_29","10_17","12_17","13_17","17_17","6_29","8_28","9_17"}, <18> {"0_29","18_18","6_29","8_28"}, <19> {"0_29","19_19","19_28","6_29","8_28"}, <20> {"0_29","19_28","20_20","20_22","20_28","6_29","8_28"}, <21> {"0_29","19_28","20_22","20_28","21_21","6_29","8_28"}, <22> {"0_29","19_28","20_22","20_28","22_22","6_29","8_28"}, <23> {"0_29","19_28","20_28","23_23","23_24","23_28","6_29","8_28"}, <24> {"0_29","19_28","20_28","23_24","23_28","24_24","24_28","6_29","8_28"}, <25> {"0_29","19_28","20_28","23_28","24_28","25_25","25_28","6_29","8_28"}, <26> {"0_29","19_28","20_28","23_28","24_28","25_28","26_26","6_29","8_28"}, <27> {"0_29","19_28","20_28","23_28","24_28","25_28","27_27","6_29","8_28"}, <28> {"0_29","19_28","20_28","23_28","24_28","25_28","28_28","6_29","8_28"}, <29> {"0_29","29_29","6_29"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Stage_of_progress"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Assistance"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Front_for"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Legality"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Cognitive_connection"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Offering"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Legality"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Importing"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Purpose"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Ingredients"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Stage_of_progress"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Research"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Capability"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Assistance"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Front_for"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Legality"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Weapon"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Cognitive_connection"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Offering"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Legality"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Importing"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Purpose"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Ingredients"] do sum <s> in Spans : z15[r,s] == 1;
#pairwise exclusion constraint
set Exc5 := {<"Illicit_activity","Illicit_organization">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc8 := {<"Concept_2","Concepts">,<"Concept_1","Concepts">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc14 := {<"Attribute","Goal">,<"Goal","Value">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr14 := {<"Attribute","Value">};
subto require14: forall <ri,rj> in Reqr14 do z14[ri,"-1_-1"] - z14[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Roadways","Political_locales","Dimension","Roadways","Causation","Direction","Locale_by_use"};
set Roles[Frames] :=  <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Dimension"> {"Object","Domain","Measurement","Dimension","Location"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Causation"> {"Circumstances","Time","Actor","Place","Frequency","Means","Effect","Cause","Reason","Affected","Manner","Concessive","Explanation"}, <"Direction"> {"Base_position","Independent_variable","Degree","Path"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_1","0_14","0_7","0_8","10_10","11_11","11_13","12_12","12_13","13_13","14_14","1_1","2_2","3_3","3_5","4_4","5_5","6_6","7_7","8_8","9_14","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Roadways"]] binary;
var z1[Assignment["Political_locales"]] binary;
var z2[Assignment["Dimension"]] binary;
var z3[Assignment["Roadways"]] binary;
var z4[Assignment["Causation"]] binary;
var z5[Assignment["Direction"]] binary;
var z6[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Roadways"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Political_locales"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Dimension"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Roadways"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Causation"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Direction"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locale_by_use"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Roadways"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Dimension"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Causation"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Direction"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities6[r,s] * z6[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 14};
set G[I] := <0> {"0_0","0_1","0_14","0_7","0_8"}, <1> {"0_1","0_14","0_7","0_8","1_1"}, <2> {"0_14","0_7","0_8","2_2"}, <3> {"0_14","0_7","0_8","3_3","3_5"}, <4> {"0_14","0_7","0_8","3_5","4_4"}, <5> {"0_14","0_7","0_8","3_5","5_5"}, <6> {"0_14","0_7","0_8","6_6"}, <7> {"0_14","0_7","0_8","7_7"}, <8> {"0_14","0_8","8_8"}, <9> {"0_14","9_14","9_9"}, <10> {"0_14","10_10","9_14"}, <11> {"0_14","11_11","11_13","9_14"}, <12> {"0_14","11_13","12_12","12_13","9_14"}, <13> {"0_14","11_13","12_13","13_13","9_14"}, <14> {"0_14","14_14","9_14"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Dimension"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Causation"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Direction"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Roadways"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Dimension"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Roadways"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Causation"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Direction"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z6[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

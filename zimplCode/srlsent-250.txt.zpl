# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Intentionally_act","Giving","Temporal_collocation","Political_locales","Artifact","Predicament","Cognitive_connection","Delivery","Stage_of_progress","Weapon","Active_substance","Likelihood","Temporal_collocation","Possession","Means","Importance","Weapon","Attack"};
set Roles[Frames] :=  <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Giving"> {"Recipient","Donor","Circumstances","Time","Place","Theme","Purpose","Means","Period_of_iterations","Reason","Depictive","Purpose_of_theme","Manner"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Predicament"> {"Time","Cause","Place","Experiencer","Domain","Situation"}, <"Cognitive_connection"> {"Point_of_view","Circumstances","Specification","Concept_2","Concept_1","Degree","Concepts"}, <"Delivery"> {"Speed","Place","Theme","Means","Depictive","Circumstances","Manner","Recipient","Vehicle","Time","Source","Period_of_iterations","Beneficiary","Event_description","Goal","Reason","Purpose","Path","Deliverer"}, <"Stage_of_progress"> {"Degree","Entity"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Active_substance"> {"Name","Type","Substance","Descriptor","Effect"}, <"Likelihood"> {"Time","Place","Circumstances","Reason","Hypothetical_event","Degree"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Means"> {"Agent","Purpose","Descriptor","Time","Means"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Attack"> {"Particular_iteration","Iteration","Event_description","Means","Depictive","Circumstances","Manner","Result","Explanation","Time","Source","Containing_event","Place","Re_encoding","Weapon","Purpose","Victim","Path","Assailant"};
set Spans := {"-1_-1","0_0","0_15","0_33","10_10","10_15","11_11","11_15","12_12","12_15","13_13","14_14","15_15","16_16","17_17","18_18","19_19","1_1","1_15","1_3","20_20","20_32","21_21","21_23","21_32","22_22","23_23","24_24","24_25","24_32","25_25","26_26","26_32","27_27","27_32","28_28","29_29","29_32","2_2","30_30","31_31","32_32","33_33","3_3","4_15","4_4","5_15","5_5","5_8","6_6","7_7","8_8","9_15","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Intentionally_act"]] binary;
var z1[Assignment["Giving"]] binary;
var z2[Assignment["Temporal_collocation"]] binary;
var z3[Assignment["Political_locales"]] binary;
var z4[Assignment["Artifact"]] binary;
var z5[Assignment["Predicament"]] binary;
var z6[Assignment["Cognitive_connection"]] binary;
var z7[Assignment["Delivery"]] binary;
var z8[Assignment["Stage_of_progress"]] binary;
var z9[Assignment["Weapon"]] binary;
var z10[Assignment["Active_substance"]] binary;
var z11[Assignment["Likelihood"]] binary;
var z12[Assignment["Temporal_collocation"]] binary;
var z13[Assignment["Possession"]] binary;
var z14[Assignment["Means"]] binary;
var z15[Assignment["Importance"]] binary;
var z16[Assignment["Weapon"]] binary;
var z17[Assignment["Attack"]] binary;
param probabilities0[Assignment["Intentionally_act"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Giving"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Temporal_collocation"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Political_locales"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Artifact"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Predicament"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Cognitive_connection"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Delivery"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Stage_of_progress"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Weapon"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Active_substance"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Likelihood"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Temporal_collocation"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Possession"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Means"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Importance"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Weapon"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Attack"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Intentionally_act"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Giving"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Predicament"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Cognitive_connection"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Delivery"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Stage_of_progress"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Active_substance"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Likelihood"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Means"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Attack"] : probabilities17[r,s] * z17[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 33};
set G[I] := <0> {"0_0","0_15","0_33"}, <1> {"0_15","0_33","1_1","1_15","1_3"}, <2> {"0_15","0_33","1_15","1_3","2_2"}, <3> {"0_15","0_33","1_15","1_3","3_3"}, <4> {"0_15","0_33","1_15","4_15","4_4"}, <5> {"0_15","0_33","1_15","4_15","5_15","5_5","5_8"}, <6> {"0_15","0_33","1_15","4_15","5_15","5_8","6_6"}, <7> {"0_15","0_33","1_15","4_15","5_15","5_8","7_7"}, <8> {"0_15","0_33","1_15","4_15","5_15","5_8","8_8"}, <9> {"0_15","0_33","1_15","4_15","5_15","9_15","9_9"}, <10> {"0_15","0_33","10_10","10_15","1_15","4_15","5_15","9_15"}, <11> {"0_15","0_33","10_15","11_11","11_15","1_15","4_15","5_15","9_15"}, <12> {"0_15","0_33","10_15","11_15","12_12","12_15","1_15","4_15","5_15","9_15"}, <13> {"0_15","0_33","10_15","11_15","12_15","13_13","1_15","4_15","5_15","9_15"}, <14> {"0_15","0_33","10_15","11_15","12_15","14_14","1_15","4_15","5_15","9_15"}, <15> {"0_15","0_33","10_15","11_15","12_15","15_15","1_15","4_15","5_15","9_15"}, <16> {"0_33","16_16"}, <17> {"0_33","17_17"}, <18> {"0_33","18_18"}, <19> {"0_33","19_19"}, <20> {"0_33","20_20","20_32"}, <21> {"0_33","20_32","21_21","21_23","21_32"}, <22> {"0_33","20_32","21_23","21_32","22_22"}, <23> {"0_33","20_32","21_23","21_32","23_23"}, <24> {"0_33","20_32","21_32","24_24","24_25","24_32"}, <25> {"0_33","20_32","21_32","24_25","24_32","25_25"}, <26> {"0_33","20_32","21_32","24_32","26_26","26_32"}, <27> {"0_33","20_32","21_32","24_32","26_32","27_27","27_32"}, <28> {"0_33","20_32","21_32","24_32","26_32","27_32","28_28"}, <29> {"0_33","20_32","21_32","24_32","26_32","27_32","29_29","29_32"}, <30> {"0_33","20_32","21_32","24_32","26_32","27_32","29_32","30_30"}, <31> {"0_33","20_32","21_32","24_32","26_32","27_32","29_32","31_31"}, <32> {"0_33","20_32","21_32","24_32","26_32","27_32","29_32","32_32"}, <33> {"0_33","33_33"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Giving"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Predicament"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Cognitive_connection"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Delivery"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Stage_of_progress"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Active_substance"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Likelihood"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Means"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Attack"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Giving"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Artifact"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Predicament"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Cognitive_connection"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Delivery"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Stage_of_progress"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Weapon"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Active_substance"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Likelihood"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Possession"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Means"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Importance"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Weapon"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Attack"] do sum <s> in Spans : z17[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc6 := {<"Concept_2","Concepts">,<"Concept_1","Concepts">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc7 := {<"Goal","Recipient">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc12 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
set Exc15 := {<"Field","Interested_party">};
subto exclusion15: forall <ri,rj> in Exc15 do z15[ri,"-1_-1"] + z15[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Existence","Locative_relation","Frequency","Abounding_with","Lively_place","Roadways","Obviousness","Locale_by_use","Shopping","Locale_by_use","Carry_goods","Political_locales","Diversity","Commerce_scenario","Origin","Craft","Expectation"};
set Roles[Frames] :=  <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"}, <"Abounding_with"> {"Time","Location","Theme","Degree","Depictive"}, <"Lively_place"> {"Duration","Place","Degree","Manner","Explanation","Individuals","Time","Circumstances","Location","Activity"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Obviousness"> {"Attribute","Perceiver","Phenomenon","Degree","Time","Evidence","Particular_iteration","Direction","Location_of_protagonist"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Shopping"> {"Place","Goods","Shopper","Manner","Co_participant","Ground","Time","Depictive"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Carry_goods"> {"Distributor","Time","Place","Goods"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Diversity"> {"Depictive","Group","Degree","Place","Dimension"}, <"Commerce_scenario"> {"Goods","Seller","Rate","Means","Money","Buyer"}, <"Origin"> {"Entity","Origin"}, <"Craft"> {"Culture","Descriptor","Activity"}, <"Expectation"> {"Evidence","Phenomenon","Topic","Manner","Depictive","Degree","Cognizer"};
set Spans := {"-1_-1","0_0","0_13","0_38","0_6","0_7","10_10","11_11","12_12","12_13","13_13","14_14","15_15","16_16","17_17","18_18","18_37","19_19","19_37","1_1","1_2","1_4","20_20","21_21","21_33","22_22","22_33","23_23","23_25","23_27","24_24","25_25","26_26","26_27","27_27","28_28","28_33","29_29","2_2","30_30","30_33","31_31","31_33","32_32","33_33","34_34","35_35","35_37","36_36","36_37","37_37","38_38","3_3","4_4","5_5","6_6","7_13","7_7","8_11","8_13","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Existence"]] binary;
var z1[Assignment["Locative_relation"]] binary;
var z2[Assignment["Frequency"]] binary;
var z3[Assignment["Abounding_with"]] binary;
var z4[Assignment["Lively_place"]] binary;
var z5[Assignment["Roadways"]] binary;
var z6[Assignment["Obviousness"]] binary;
var z7[Assignment["Locale_by_use"]] binary;
var z8[Assignment["Shopping"]] binary;
var z9[Assignment["Locale_by_use"]] binary;
var z10[Assignment["Carry_goods"]] binary;
var z11[Assignment["Political_locales"]] binary;
var z12[Assignment["Diversity"]] binary;
var z13[Assignment["Commerce_scenario"]] binary;
var z14[Assignment["Origin"]] binary;
var z15[Assignment["Craft"]] binary;
var z16[Assignment["Expectation"]] binary;
param probabilities0[Assignment["Existence"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Locative_relation"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Frequency"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Abounding_with"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Lively_place"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Roadways"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Obviousness"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Locale_by_use"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Shopping"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Locale_by_use"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Carry_goods"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Political_locales"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Diversity"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Commerce_scenario"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Origin"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Craft"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Expectation"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Existence"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Frequency"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Abounding_with"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Lively_place"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Obviousness"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Shopping"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Carry_goods"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Diversity"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Commerce_scenario"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Craft"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Expectation"] : probabilities16[r,s] * z16[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 38};
set G[I] := <0> {"0_0","0_13","0_38","0_6","0_7"}, <1> {"0_13","0_38","0_6","0_7","1_1","1_2","1_4"}, <2> {"0_13","0_38","0_6","0_7","1_2","1_4","2_2"}, <3> {"0_13","0_38","0_6","0_7","1_4","3_3"}, <4> {"0_13","0_38","0_6","0_7","1_4","4_4"}, <5> {"0_13","0_38","0_6","0_7","5_5"}, <6> {"0_13","0_38","0_6","0_7","6_6"}, <7> {"0_13","0_38","0_7","7_13","7_7"}, <8> {"0_13","0_38","7_13","8_11","8_13","8_8"}, <9> {"0_13","0_38","7_13","8_11","8_13","9_10","9_9"}, <10> {"0_13","0_38","10_10","7_13","8_11","8_13","9_10"}, <11> {"0_13","0_38","11_11","7_13","8_11","8_13"}, <12> {"0_13","0_38","12_12","12_13","7_13","8_13"}, <13> {"0_13","0_38","12_13","13_13","7_13","8_13"}, <14> {"0_38","14_14"}, <15> {"0_38","15_15"}, <16> {"0_38","16_16"}, <17> {"0_38","17_17"}, <18> {"0_38","18_18","18_37"}, <19> {"0_38","18_37","19_19","19_37"}, <20> {"0_38","18_37","19_37","20_20"}, <21> {"0_38","18_37","19_37","21_21","21_33"}, <22> {"0_38","18_37","19_37","21_33","22_22","22_33"}, <23> {"0_38","18_37","19_37","21_33","22_33","23_23","23_25","23_27"}, <24> {"0_38","18_37","19_37","21_33","22_33","23_25","23_27","24_24"}, <25> {"0_38","18_37","19_37","21_33","22_33","23_25","23_27","25_25"}, <26> {"0_38","18_37","19_37","21_33","22_33","23_27","26_26","26_27"}, <27> {"0_38","18_37","19_37","21_33","22_33","23_27","26_27","27_27"}, <28> {"0_38","18_37","19_37","21_33","22_33","28_28","28_33"}, <29> {"0_38","18_37","19_37","21_33","22_33","28_33","29_29"}, <30> {"0_38","18_37","19_37","21_33","22_33","28_33","30_30","30_33"}, <31> {"0_38","18_37","19_37","21_33","22_33","28_33","30_33","31_31","31_33"}, <32> {"0_38","18_37","19_37","21_33","22_33","28_33","30_33","31_33","32_32"}, <33> {"0_38","18_37","19_37","21_33","22_33","28_33","30_33","31_33","33_33"}, <34> {"0_38","18_37","19_37","34_34"}, <35> {"0_38","18_37","19_37","35_35","35_37"}, <36> {"0_38","18_37","19_37","35_37","36_36","36_37"}, <37> {"0_38","18_37","19_37","35_37","36_37","37_37"}, <38> {"0_38","38_38"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Abounding_with"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Lively_place"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Obviousness"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Shopping"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Carry_goods"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Diversity"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Commerce_scenario"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Craft"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Expectation"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Existence"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Frequency"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Abounding_with"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Lively_place"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Roadways"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Obviousness"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Shopping"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Carry_goods"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Diversity"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Commerce_scenario"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Origin"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Craft"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Expectation"] do sum <s> in Spans : z16[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc2 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Political_locales","Electricity","Aggregate","Assistance","Quantity","Project","Inclusion","Substance","Substance","Working_on","Intoxicants","Manufacturing","Building","Locale_by_use","Cause_to_make_progress","Weapon","Research","Locale_by_use","Activity_prepare","Weapon","Leadership","Project"};
set Roles[Frames] :=  <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Electricity"> {"Electricity","Descriptor","Source","Use"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Assistance"> {"Purpose","Time","Goal","Place","Frequency","Degree","Helper","Means","Benefited_party","Domain","Duration","Focal_entity","Manner","Explanation"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Working_on"> {"Purpose","Descriptor","Event_description","Time","Goal","Salient_entity","Place","Frequency","Degree","Means","Domain","Depictive","Duration","Particular_iteration","Manner","Agent"}, <"Intoxicants"> {"Country_of_origin","Type","Descriptor","Intoxicant"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Building"> {"Purpose","Result","Components","Time","Descriptor","Instrument","Place","Created_entity","Means","Period_of_iterations","Particular_iteration","Duration","Beneficiary","Manner","Agent"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Cause_to_make_progress"> {"Purpose","Time","Place","Degree","Rate","Means","Domain","Duration","Particular_iteration","Project","Post_state","Manner","Explanation","Agent","Prior_state"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Research"> {"Type","Question","Place","Topic","Manner","Field","Time","Means","Purpose","Researcher","Population"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Activity_prepare"> {"Agent","Time","Degree","Means","Activity"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"};
set Spans := {"-1_-1","0_0","0_4","0_46","0_7","10_10","11_11","11_45","12_12","12_13","12_45","13_13","14_14","14_45","15_15","15_16","15_40","15_45","16_16","17_17","18_18","18_19","18_22","19_19","19_22","1_1","20_20","20_22","21_21","21_22","22_22","23_23","24_24","24_25","25_25","26_26","27_27","27_31","28_28","28_31","29_29","29_31","2_2","30_30","31_31","32_32","33_33","33_37","34_34","34_37","35_35","35_37","36_36","37_37","38_38","39_39","3_3","40_40","41_41","41_45","42_42","42_45","43_43","44_44","45_45","46_46","4_4","5_5","5_6","5_7","6_6","6_7","7_7","8_46","8_8","9_45","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Political_locales"]] binary;
var z1[Assignment["Electricity"]] binary;
var z2[Assignment["Aggregate"]] binary;
var z3[Assignment["Assistance"]] binary;
var z4[Assignment["Quantity"]] binary;
var z5[Assignment["Project"]] binary;
var z6[Assignment["Inclusion"]] binary;
var z7[Assignment["Substance"]] binary;
var z8[Assignment["Substance"]] binary;
var z9[Assignment["Working_on"]] binary;
var z10[Assignment["Intoxicants"]] binary;
var z11[Assignment["Manufacturing"]] binary;
var z12[Assignment["Building"]] binary;
var z13[Assignment["Locale_by_use"]] binary;
var z14[Assignment["Cause_to_make_progress"]] binary;
var z15[Assignment["Weapon"]] binary;
var z16[Assignment["Research"]] binary;
var z17[Assignment["Locale_by_use"]] binary;
var z18[Assignment["Activity_prepare"]] binary;
var z19[Assignment["Weapon"]] binary;
var z20[Assignment["Leadership"]] binary;
var z21[Assignment["Project"]] binary;
param probabilities0[Assignment["Political_locales"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Electricity"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Aggregate"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Assistance"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Project"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Inclusion"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Substance"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Substance"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Working_on"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Intoxicants"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Manufacturing"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Building"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Locale_by_use"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Cause_to_make_progress"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Weapon"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Research"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Locale_by_use"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Activity_prepare"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Weapon"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Leadership"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Project"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Political_locales"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Electricity"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Assistance"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Project"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Working_on"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Intoxicants"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Building"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Cause_to_make_progress"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Research"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Activity_prepare"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Project"] : probabilities21[r,s] * z21[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 46};
set G[I] := <0> {"0_0","0_4","0_46","0_7"}, <1> {"0_4","0_46","0_7","1_1"}, <2> {"0_4","0_46","0_7","2_2"}, <3> {"0_4","0_46","0_7","3_3"}, <4> {"0_4","0_46","0_7","4_4"}, <5> {"0_46","0_7","5_5","5_6","5_7"}, <6> {"0_46","0_7","5_6","5_7","6_6","6_7"}, <7> {"0_46","0_7","5_7","6_7","7_7"}, <8> {"0_46","8_46","8_8"}, <9> {"0_46","8_46","9_45","9_9"}, <10> {"0_46","10_10","8_46","9_45"}, <11> {"0_46","11_11","11_45","8_46","9_45"}, <12> {"0_46","11_45","12_12","12_13","12_45","8_46","9_45"}, <13> {"0_46","11_45","12_13","12_45","13_13","8_46","9_45"}, <14> {"0_46","11_45","12_45","14_14","14_45","8_46","9_45"}, <15> {"0_46","11_45","12_45","14_45","15_15","15_16","15_40","15_45","8_46","9_45"}, <16> {"0_46","11_45","12_45","14_45","15_16","15_40","15_45","16_16","8_46","9_45"}, <17> {"0_46","11_45","12_45","14_45","15_40","15_45","17_17","8_46","9_45"}, <18> {"0_46","11_45","12_45","14_45","15_40","15_45","18_18","18_19","18_22","8_46","9_45"}, <19> {"0_46","11_45","12_45","14_45","15_40","15_45","18_19","18_22","19_19","19_22","8_46","9_45"}, <20> {"0_46","11_45","12_45","14_45","15_40","15_45","18_22","19_22","20_20","20_22","8_46","9_45"}, <21> {"0_46","11_45","12_45","14_45","15_40","15_45","18_22","19_22","20_22","21_21","21_22","8_46","9_45"}, <22> {"0_46","11_45","12_45","14_45","15_40","15_45","18_22","19_22","20_22","21_22","22_22","8_46","9_45"}, <23> {"0_46","11_45","12_45","14_45","15_40","15_45","23_23","8_46","9_45"}, <24> {"0_46","11_45","12_45","14_45","15_40","15_45","24_24","24_25","8_46","9_45"}, <25> {"0_46","11_45","12_45","14_45","15_40","15_45","24_25","25_25","8_46","9_45"}, <26> {"0_46","11_45","12_45","14_45","15_40","15_45","26_26","8_46","9_45"}, <27> {"0_46","11_45","12_45","14_45","15_40","15_45","27_27","27_31","8_46","9_45"}, <28> {"0_46","11_45","12_45","14_45","15_40","15_45","27_31","28_28","28_31","8_46","9_45"}, <29> {"0_46","11_45","12_45","14_45","15_40","15_45","27_31","28_31","29_29","29_31","8_46","9_45"}, <30> {"0_46","11_45","12_45","14_45","15_40","15_45","27_31","28_31","29_31","30_30","8_46","9_45"}, <31> {"0_46","11_45","12_45","14_45","15_40","15_45","27_31","28_31","29_31","31_31","8_46","9_45"}, <32> {"0_46","11_45","12_45","14_45","15_40","15_45","32_32","8_46","9_45"}, <33> {"0_46","11_45","12_45","14_45","15_40","15_45","33_33","33_37","8_46","9_45"}, <34> {"0_46","11_45","12_45","14_45","15_40","15_45","33_37","34_34","34_37","8_46","9_45"}, <35> {"0_46","11_45","12_45","14_45","15_40","15_45","33_37","34_37","35_35","35_37","8_46","9_45"}, <36> {"0_46","11_45","12_45","14_45","15_40","15_45","33_37","34_37","35_37","36_36","8_46","9_45"}, <37> {"0_46","11_45","12_45","14_45","15_40","15_45","33_37","34_37","35_37","37_37","8_46","9_45"}, <38> {"0_46","11_45","12_45","14_45","15_40","15_45","38_38","8_46","9_45"}, <39> {"0_46","11_45","12_45","14_45","15_40","15_45","39_39","8_46","9_45"}, <40> {"0_46","11_45","12_45","14_45","15_40","15_45","40_40","8_46","9_45"}, <41> {"0_46","11_45","12_45","14_45","15_45","41_41","41_45","8_46","9_45"}, <42> {"0_46","11_45","12_45","14_45","15_45","41_45","42_42","42_45","8_46","9_45"}, <43> {"0_46","11_45","12_45","14_45","15_45","41_45","42_45","43_43","8_46","9_45"}, <44> {"0_46","11_45","12_45","14_45","15_45","41_45","42_45","44_44","8_46","9_45"}, <45> {"0_46","11_45","12_45","14_45","15_45","41_45","42_45","45_45","8_46","9_45"}, <46> {"0_46","46_46","8_46"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Electricity"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Assistance"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Working_on"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Intoxicants"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Building"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Cause_to_make_progress"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Research"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Activity_prepare"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Electricity"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Assistance"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Project"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Substance"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Substance"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Working_on"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Intoxicants"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Building"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Cause_to_make_progress"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Weapon"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Research"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Activity_prepare"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Weapon"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Leadership"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Project"] do sum <s> in Spans : z21[r,s] == 1;
#pairwise exclusion constraint
set Exc4 := {<"Individuals","Mass">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc5 := {<"Activity","Salient_entity">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc9 := {<"Goal","Salient_entity">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc21 := {<"Activity","Salient_entity">};
subto exclusion21: forall <ri,rj> in Exc21 do z21[ri,"-1_-1"] + z21[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

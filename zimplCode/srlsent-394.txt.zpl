# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Collaboration","Protecting","Activity_ongoing","Intentionally_act","Collaboration","Be_in_agreement_on_action","Statement","Subordinates_and_superiors","Origin","Leadership"};
set Roles[Frames] :=  <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"Protecting"> {"Protection","Time","Descriptor","Instrument","Place","Degree","Asset","Means","Depictive","Danger","Duration","Beneficiary","Manner","Explanation"}, <"Activity_ongoing"> {"Purpose","Circumstances","Depictive","Activity","Event_description","Duration","Manner","Time","Explanation","Means","Subevent","Agent"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"Be_in_agreement_on_action"> {"Place","Party_2","Party_1","Topic","Manner","Parties","Time","Circumstances","Obligation","Duration","Descriptor"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Subordinates_and_superiors"> {"Subordinate","Superior"}, <"Origin"> {"Entity","Origin"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"};
set Spans := {"-1_-1","0_0","0_1","0_12","0_23","0_33","0_9","10_10","11_11","12_12","13_13","13_23","14_14","14_23","15_15","15_23","16_16","17_17","17_23","18_18","18_19","18_23","19_19","1_1","1_9","20_20","20_23","21_21","21_23","22_22","23_23","24_24","25_25","26_26","27_27","27_30","27_32","28_28","29_29","2_2","2_9","30_30","31_31","31_32","32_32","33_33","3_3","3_9","4_4","4_5","4_9","5_5","6_6","6_9","7_7","7_9","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Collaboration"]] binary;
var z1[Assignment["Protecting"]] binary;
var z2[Assignment["Activity_ongoing"]] binary;
var z3[Assignment["Intentionally_act"]] binary;
var z4[Assignment["Collaboration"]] binary;
var z5[Assignment["Be_in_agreement_on_action"]] binary;
var z6[Assignment["Statement"]] binary;
var z7[Assignment["Subordinates_and_superiors"]] binary;
var z8[Assignment["Origin"]] binary;
var z9[Assignment["Leadership"]] binary;
param probabilities0[Assignment["Collaboration"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Protecting"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Activity_ongoing"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Intentionally_act"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Collaboration"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Be_in_agreement_on_action"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Statement"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Subordinates_and_superiors"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Origin"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Leadership"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Collaboration"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Protecting"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Activity_ongoing"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Collaboration"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Be_in_agreement_on_action"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Subordinates_and_superiors"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities9[r,s] * z9[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 33};
set G[I] := <0> {"0_0","0_1","0_12","0_23","0_33","0_9"}, <1> {"0_1","0_12","0_23","0_33","0_9","1_1","1_9"}, <2> {"0_12","0_23","0_33","0_9","1_9","2_2","2_9"}, <3> {"0_12","0_23","0_33","0_9","1_9","2_9","3_3","3_9"}, <4> {"0_12","0_23","0_33","0_9","1_9","2_9","3_9","4_4","4_5","4_9"}, <5> {"0_12","0_23","0_33","0_9","1_9","2_9","3_9","4_5","4_9","5_5"}, <6> {"0_12","0_23","0_33","0_9","1_9","2_9","3_9","4_9","6_6","6_9"}, <7> {"0_12","0_23","0_33","0_9","1_9","2_9","3_9","4_9","6_9","7_7","7_9"}, <8> {"0_12","0_23","0_33","0_9","1_9","2_9","3_9","4_9","6_9","7_9","8_8","8_9"}, <9> {"0_12","0_23","0_33","0_9","1_9","2_9","3_9","4_9","6_9","7_9","8_9","9_9"}, <10> {"0_12","0_23","0_33","10_10"}, <11> {"0_12","0_23","0_33","11_11"}, <12> {"0_12","0_23","0_33","12_12"}, <13> {"0_23","0_33","13_13","13_23"}, <14> {"0_23","0_33","13_23","14_14","14_23"}, <15> {"0_23","0_33","13_23","14_23","15_15","15_23"}, <16> {"0_23","0_33","13_23","14_23","15_23","16_16"}, <17> {"0_23","0_33","13_23","14_23","15_23","17_17","17_23"}, <18> {"0_23","0_33","13_23","14_23","15_23","17_23","18_18","18_19","18_23"}, <19> {"0_23","0_33","13_23","14_23","15_23","17_23","18_19","18_23","19_19"}, <20> {"0_23","0_33","13_23","14_23","15_23","17_23","18_23","20_20","20_23"}, <21> {"0_23","0_33","13_23","14_23","15_23","17_23","18_23","20_23","21_21","21_23"}, <22> {"0_23","0_33","13_23","14_23","15_23","17_23","18_23","20_23","21_23","22_22"}, <23> {"0_23","0_33","13_23","14_23","15_23","17_23","18_23","20_23","21_23","23_23"}, <24> {"0_33","24_24"}, <25> {"0_33","25_25"}, <26> {"0_33","26_26"}, <27> {"0_33","27_27","27_30","27_32"}, <28> {"0_33","27_30","27_32","28_28"}, <29> {"0_33","27_30","27_32","29_29"}, <30> {"0_33","27_30","27_32","30_30"}, <31> {"0_33","27_32","31_31","31_32"}, <32> {"0_33","27_32","31_32","32_32"}, <33> {"0_33","33_33"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Protecting"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Activity_ongoing"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Be_in_agreement_on_action"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Subordinates_and_superiors"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Protecting"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Activity_ongoing"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Be_in_agreement_on_action"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Statement"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Subordinates_and_superiors"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Origin"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Leadership"] do sum <s> in Spans : z9[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc4 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc5 := {<"Parties","Party_2">,<"Parties","Party_1">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr0 := {<"Partner_1","Partner_2">};
subto require0: forall <ri,rj> in Reqr0 do z0[ri,"-1_-1"] - z0[rj,"-1_-1"] == 0;
set Reqr4 := {<"Partner_1","Partner_2">};
subto require4: forall <ri,rj> in Reqr4 do z4[ri,"-1_-1"] - z4[rj,"-1_-1"] == 0;
set Reqr5 := {<"Party_1","Party_2">};
subto require5: forall <ri,rj> in Reqr5 do z5[ri,"-1_-1"] - z5[rj,"-1_-1"] == 0;

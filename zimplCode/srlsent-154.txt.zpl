# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Temporal_subregion","Calendric_unit","Relational_quantity","Cardinal_numbers","Leadership","Sending","Text","Leadership","Observable_body_parts","Request","Temporal_subregion","Catastrophe","Revenge","Cause_to_end"};
set Roles[Frames] :=  <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Sending"> {"Recipient","Depictive","Time","Place","Goal","Co_theme","Theme","Purpose","Source","Sender","Reason","Transport_means","Container","Path"}, <"Text"> {"Topic","Honoree","Use","Author","Containing_text","Genre","Material","Components","Time_of_creation","Title","Text","Medium"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Observable_body_parts"> {"Attachment","Descriptor","Possessor","Body_part","Subregion","Orientational_Location"}, <"Request"> {"Addressee","Containing_event","Medium","Topic","Speaker","Time","Message","Iteration","Means","Manner","Depictive"}, <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Catastrophe"> {"Undesirable_Event","Place","Degree","Manner","Undergoer","Time","Circumstances","Cause"}, <"Revenge"> {"Purpose","Avenger","Depictive","Offender","Instrument","Place","Degree","Injury","Duration","Punishment","Injured_Party","Manner","Time"}, <"Cause_to_end"> {"Place","Agent","Degree","Manner","Time","Reason","Means","Process","State","Cause"};
set Spans := {"-1_-1","0_0","0_2","0_33","10_10","11_11","11_16","12_12","12_16","13_13","14_14","15_15","16_16","17_17","18_18","18_32","19_19","19_27","1_1","20_20","20_21","20_27","21_21","22_22","22_27","23_23","23_25","23_27","24_24","25_25","26_26","26_27","27_27","28_28","28_32","29_29","29_32","2_2","30_30","30_31","30_32","31_31","32_32","33_33","3_3","4_4","4_5","4_7","5_5","6_6","7_7","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Temporal_subregion"]] binary;
var z1[Assignment["Calendric_unit"]] binary;
var z2[Assignment["Relational_quantity"]] binary;
var z3[Assignment["Cardinal_numbers"]] binary;
var z4[Assignment["Leadership"]] binary;
var z5[Assignment["Sending"]] binary;
var z6[Assignment["Text"]] binary;
var z7[Assignment["Leadership"]] binary;
var z8[Assignment["Observable_body_parts"]] binary;
var z9[Assignment["Request"]] binary;
var z10[Assignment["Temporal_subregion"]] binary;
var z11[Assignment["Catastrophe"]] binary;
var z12[Assignment["Revenge"]] binary;
var z13[Assignment["Cause_to_end"]] binary;
param probabilities0[Assignment["Temporal_subregion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Calendric_unit"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Relational_quantity"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Cardinal_numbers"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Leadership"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Sending"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Text"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Leadership"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Observable_body_parts"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Request"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Temporal_subregion"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Catastrophe"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Revenge"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Cause_to_end"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Temporal_subregion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Sending"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Text"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Observable_body_parts"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Request"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Temporal_subregion"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Catastrophe"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Revenge"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Cause_to_end"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 33};
set G[I] := <0> {"0_0","0_2","0_33"}, <1> {"0_2","0_33","1_1"}, <2> {"0_2","0_33","2_2"}, <3> {"0_33","3_3"}, <4> {"0_33","4_4","4_5","4_7"}, <5> {"0_33","4_5","4_7","5_5"}, <6> {"0_33","4_7","6_6"}, <7> {"0_33","4_7","7_7"}, <8> {"0_33","8_8"}, <9> {"0_33","9_10","9_9"}, <10> {"0_33","10_10","9_10"}, <11> {"0_33","11_11","11_16"}, <12> {"0_33","11_16","12_12","12_16"}, <13> {"0_33","11_16","12_16","13_13"}, <14> {"0_33","11_16","12_16","14_14"}, <15> {"0_33","11_16","12_16","15_15"}, <16> {"0_33","11_16","12_16","16_16"}, <17> {"0_33","17_17"}, <18> {"0_33","18_18","18_32"}, <19> {"0_33","18_32","19_19","19_27"}, <20> {"0_33","18_32","19_27","20_20","20_21","20_27"}, <21> {"0_33","18_32","19_27","20_21","20_27","21_21"}, <22> {"0_33","18_32","19_27","20_27","22_22","22_27"}, <23> {"0_33","18_32","19_27","20_27","22_27","23_23","23_25","23_27"}, <24> {"0_33","18_32","19_27","20_27","22_27","23_25","23_27","24_24"}, <25> {"0_33","18_32","19_27","20_27","22_27","23_25","23_27","25_25"}, <26> {"0_33","18_32","19_27","20_27","22_27","23_27","26_26","26_27"}, <27> {"0_33","18_32","19_27","20_27","22_27","23_27","26_27","27_27"}, <28> {"0_33","18_32","28_28","28_32"}, <29> {"0_33","18_32","28_32","29_29","29_32"}, <30> {"0_33","18_32","28_32","29_32","30_30","30_31","30_32"}, <31> {"0_33","18_32","28_32","29_32","30_31","30_32","31_31"}, <32> {"0_33","18_32","28_32","29_32","30_32","32_32"}, <33> {"0_33","33_33"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Sending"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Text"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Observable_body_parts"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Request"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Catastrophe"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Revenge"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Cause_to_end"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Leadership"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Sending"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Text"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Leadership"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Observable_body_parts"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Request"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Catastrophe"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Revenge"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Cause_to_end"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc13 := {<"Agent","Cause">,<"Process","State">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

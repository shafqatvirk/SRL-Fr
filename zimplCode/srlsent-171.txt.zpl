# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Hostile_encounter","Motion_directional","Cardinal_numbers","Information","Organization","Political_locales","People_by_religion","Aggregate","Existence"};
set Roles[Frames] :=  <"Hostile_encounter"> {"Purpose","Result","Depictive","Instrument","Place","Degree","Means","Internal_cause","Reason","Particular_iteration","Duration","Sides","Issue","Side_2","Side_1","Manner","Time"}, <"Motion_directional"> {"Speed","Duration","Area","Theme","Means","Depictive","Circumstances","Manner","Result","Distance","Explanation","Time","Source","Purpose","Degree","Place","Goal","Direction","Path","Carrier","Path_shape"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Information"> {"Means_of_Gathering","Source","Topic","Information","Cognizer"}, <"Organization"> {"Period_of_existence","Members","Place","Name","Container_possessor","Organization","Purpose","Descriptor"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"People_by_religion"> {"Person","Religion","Ethnicity","Persistent_characteristic","Descriptor","Age","Origin"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"};
set Spans := {"-1_-1","0_0","0_1","0_4","0_43","10_10","10_42","11_11","12_12","13_13","14_14","15_15","15_16","15_42","16_16","17_17","17_19","17_24","17_33","17_42","18_18","19_19","1_1","20_20","21_21","21_22","22_22","23_23","24_24","25_25","26_26","26_29","26_30","27_27","28_28","29_29","2_2","2_4","30_30","31_31","32_32","33_33","34_34","34_42","35_35","35_42","36_36","36_38","36_42","37_37","38_38","39_39","39_42","3_3","3_4","40_40","40_42","41_41","42_42","43_43","4_4","5_43","5_5","6_42","6_6","7_7","7_8","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Hostile_encounter"]] binary;
var z1[Assignment["Motion_directional"]] binary;
var z2[Assignment["Cardinal_numbers"]] binary;
var z3[Assignment["Information"]] binary;
var z4[Assignment["Organization"]] binary;
var z5[Assignment["Political_locales"]] binary;
var z6[Assignment["People_by_religion"]] binary;
var z7[Assignment["Aggregate"]] binary;
var z8[Assignment["Existence"]] binary;
param probabilities0[Assignment["Hostile_encounter"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Motion_directional"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Cardinal_numbers"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Information"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Organization"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Political_locales"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["People_by_religion"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Aggregate"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Existence"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Hostile_encounter"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Motion_directional"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Information"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Organization"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["People_by_religion"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Existence"] : probabilities8[r,s] * z8[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 43};
set G[I] := <0> {"0_0","0_1","0_4","0_43"}, <1> {"0_1","0_4","0_43","1_1"}, <2> {"0_4","0_43","2_2","2_4"}, <3> {"0_4","0_43","2_4","3_3","3_4"}, <4> {"0_4","0_43","2_4","3_4","4_4"}, <5> {"0_43","5_43","5_5"}, <6> {"0_43","5_43","6_42","6_6"}, <7> {"0_43","5_43","6_42","7_7","7_8"}, <8> {"0_43","5_43","6_42","7_8","8_8"}, <9> {"0_43","5_43","6_42","9_9"}, <10> {"0_43","10_10","10_42","5_43","6_42"}, <11> {"0_43","10_42","11_11","5_43","6_42"}, <12> {"0_43","10_42","12_12","5_43","6_42"}, <13> {"0_43","10_42","13_13","5_43","6_42"}, <14> {"0_43","10_42","14_14","5_43","6_42"}, <15> {"0_43","10_42","15_15","15_16","15_42","5_43","6_42"}, <16> {"0_43","10_42","15_16","15_42","16_16","5_43","6_42"}, <17> {"0_43","10_42","15_42","17_17","17_19","17_24","17_33","17_42","5_43","6_42"}, <18> {"0_43","10_42","15_42","17_19","17_24","17_33","17_42","18_18","5_43","6_42"}, <19> {"0_43","10_42","15_42","17_19","17_24","17_33","17_42","19_19","5_43","6_42"}, <20> {"0_43","10_42","15_42","17_24","17_33","17_42","20_20","5_43","6_42"}, <21> {"0_43","10_42","15_42","17_24","17_33","17_42","21_21","21_22","5_43","6_42"}, <22> {"0_43","10_42","15_42","17_24","17_33","17_42","21_22","22_22","5_43","6_42"}, <23> {"0_43","10_42","15_42","17_24","17_33","17_42","23_23","5_43","6_42"}, <24> {"0_43","10_42","15_42","17_24","17_33","17_42","24_24","5_43","6_42"}, <25> {"0_43","10_42","15_42","17_33","17_42","25_25","5_43","6_42"}, <26> {"0_43","10_42","15_42","17_33","17_42","26_26","26_29","26_30","5_43","6_42"}, <27> {"0_43","10_42","15_42","17_33","17_42","26_29","26_30","27_27","5_43","6_42"}, <28> {"0_43","10_42","15_42","17_33","17_42","26_29","26_30","28_28","5_43","6_42"}, <29> {"0_43","10_42","15_42","17_33","17_42","26_29","26_30","29_29","5_43","6_42"}, <30> {"0_43","10_42","15_42","17_33","17_42","26_30","30_30","5_43","6_42"}, <31> {"0_43","10_42","15_42","17_33","17_42","31_31","5_43","6_42"}, <32> {"0_43","10_42","15_42","17_33","17_42","32_32","5_43","6_42"}, <33> {"0_43","10_42","15_42","17_33","17_42","33_33","5_43","6_42"}, <34> {"0_43","10_42","15_42","17_42","34_34","34_42","5_43","6_42"}, <35> {"0_43","10_42","15_42","17_42","34_42","35_35","35_42","5_43","6_42"}, <36> {"0_43","10_42","15_42","17_42","34_42","35_42","36_36","36_38","36_42","5_43","6_42"}, <37> {"0_43","10_42","15_42","17_42","34_42","35_42","36_38","36_42","37_37","5_43","6_42"}, <38> {"0_43","10_42","15_42","17_42","34_42","35_42","36_38","36_42","38_38","5_43","6_42"}, <39> {"0_43","10_42","15_42","17_42","34_42","35_42","36_42","39_39","39_42","5_43","6_42"}, <40> {"0_43","10_42","15_42","17_42","34_42","35_42","36_42","39_42","40_40","40_42","5_43","6_42"}, <41> {"0_43","10_42","15_42","17_42","34_42","35_42","36_42","39_42","40_42","41_41","5_43","6_42"}, <42> {"0_43","10_42","15_42","17_42","34_42","35_42","36_42","39_42","40_42","42_42","5_43","6_42"}, <43> {"0_43","43_43","5_43"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Hostile_encounter"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Motion_directional"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Information"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Organization"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["People_by_religion"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Hostile_encounter"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Motion_directional"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Information"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Organization"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["People_by_religion"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Existence"] do sum <s> in Spans : z8[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Side_1","Sides">,<"Side_2","Sides">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc1 := {<"Area","Direction">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr0 := {<"Side_1","Side_2">};
subto require0: forall <ri,rj> in Reqr0 do z0[ri,"-1_-1"] - z0[rj,"-1_-1"] == 0;

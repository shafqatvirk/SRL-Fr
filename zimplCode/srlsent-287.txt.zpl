# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Building","Body_decoration","Intentionally_create","Hostile_encounter","Weapon","Duration_attribute","Range","Weapon","Change_position_on_a_scale","Project","Temporal_subregion","Progress","Cardinal_numbers","Dimension","Roadways","Substance","Supply","Substance","Supply","Gizmo"};
set Roles[Frames] :=  <"Building"> {"Purpose","Result","Components","Time","Descriptor","Instrument","Place","Created_entity","Means","Period_of_iterations","Particular_iteration","Duration","Beneficiary","Manner","Agent"}, <"Body_decoration"> {"Picture","Decorated_individual","Type","Use","Body_location","Decoration","Decoration_desriptor"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Hostile_encounter"> {"Purpose","Result","Depictive","Instrument","Place","Degree","Means","Internal_cause","Reason","Particular_iteration","Duration","Sides","Issue","Side_2","Side_1","Manner","Time"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Duration_attribute"> {"Degree","Period","Eventuality"}, <"Range"> {"Instrument","Event","Participant","Distance"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Change_position_on_a_scale"> {"Speed","Duration","Item","Value_range","Attribute","Correlate","Initial_value","Circumstances","Difference","Manner","Result","Final_state","Time","Period_of_iterations","Degree","Group","Final_correlate","Initial_correlate","Initial_state","Particular_iteration","Path","Final_value","Place"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"}, <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Progress"> {"Domain","Event_description","Circumstance","Time","Place","Degree","Rate","Post_state","Duration","Entity","Manner","Prior_state"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Dimension"> {"Object","Domain","Measurement","Dimension","Location"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Supply"> {"Recipient","Circumstances","Time","Supplier","Place","Co_theme","Purpose","Period_of_iterations","Means","Source","Theme","Purpose_of_recipient","Manner"}, <"Gizmo"> {"Descriptor","Power_source","Gizmo","Use","User"};
set Spans := {"-1_-1","0_0","0_18","0_41","0_7","10_10","11_11","11_13","12_12","13_13","14_14","15_15","16_16","17_17","18_18","19_19","19_41","1_1","1_7","20_20","20_24","21_21","21_24","22_22","22_24","23_23","24_24","25_25","26_26","26_40","27_27","27_40","28_28","28_40","29_29","29_31","29_40","2_2","2_3","2_7","30_30","31_31","32_32","33_33","33_37","33_38","34_34","35_35","36_36","37_37","38_38","39_39","3_3","40_40","41_41","4_4","4_7","5_5","5_7","6_6","6_7","7_7","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Building"]] binary;
var z1[Assignment["Body_decoration"]] binary;
var z2[Assignment["Intentionally_create"]] binary;
var z3[Assignment["Hostile_encounter"]] binary;
var z4[Assignment["Weapon"]] binary;
var z5[Assignment["Duration_attribute"]] binary;
var z6[Assignment["Range"]] binary;
var z7[Assignment["Weapon"]] binary;
var z8[Assignment["Change_position_on_a_scale"]] binary;
var z9[Assignment["Project"]] binary;
var z10[Assignment["Temporal_subregion"]] binary;
var z11[Assignment["Progress"]] binary;
var z12[Assignment["Cardinal_numbers"]] binary;
var z13[Assignment["Dimension"]] binary;
var z14[Assignment["Roadways"]] binary;
var z15[Assignment["Substance"]] binary;
var z16[Assignment["Supply"]] binary;
var z17[Assignment["Substance"]] binary;
var z18[Assignment["Supply"]] binary;
var z19[Assignment["Gizmo"]] binary;
param probabilities0[Assignment["Building"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Body_decoration"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Intentionally_create"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Hostile_encounter"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Weapon"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Duration_attribute"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Range"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Weapon"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Change_position_on_a_scale"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Project"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Temporal_subregion"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Progress"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Cardinal_numbers"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Dimension"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Roadways"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Substance"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Supply"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Substance"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Supply"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Gizmo"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Building"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Body_decoration"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Hostile_encounter"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Duration_attribute"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Range"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Change_position_on_a_scale"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Project"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Temporal_subregion"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Progress"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Dimension"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Supply"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Gizmo"] : probabilities19[r,s] * z19[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 41};
set G[I] := <0> {"0_0","0_18","0_41","0_7"}, <1> {"0_18","0_41","0_7","1_1","1_7"}, <2> {"0_18","0_41","0_7","1_7","2_2","2_3","2_7"}, <3> {"0_18","0_41","0_7","1_7","2_3","2_7","3_3"}, <4> {"0_18","0_41","0_7","1_7","2_7","4_4","4_7"}, <5> {"0_18","0_41","0_7","1_7","2_7","4_7","5_5","5_7"}, <6> {"0_18","0_41","0_7","1_7","2_7","4_7","5_7","6_6","6_7"}, <7> {"0_18","0_41","0_7","1_7","2_7","4_7","5_7","6_7","7_7"}, <8> {"0_18","0_41","8_8"}, <9> {"0_18","0_41","9_10","9_9"}, <10> {"0_18","0_41","10_10","9_10"}, <11> {"0_18","0_41","11_11","11_13"}, <12> {"0_18","0_41","11_13","12_12"}, <13> {"0_18","0_41","11_13","13_13"}, <14> {"0_18","0_41","14_14"}, <15> {"0_18","0_41","15_15"}, <16> {"0_18","0_41","16_16"}, <17> {"0_18","0_41","17_17"}, <18> {"0_18","0_41","18_18"}, <19> {"0_41","19_19","19_41"}, <20> {"0_41","19_41","20_20","20_24"}, <21> {"0_41","19_41","20_24","21_21","21_24"}, <22> {"0_41","19_41","20_24","21_24","22_22","22_24"}, <23> {"0_41","19_41","20_24","21_24","22_24","23_23"}, <24> {"0_41","19_41","20_24","21_24","22_24","24_24"}, <25> {"0_41","19_41","25_25"}, <26> {"0_41","19_41","26_26","26_40"}, <27> {"0_41","19_41","26_40","27_27","27_40"}, <28> {"0_41","19_41","26_40","27_40","28_28","28_40"}, <29> {"0_41","19_41","26_40","27_40","28_40","29_29","29_31","29_40"}, <30> {"0_41","19_41","26_40","27_40","28_40","29_31","29_40","30_30"}, <31> {"0_41","19_41","26_40","27_40","28_40","29_31","29_40","31_31"}, <32> {"0_41","19_41","26_40","27_40","28_40","29_40","32_32"}, <33> {"0_41","19_41","26_40","27_40","28_40","29_40","33_33","33_37","33_38"}, <34> {"0_41","19_41","26_40","27_40","28_40","29_40","33_37","33_38","34_34"}, <35> {"0_41","19_41","26_40","27_40","28_40","29_40","33_37","33_38","35_35"}, <36> {"0_41","19_41","26_40","27_40","28_40","29_40","33_37","33_38","36_36"}, <37> {"0_41","19_41","26_40","27_40","28_40","29_40","33_37","33_38","37_37"}, <38> {"0_41","19_41","26_40","27_40","28_40","29_40","33_38","38_38"}, <39> {"0_41","19_41","26_40","27_40","28_40","29_40","39_39"}, <40> {"0_41","19_41","26_40","27_40","28_40","29_40","40_40"}, <41> {"0_41","19_41","41_41"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Building"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Body_decoration"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Hostile_encounter"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Duration_attribute"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Range"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Change_position_on_a_scale"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Progress"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Dimension"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Supply"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Gizmo"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Building"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Body_decoration"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Hostile_encounter"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Weapon"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Duration_attribute"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Range"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Weapon"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Change_position_on_a_scale"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Project"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Progress"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Dimension"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Roadways"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Substance"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Supply"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Substance"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Supply"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Gizmo"] do sum <s> in Spans : z19[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Side_1","Sides">,<"Side_2","Sides">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc8 := {<"Initial_state","Value_range">,<"Final_value","Value_range">,<"Initial_value","Value_range">,<"Final_state","Value_range">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc9 := {<"Activity","Salient_entity">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr3 := {<"Side_1","Side_2">};
subto require3: forall <ri,rj> in Reqr3 do z3[ri,"-1_-1"] - z3[rj,"-1_-1"] == 0;

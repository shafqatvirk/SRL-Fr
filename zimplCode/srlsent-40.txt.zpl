# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Military","Quantity","Locale_by_use","Becoming","Locale_by_use","Examination","Locale","Part_orientational","Being_necessary","Political_locales","Arriving","Temporal_subregion","Causation","Hostile_encounter","Attempt"};
set Roles[Frames] :=  <"Military"> {"Members","Descriptor","Possessor","Goal","Domain","Force"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Becoming"> {"Initial_category","Initial_state","Circumstances","Time","Final_state","Place","Duration_of_final_state","Cause","Group","Final_category","Entity","Transitional_period","Reason","Manner","Explanation"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Examination"> {"Examiner","Knowledge","Qualification","Examination","Means","Examinee"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Being_necessary"> {"Dependent","Requirement","Degree","Domain","Condition","Time","Required_entity","Reason","Descriptor","Dependent_individual"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Arriving"> {"Theme","Cotheme","Means","Depictive","Circumstances","Manner","Time","Source","Period_of_iterations","Degree","Event_description","Re_encoding","Goal","Purpose","Goal_conditions","Path","Frequency","Mode_of_transportation"}, <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Causation"> {"Circumstances","Time","Actor","Place","Frequency","Means","Effect","Cause","Reason","Affected","Manner","Concessive","Explanation"}, <"Hostile_encounter"> {"Purpose","Result","Depictive","Instrument","Place","Degree","Means","Internal_cause","Reason","Particular_iteration","Duration","Sides","Issue","Side_2","Side_1","Manner","Time"}, <"Attempt"> {"Purpose","Circumstances","Time","Goal","Particular_iteration","Place","Frequency","Degree","Means","Outcome","Condition","Depictive","Duration","Manner","Agent"};
set Spans := {"-1_-1","0_0","0_23","0_33","0_47","10_10","10_13","10_18","10_19","11_11","12_12","13_13","14_14","15_15","16_16","17_17","18_18","19_19","1_1","20_20","20_22","21_21","21_22","22_22","23_23","24_24","25_25","26_26","27_27","27_32","28_28","28_30","28_32","29_29","2_2","30_30","31_31","31_32","32_32","33_33","34_34","34_47","35_35","35_38","36_36","36_38","37_37","38_38","39_39","39_46","3_3","40_40","40_41","40_46","41_41","42_42","42_46","43_43","43_44","43_46","44_44","45_45","46_46","47_47","4_4","5_5","6_6","7_22","7_7","7_8","8_22","8_8","9_22","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Military"]] binary;
var z1[Assignment["Quantity"]] binary;
var z2[Assignment["Locale_by_use"]] binary;
var z3[Assignment["Becoming"]] binary;
var z4[Assignment["Locale_by_use"]] binary;
var z5[Assignment["Examination"]] binary;
var z6[Assignment["Locale"]] binary;
var z7[Assignment["Part_orientational"]] binary;
var z8[Assignment["Being_necessary"]] binary;
var z9[Assignment["Political_locales"]] binary;
var z10[Assignment["Arriving"]] binary;
var z11[Assignment["Temporal_subregion"]] binary;
var z12[Assignment["Causation"]] binary;
var z13[Assignment["Hostile_encounter"]] binary;
var z14[Assignment["Attempt"]] binary;
param probabilities0[Assignment["Military"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Quantity"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Locale_by_use"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Becoming"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Locale_by_use"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Examination"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locale"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Part_orientational"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Being_necessary"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Political_locales"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Arriving"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Temporal_subregion"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Causation"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Hostile_encounter"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Attempt"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Military"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Becoming"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Examination"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Being_necessary"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Arriving"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Temporal_subregion"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Causation"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Hostile_encounter"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Attempt"] : probabilities14[r,s] * z14[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 47};
set G[I] := <0> {"0_0","0_23","0_33","0_47"}, <1> {"0_23","0_33","0_47","1_1"}, <2> {"0_23","0_33","0_47","2_2"}, <3> {"0_23","0_33","0_47","3_3"}, <4> {"0_23","0_33","0_47","4_4"}, <5> {"0_23","0_33","0_47","5_5"}, <6> {"0_23","0_33","0_47","6_6"}, <7> {"0_23","0_33","0_47","7_22","7_7","7_8"}, <8> {"0_23","0_33","0_47","7_22","7_8","8_22","8_8"}, <9> {"0_23","0_33","0_47","7_22","8_22","9_22","9_9"}, <10> {"0_23","0_33","0_47","10_10","10_13","10_18","10_19","7_22","8_22","9_22"}, <11> {"0_23","0_33","0_47","10_13","10_18","10_19","11_11","7_22","8_22","9_22"}, <12> {"0_23","0_33","0_47","10_13","10_18","10_19","12_12","7_22","8_22","9_22"}, <13> {"0_23","0_33","0_47","10_13","10_18","10_19","13_13","7_22","8_22","9_22"}, <14> {"0_23","0_33","0_47","10_18","10_19","14_14","7_22","8_22","9_22"}, <15> {"0_23","0_33","0_47","10_18","10_19","15_15","7_22","8_22","9_22"}, <16> {"0_23","0_33","0_47","10_18","10_19","16_16","7_22","8_22","9_22"}, <17> {"0_23","0_33","0_47","10_18","10_19","17_17","7_22","8_22","9_22"}, <18> {"0_23","0_33","0_47","10_18","10_19","18_18","7_22","8_22","9_22"}, <19> {"0_23","0_33","0_47","10_19","19_19","7_22","8_22","9_22"}, <20> {"0_23","0_33","0_47","20_20","20_22","7_22","8_22","9_22"}, <21> {"0_23","0_33","0_47","20_22","21_21","21_22","7_22","8_22","9_22"}, <22> {"0_23","0_33","0_47","20_22","21_22","22_22","7_22","8_22","9_22"}, <23> {"0_23","0_33","0_47","23_23"}, <24> {"0_33","0_47","24_24"}, <25> {"0_33","0_47","25_25"}, <26> {"0_33","0_47","26_26"}, <27> {"0_33","0_47","27_27","27_32"}, <28> {"0_33","0_47","27_32","28_28","28_30","28_32"}, <29> {"0_33","0_47","27_32","28_30","28_32","29_29"}, <30> {"0_33","0_47","27_32","28_30","28_32","30_30"}, <31> {"0_33","0_47","27_32","28_32","31_31","31_32"}, <32> {"0_33","0_47","27_32","28_32","31_32","32_32"}, <33> {"0_33","0_47","33_33"}, <34> {"0_47","34_34","34_47"}, <35> {"0_47","34_47","35_35","35_38"}, <36> {"0_47","34_47","35_38","36_36","36_38"}, <37> {"0_47","34_47","35_38","36_38","37_37"}, <38> {"0_47","34_47","35_38","36_38","38_38"}, <39> {"0_47","34_47","39_39","39_46"}, <40> {"0_47","34_47","39_46","40_40","40_41","40_46"}, <41> {"0_47","34_47","39_46","40_41","40_46","41_41"}, <42> {"0_47","34_47","39_46","40_46","42_42","42_46"}, <43> {"0_47","34_47","39_46","40_46","42_46","43_43","43_44","43_46"}, <44> {"0_47","34_47","39_46","40_46","42_46","43_44","43_46","44_44"}, <45> {"0_47","34_47","39_46","40_46","42_46","43_46","45_45"}, <46> {"0_47","34_47","39_46","40_46","42_46","43_46","46_46"}, <47> {"0_47","34_47","47_47"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Military"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Becoming"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Examination"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Being_necessary"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Arriving"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Causation"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Hostile_encounter"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Attempt"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Military"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Quantity"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Becoming"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Examination"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locale"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Being_necessary"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Arriving"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Causation"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Hostile_encounter"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Attempt"] do sum <s> in Spans : z14[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Individuals","Mass">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc3 := {<"Final_category","Final_state">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc13 := {<"Side_1","Sides">,<"Side_2","Sides">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr13 := {<"Side_1","Side_2">};
subto require13: forall <ri,rj> in Reqr13 do z13[ri,"-1_-1"] - z13[rj,"-1_-1"] == 0;

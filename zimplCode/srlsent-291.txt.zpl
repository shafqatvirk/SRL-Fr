# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Taking_sides","Ordinal_numbers","Means","Likelihood","Locale","Attempt","Part_whole","Political_locales","Attempt_suasion","Abandonment","Health_response","Artifact","Suspiciousness","Intentionally_act","Weapon","Expensiveness","Locale","Temporal_subregion","Direction"};
set Roles[Frames] :=  <"Taking_sides"> {"Time","Descriptor","Concessive","Place","Degree","Cognizer","Particular_iteration","Issue","Side","Manner","Action","Explanation"}, <"Ordinal_numbers"> {"Type","Item","Starting_point","Comparison_set","Basis_of_order"}, <"Means"> {"Agent","Purpose","Descriptor","Time","Means"}, <"Likelihood"> {"Time","Place","Circumstances","Reason","Hypothetical_event","Degree"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Attempt"> {"Purpose","Circumstances","Time","Goal","Particular_iteration","Place","Frequency","Degree","Means","Outcome","Condition","Depictive","Duration","Manner","Agent"}, <"Part_whole"> {"Part","Whole","Part_Prop","Orientation"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Attempt_suasion"> {"Circumstances","Frequency","Depictive","Addressee","Degree","Group","Means","Speaker","Period_of_iterations","Topic","Re_encoding","Content","Manner","Explanation","Time","Medium"}, <"Abandonment"> {"Explanation","Time","Duration","Place","Depictive","Theme","Agent"}, <"Health_response"> {"Manner","Body_part","Protagonist","Degree","Trigger"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Suspiciousness"> {"Social_actor","Degree","Behavior","Entity"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Expensiveness"> {"Asset","Goods","Rate","Origin","Intended_event","Degree","Payer"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Direction"> {"Base_position","Independent_variable","Degree","Path"};
set Spans := {"-1_-1","0_0","0_2","0_36","10_10","11_11","11_13","12_12","12_13","13_13","14_14","14_15","14_35","15_15","15_35","16_16","16_35","17_17","18_18","19_19","19_20","19_23","1_1","20_20","21_21","22_22","23_23","24_24","24_35","25_25","25_35","26_26","26_35","27_27","27_31","27_35","28_28","29_29","2_2","30_30","31_31","32_32","32_35","33_33","33_35","34_34","35_35","36_36","3_3","3_36","4_35","4_4","5_35","5_5","6_6","7_7","8_13","8_8","9_10","9_13","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Taking_sides"]] binary;
var z1[Assignment["Ordinal_numbers"]] binary;
var z2[Assignment["Means"]] binary;
var z3[Assignment["Likelihood"]] binary;
var z4[Assignment["Locale"]] binary;
var z5[Assignment["Attempt"]] binary;
var z6[Assignment["Part_whole"]] binary;
var z7[Assignment["Political_locales"]] binary;
var z8[Assignment["Attempt_suasion"]] binary;
var z9[Assignment["Abandonment"]] binary;
var z10[Assignment["Health_response"]] binary;
var z11[Assignment["Artifact"]] binary;
var z12[Assignment["Suspiciousness"]] binary;
var z13[Assignment["Intentionally_act"]] binary;
var z14[Assignment["Weapon"]] binary;
var z15[Assignment["Expensiveness"]] binary;
var z16[Assignment["Locale"]] binary;
var z17[Assignment["Temporal_subregion"]] binary;
var z18[Assignment["Direction"]] binary;
param probabilities0[Assignment["Taking_sides"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Ordinal_numbers"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Means"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Likelihood"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Locale"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Attempt"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Part_whole"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Political_locales"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Attempt_suasion"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Abandonment"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Health_response"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Artifact"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Suspiciousness"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Intentionally_act"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Weapon"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Expensiveness"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Locale"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Temporal_subregion"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Direction"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Taking_sides"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Ordinal_numbers"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Means"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Likelihood"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Attempt"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Part_whole"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Attempt_suasion"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Abandonment"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Health_response"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Suspiciousness"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Expensiveness"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Temporal_subregion"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Direction"] : probabilities18[r,s] * z18[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 36};
set G[I] := <0> {"0_0","0_2","0_36"}, <1> {"0_2","0_36","1_1"}, <2> {"0_2","0_36","2_2"}, <3> {"0_36","3_3","3_36"}, <4> {"0_36","3_36","4_35","4_4"}, <5> {"0_36","3_36","4_35","5_35","5_5"}, <6> {"0_36","3_36","4_35","5_35","6_6"}, <7> {"0_36","3_36","4_35","5_35","7_7"}, <8> {"0_36","3_36","4_35","5_35","8_13","8_8"}, <9> {"0_36","3_36","4_35","5_35","8_13","9_10","9_13","9_9"}, <10> {"0_36","10_10","3_36","4_35","5_35","8_13","9_10","9_13"}, <11> {"0_36","11_11","11_13","3_36","4_35","5_35","8_13","9_13"}, <12> {"0_36","11_13","12_12","12_13","3_36","4_35","5_35","8_13","9_13"}, <13> {"0_36","11_13","12_13","13_13","3_36","4_35","5_35","8_13","9_13"}, <14> {"0_36","14_14","14_15","14_35","3_36","4_35","5_35"}, <15> {"0_36","14_15","14_35","15_15","15_35","3_36","4_35","5_35"}, <16> {"0_36","14_35","15_35","16_16","16_35","3_36","4_35","5_35"}, <17> {"0_36","14_35","15_35","16_35","17_17","3_36","4_35","5_35"}, <18> {"0_36","14_35","15_35","16_35","18_18","3_36","4_35","5_35"}, <19> {"0_36","14_35","15_35","16_35","19_19","19_20","19_23","3_36","4_35","5_35"}, <20> {"0_36","14_35","15_35","16_35","19_20","19_23","20_20","3_36","4_35","5_35"}, <21> {"0_36","14_35","15_35","16_35","19_23","21_21","3_36","4_35","5_35"}, <22> {"0_36","14_35","15_35","16_35","19_23","22_22","3_36","4_35","5_35"}, <23> {"0_36","14_35","15_35","16_35","19_23","23_23","3_36","4_35","5_35"}, <24> {"0_36","14_35","15_35","16_35","24_24","24_35","3_36","4_35","5_35"}, <25> {"0_36","14_35","15_35","16_35","24_35","25_25","25_35","3_36","4_35","5_35"}, <26> {"0_36","14_35","15_35","16_35","24_35","25_35","26_26","26_35","3_36","4_35","5_35"}, <27> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_27","27_31","27_35","3_36","4_35","5_35"}, <28> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_31","27_35","28_28","3_36","4_35","5_35"}, <29> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_31","27_35","29_29","3_36","4_35","5_35"}, <30> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_31","27_35","30_30","3_36","4_35","5_35"}, <31> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_31","27_35","31_31","3_36","4_35","5_35"}, <32> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_35","32_32","32_35","3_36","4_35","5_35"}, <33> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_35","32_35","33_33","33_35","3_36","4_35","5_35"}, <34> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_35","32_35","33_35","34_34","3_36","4_35","5_35"}, <35> {"0_36","14_35","15_35","16_35","24_35","25_35","26_35","27_35","32_35","33_35","35_35","3_36","4_35","5_35"}, <36> {"0_36","36_36","3_36"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Taking_sides"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Ordinal_numbers"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Means"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Likelihood"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Attempt"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Part_whole"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Attempt_suasion"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Abandonment"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Health_response"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Suspiciousness"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Expensiveness"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Direction"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Taking_sides"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Ordinal_numbers"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Means"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Likelihood"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Locale"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Attempt"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Part_whole"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Attempt_suasion"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Abandonment"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Health_response"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Artifact"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Suspiciousness"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Weapon"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Expensiveness"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Locale"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Direction"] do sum <s> in Spans : z18[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Basis_of_order","Starting_point">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc12 := {<"Entity","Social_actor">,<"Behavior","Entity">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
set Exc15 := {<"Goods","Intended_event">};
subto exclusion15: forall <ri,rj> in Exc15 do z15[ri,"-1_-1"] + z15[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

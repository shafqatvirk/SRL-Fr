# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Exchange","Expensiveness","Exchange","Locale","Being_located","Part_orientational","Social_connection","Expensiveness","Manufacturing","Locale","Natural_features","Locale","Categorization","Ordinal_numbers","Political_locales","Project","Political_locales"};
set Roles[Frames] :=  <"Exchange"> {"Theme_2","Place","Period_of_iterations","Manner","Exchangers","Time","Themes","Frequency","Exchanger_2","Exchanger_1","Theme_1"}, <"Expensiveness"> {"Asset","Goods","Rate","Origin","Intended_event","Degree","Payer"}, <"Exchange"> {"Theme_2","Place","Period_of_iterations","Manner","Exchangers","Time","Themes","Frequency","Exchanger_2","Exchanger_1","Theme_1"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Being_located"> {"Cotheme","Location","Theme","Time","Place"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Social_connection"> {"Type","Degree","Connection","Individual2","Individual1"}, <"Expensiveness"> {"Asset","Goods","Rate","Origin","Intended_event","Degree","Payer"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Categorization"> {"Cognizer","Item","Manner","Explanation","Criteria","Time","Circumstances","Category","Concessive"}, <"Ordinal_numbers"> {"Type","Item","Starting_point","Comparison_set","Basis_of_order"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Project"> {"Salient_entity","Duration","Agent","Goal","Manner","Name","Project","Field","Descriptor","Activity"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"};
set Spans := {"-1_-1","0_0","0_46","0_5","10_10","11_11","11_12","12_12","13_13","14_14","14_45","15_15","15_45","16_16","16_19","16_45","17_17","18_18","19_19","1_1","20_20","20_45","21_21","21_23","21_26","21_45","22_22","23_23","24_24","25_25","26_26","27_27","27_45","28_28","28_45","29_29","29_45","2_2","30_30","30_45","31_31","31_45","32_32","32_33","33_33","34_34","34_45","35_35","35_45","36_36","37_37","38_38","39_39","3_3","40_40","40_42","41_41","41_42","42_42","43_43","43_45","44_44","44_45","45_45","46_46","4_4","5_5","6_46","6_6","7_45","7_7","8_45","8_8","9_10","9_12","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Exchange"]] binary;
var z1[Assignment["Expensiveness"]] binary;
var z2[Assignment["Exchange"]] binary;
var z3[Assignment["Locale"]] binary;
var z4[Assignment["Being_located"]] binary;
var z5[Assignment["Part_orientational"]] binary;
var z6[Assignment["Social_connection"]] binary;
var z7[Assignment["Expensiveness"]] binary;
var z8[Assignment["Manufacturing"]] binary;
var z9[Assignment["Locale"]] binary;
var z10[Assignment["Natural_features"]] binary;
var z11[Assignment["Locale"]] binary;
var z12[Assignment["Categorization"]] binary;
var z13[Assignment["Ordinal_numbers"]] binary;
var z14[Assignment["Political_locales"]] binary;
var z15[Assignment["Project"]] binary;
var z16[Assignment["Political_locales"]] binary;
param probabilities0[Assignment["Exchange"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Expensiveness"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Exchange"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locale"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Being_located"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Part_orientational"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Social_connection"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Expensiveness"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Manufacturing"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Locale"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Natural_features"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Locale"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Categorization"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Ordinal_numbers"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Political_locales"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Project"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Political_locales"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Exchange"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Expensiveness"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Exchange"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Being_located"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Social_connection"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Expensiveness"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Categorization"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Ordinal_numbers"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Project"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities16[r,s] * z16[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 46};
set G[I] := <0> {"0_0","0_46","0_5"}, <1> {"0_46","0_5","1_1"}, <2> {"0_46","0_5","2_2"}, <3> {"0_46","0_5","3_3"}, <4> {"0_46","0_5","4_4"}, <5> {"0_46","0_5","5_5"}, <6> {"0_46","6_46","6_6"}, <7> {"0_46","6_46","7_45","7_7"}, <8> {"0_46","6_46","7_45","8_45","8_8"}, <9> {"0_46","6_46","7_45","8_45","9_10","9_12","9_9"}, <10> {"0_46","10_10","6_46","7_45","8_45","9_10","9_12"}, <11> {"0_46","11_11","11_12","6_46","7_45","8_45","9_12"}, <12> {"0_46","11_12","12_12","6_46","7_45","8_45","9_12"}, <13> {"0_46","13_13","6_46","7_45","8_45"}, <14> {"0_46","14_14","14_45","6_46","7_45","8_45"}, <15> {"0_46","14_45","15_15","15_45","6_46","7_45","8_45"}, <16> {"0_46","14_45","15_45","16_16","16_19","16_45","6_46","7_45","8_45"}, <17> {"0_46","14_45","15_45","16_19","16_45","17_17","6_46","7_45","8_45"}, <18> {"0_46","14_45","15_45","16_19","16_45","18_18","6_46","7_45","8_45"}, <19> {"0_46","14_45","15_45","16_19","16_45","19_19","6_46","7_45","8_45"}, <20> {"0_46","14_45","15_45","16_45","20_20","20_45","6_46","7_45","8_45"}, <21> {"0_46","14_45","15_45","16_45","20_45","21_21","21_23","21_26","21_45","6_46","7_45","8_45"}, <22> {"0_46","14_45","15_45","16_45","20_45","21_23","21_26","21_45","22_22","6_46","7_45","8_45"}, <23> {"0_46","14_45","15_45","16_45","20_45","21_23","21_26","21_45","23_23","6_46","7_45","8_45"}, <24> {"0_46","14_45","15_45","16_45","20_45","21_26","21_45","24_24","6_46","7_45","8_45"}, <25> {"0_46","14_45","15_45","16_45","20_45","21_26","21_45","25_25","6_46","7_45","8_45"}, <26> {"0_46","14_45","15_45","16_45","20_45","21_26","21_45","26_26","6_46","7_45","8_45"}, <27> {"0_46","14_45","15_45","16_45","20_45","21_45","27_27","27_45","6_46","7_45","8_45"}, <28> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_28","28_45","6_46","7_45","8_45"}, <29> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_29","29_45","6_46","7_45","8_45"}, <30> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_30","30_45","6_46","7_45","8_45"}, <31> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_31","31_45","6_46","7_45","8_45"}, <32> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","32_32","32_33","6_46","7_45","8_45"}, <33> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","32_33","33_33","6_46","7_45","8_45"}, <34> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_34","34_45","6_46","7_45","8_45"}, <35> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_35","35_45","6_46","7_45","8_45"}, <36> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","36_36","6_46","7_45","8_45"}, <37> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","37_37","6_46","7_45","8_45"}, <38> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","38_38","6_46","7_45","8_45"}, <39> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","39_39","6_46","7_45","8_45"}, <40> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","40_40","40_42","6_46","7_45","8_45"}, <41> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","40_42","41_41","41_42","6_46","7_45","8_45"}, <42> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","40_42","41_42","42_42","6_46","7_45","8_45"}, <43> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","43_43","43_45","6_46","7_45","8_45"}, <44> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","43_45","44_44","44_45","6_46","7_45","8_45"}, <45> {"0_46","14_45","15_45","16_45","20_45","21_45","27_45","28_45","29_45","30_45","31_45","34_45","35_45","43_45","44_45","45_45","6_46","7_45","8_45"}, <46> {"0_46","46_46","6_46"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Exchange"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Expensiveness"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Exchange"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Being_located"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Social_connection"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Expensiveness"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Categorization"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Ordinal_numbers"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Project"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Exchange"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Expensiveness"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Exchange"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locale"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Being_located"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Social_connection"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Expensiveness"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Locale"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Locale"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Categorization"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Ordinal_numbers"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Project"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z16[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Theme_2","Themes">,<"Theme_1","Themes">,<"Exchanger_2","Exchangers">,<"Exchanger_1","Exchangers">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc1 := {<"Goods","Intended_event">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc2 := {<"Theme_2","Themes">,<"Theme_1","Themes">,<"Exchanger_2","Exchangers">,<"Exchanger_1","Exchangers">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc7 := {<"Goods","Intended_event">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc13 := {<"Basis_of_order","Starting_point">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
set Exc15 := {<"Activity","Salient_entity">};
subto exclusion15: forall <ri,rj> in Exc15 do z15[ri,"-1_-1"] + z15[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr0 := {<"Exchanger_1","Exchanger_2">,<"Theme_1","Theme_2">,<"Exchangers","Themes">};
subto require0: forall <ri,rj> in Reqr0 do z0[ri,"-1_-1"] - z0[rj,"-1_-1"] == 0;
set Reqr2 := {<"Exchanger_1","Exchanger_2">,<"Theme_1","Theme_2">,<"Exchangers","Themes">};
subto require2: forall <ri,rj> in Reqr2 do z2[ri,"-1_-1"] - z2[rj,"-1_-1"] == 0;
set Reqr6 := {<"Individual1","Individual2">};
subto require6: forall <ri,rj> in Reqr6 do z6[ri,"-1_-1"] - z6[rj,"-1_-1"] == 0;

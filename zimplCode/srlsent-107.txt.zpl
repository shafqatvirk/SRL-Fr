# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Stimulus_focus","Punctual_perception","Dimension","Kinship","Possession","Locale_by_use","Self_motion","Natural_features","Part_orientational","Part_orientational","People","Roadways","Roadways"};
set Roles[Frames] :=  <"Stimulus_focus"> {"Stimulus","Parameter","Circumstances","Property","Experiencer","Comparison_set","Degree"}, <"Punctual_perception"> {"Phenomenon","Perceiver"}, <"Dimension"> {"Object","Domain","Measurement","Dimension","Location"}, <"Kinship"> {"Relatives","Descriptor","Ego","Degree","Alter"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Self_motion"> {"Speed","Duration","Area","Purpose","Cotheme","Means","Depictive","Coordinated_event","Manner","Path","Result","Distance","Self_mover","Time","Source","External_cause","Place","Goal","Reason","Direction","Concessive","Internal_cause","Path_shape"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"};
set Spans := {"-1_-1","0_0","0_27","0_7","10_10","10_11","11_11","12_12","13_13","13_26","14_14","14_18","14_26","15_15","16_16","17_17","18_18","19_19","1_1","1_3","1_7","20_20","20_22","21_21","22_22","23_23","24_24","25_25","26_26","27_27","2_2","3_3","4_4","4_7","5_5","5_7","6_6","7_7","8_8","9_10","9_11","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Stimulus_focus"]] binary;
var z1[Assignment["Punctual_perception"]] binary;
var z2[Assignment["Dimension"]] binary;
var z3[Assignment["Kinship"]] binary;
var z4[Assignment["Possession"]] binary;
var z5[Assignment["Locale_by_use"]] binary;
var z6[Assignment["Self_motion"]] binary;
var z7[Assignment["Natural_features"]] binary;
var z8[Assignment["Part_orientational"]] binary;
var z9[Assignment["Part_orientational"]] binary;
var z10[Assignment["People"]] binary;
var z11[Assignment["Roadways"]] binary;
var z12[Assignment["Roadways"]] binary;
param probabilities0[Assignment["Stimulus_focus"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Punctual_perception"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Dimension"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Kinship"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Possession"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locale_by_use"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Self_motion"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Natural_features"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Part_orientational"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Part_orientational"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["People"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Roadways"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Roadways"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Stimulus_focus"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Punctual_perception"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Dimension"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Kinship"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Self_motion"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["People"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities12[r,s] * z12[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 27};
set G[I] := <0> {"0_0","0_27","0_7"}, <1> {"0_27","0_7","1_1","1_3","1_7"}, <2> {"0_27","0_7","1_3","1_7","2_2"}, <3> {"0_27","0_7","1_3","1_7","3_3"}, <4> {"0_27","0_7","1_7","4_4","4_7"}, <5> {"0_27","0_7","1_7","4_7","5_5","5_7"}, <6> {"0_27","0_7","1_7","4_7","5_7","6_6"}, <7> {"0_27","0_7","1_7","4_7","5_7","7_7"}, <8> {"0_27","8_8"}, <9> {"0_27","9_10","9_11","9_9"}, <10> {"0_27","10_10","10_11","9_10","9_11"}, <11> {"0_27","10_11","11_11","9_11"}, <12> {"0_27","12_12"}, <13> {"0_27","13_13","13_26"}, <14> {"0_27","13_26","14_14","14_18","14_26"}, <15> {"0_27","13_26","14_18","14_26","15_15"}, <16> {"0_27","13_26","14_18","14_26","16_16"}, <17> {"0_27","13_26","14_18","14_26","17_17"}, <18> {"0_27","13_26","14_18","14_26","18_18"}, <19> {"0_27","13_26","14_26","19_19"}, <20> {"0_27","13_26","14_26","20_20","20_22"}, <21> {"0_27","13_26","14_26","20_22","21_21"}, <22> {"0_27","13_26","14_26","20_22","22_22"}, <23> {"0_27","13_26","14_26","23_23"}, <24> {"0_27","13_26","14_26","24_24"}, <25> {"0_27","13_26","14_26","25_25"}, <26> {"0_27","13_26","14_26","26_26"}, <27> {"0_27","27_27"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Stimulus_focus"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Punctual_perception"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Dimension"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Kinship"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Self_motion"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Stimulus_focus"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Punctual_perception"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Dimension"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Kinship"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Possession"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Self_motion"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["People"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Roadways"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Roadways"] do sum <s> in Spans : z12[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Ego","Relatives">,<"Alter","Relatives">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc6 := {<"Area","Direction">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr3 := {<"Alter","Ego">};
subto require3: forall <ri,rj> in Reqr3 do z3[ri,"-1_-1"] - z3[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Process_continue","Causation","Locative_relation","Quantity","Importance","Importance","Killing","Cardinal_numbers","Instance","Emotion_directed","Relational_quantity","Killing"};
set Roles[Frames] :=  <"Process_continue"> {"Duration","Place","Manner","Time","Circumstances","Depictive","Event","Concessive"}, <"Causation"> {"Circumstances","Time","Actor","Place","Frequency","Means","Effect","Cause","Reason","Affected","Manner","Concessive","Explanation"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Killing"> {"Purpose","Means","Depictive","Circumstances","Manner","Result","Explanation","Instrument","Cause","Time","Killer","Beneficiary","Degree","Place","Frequency","Reason","Period_of_iterations","Victim"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Instance"> {"Type","Instance","Instance_Prop"}, <"Emotion_directed"> {"Topic","Circumstances","Parameter","Degree","Experiencer","Event","Expressor","Reason","Empathy_target","Manner","State","Stimulus","Frequency"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Killing"> {"Purpose","Means","Depictive","Circumstances","Manner","Result","Explanation","Instrument","Cause","Time","Killer","Beneficiary","Degree","Place","Frequency","Reason","Period_of_iterations","Victim"};
set Spans := {"-1_-1","0_0","0_10","0_35","10_10","11_11","12_12","13_13","14_14","15_15","15_16","15_25","16_16","16_25","17_17","17_20","17_25","18_18","19_19","1_1","1_10","20_20","21_21","21_25","22_22","22_25","23_23","24_24","25_25","26_26","27_27","27_34","28_28","28_34","29_29","29_34","2_2","30_30","30_31","30_34","31_31","32_32","32_34","33_33","33_34","34_34","35_35","3_10","3_3","4_10","4_4","4_5","5_5","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Process_continue"]] binary;
var z1[Assignment["Causation"]] binary;
var z2[Assignment["Locative_relation"]] binary;
var z3[Assignment["Quantity"]] binary;
var z4[Assignment["Importance"]] binary;
var z5[Assignment["Importance"]] binary;
var z6[Assignment["Killing"]] binary;
var z7[Assignment["Cardinal_numbers"]] binary;
var z8[Assignment["Instance"]] binary;
var z9[Assignment["Emotion_directed"]] binary;
var z10[Assignment["Relational_quantity"]] binary;
var z11[Assignment["Killing"]] binary;
param probabilities0[Assignment["Process_continue"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Causation"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Locative_relation"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Quantity"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Importance"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Importance"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Killing"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Cardinal_numbers"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Instance"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Emotion_directed"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Relational_quantity"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Killing"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Process_continue"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Causation"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Killing"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Instance"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Emotion_directed"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Killing"] : probabilities11[r,s] * z11[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 35};
set G[I] := <0> {"0_0","0_10","0_35"}, <1> {"0_10","0_35","1_1","1_10"}, <2> {"0_10","0_35","1_10","2_2"}, <3> {"0_10","0_35","1_10","3_10","3_3"}, <4> {"0_10","0_35","1_10","3_10","4_10","4_4","4_5"}, <5> {"0_10","0_35","1_10","3_10","4_10","4_5","5_5"}, <6> {"0_10","0_35","1_10","3_10","4_10","6_6"}, <7> {"0_10","0_35","1_10","3_10","4_10","7_7"}, <8> {"0_10","0_35","1_10","3_10","4_10","8_8"}, <9> {"0_10","0_35","1_10","3_10","4_10","9_9"}, <10> {"0_10","0_35","10_10","1_10","3_10","4_10"}, <11> {"0_35","11_11"}, <12> {"0_35","12_12"}, <13> {"0_35","13_13"}, <14> {"0_35","14_14"}, <15> {"0_35","15_15","15_16","15_25"}, <16> {"0_35","15_16","15_25","16_16","16_25"}, <17> {"0_35","15_25","16_25","17_17","17_20","17_25"}, <18> {"0_35","15_25","16_25","17_20","17_25","18_18"}, <19> {"0_35","15_25","16_25","17_20","17_25","19_19"}, <20> {"0_35","15_25","16_25","17_20","17_25","20_20"}, <21> {"0_35","15_25","16_25","17_25","21_21","21_25"}, <22> {"0_35","15_25","16_25","17_25","21_25","22_22","22_25"}, <23> {"0_35","15_25","16_25","17_25","21_25","22_25","23_23"}, <24> {"0_35","15_25","16_25","17_25","21_25","22_25","24_24"}, <25> {"0_35","15_25","16_25","17_25","21_25","22_25","25_25"}, <26> {"0_35","26_26"}, <27> {"0_35","27_27","27_34"}, <28> {"0_35","27_34","28_28","28_34"}, <29> {"0_35","27_34","28_34","29_29","29_34"}, <30> {"0_35","27_34","28_34","29_34","30_30","30_31","30_34"}, <31> {"0_35","27_34","28_34","29_34","30_31","30_34","31_31"}, <32> {"0_35","27_34","28_34","29_34","30_34","32_32","32_34"}, <33> {"0_35","27_34","28_34","29_34","30_34","32_34","33_33","33_34"}, <34> {"0_35","27_34","28_34","29_34","30_34","32_34","33_34","34_34"}, <35> {"0_35","35_35"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Process_continue"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Causation"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Killing"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Instance"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Emotion_directed"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Killing"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Process_continue"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Causation"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Quantity"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Importance"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Importance"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Killing"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Instance"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Emotion_directed"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Killing"] do sum <s> in Spans : z11[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc3 := {<"Individuals","Mass">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc4 := {<"Field","Interested_party">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
set Exc5 := {<"Field","Interested_party">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc6 := {<"Cause","Killer">,<"Cause","Means">,<"Cause","Instrument">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc9 := {<"Event","Experiencer">,<"Experiencer","Expressor">,<"Event","Expressor">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc11 := {<"Cause","Killer">,<"Cause","Means">,<"Cause","Instrument">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

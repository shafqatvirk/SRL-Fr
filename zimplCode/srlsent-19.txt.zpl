# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Containing","Natural_features","Part_orientational","Origin","Relational_natural_features","Activity_ongoing","Be_in_control","Importance","Natural_features","Roadways","Locative_relation","Locale","Exchange","Process_continue"};
set Roles[Frames] :=  <"Containing"> {"Container","Time","Contents"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Origin"> {"Entity","Origin"}, <"Relational_natural_features"> {"Focal_feature","Relative_location","Landmark_feature","Container_possessor"}, <"Activity_ongoing"> {"Purpose","Circumstances","Depictive","Activity","Event_description","Duration","Manner","Time","Explanation","Means","Subevent","Agent"}, <"Be_in_control"> {"Time","Dependent_entity","Controlling_entity"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Exchange"> {"Theme_2","Place","Period_of_iterations","Manner","Exchangers","Time","Themes","Frequency","Exchanger_2","Exchanger_1","Theme_1"}, <"Process_continue"> {"Duration","Place","Manner","Time","Circumstances","Depictive","Event","Concessive"};
set Spans := {"-1_-1","0_0","0_31","0_9","10_10","11_11","12_12","12_13","12_14","12_20","13_13","14_14","14_20","15_15","15_20","16_16","16_20","17_17","17_20","18_18","19_19","1_1","1_9","20_20","21_21","22_22","22_25","23_23","23_25","24_24","24_25","25_25","26_26","27_27","28_28","28_30","29_29","29_30","2_2","30_30","31_31","3_3","3_9","4_4","4_9","5_5","5_9","6_6","6_9","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Containing"]] binary;
var z1[Assignment["Natural_features"]] binary;
var z2[Assignment["Part_orientational"]] binary;
var z3[Assignment["Origin"]] binary;
var z4[Assignment["Relational_natural_features"]] binary;
var z5[Assignment["Activity_ongoing"]] binary;
var z6[Assignment["Be_in_control"]] binary;
var z7[Assignment["Importance"]] binary;
var z8[Assignment["Natural_features"]] binary;
var z9[Assignment["Roadways"]] binary;
var z10[Assignment["Locative_relation"]] binary;
var z11[Assignment["Locale"]] binary;
var z12[Assignment["Exchange"]] binary;
var z13[Assignment["Process_continue"]] binary;
param probabilities0[Assignment["Containing"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Natural_features"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Part_orientational"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Origin"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Relational_natural_features"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Activity_ongoing"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Be_in_control"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Importance"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Natural_features"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Roadways"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Locative_relation"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Locale"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Exchange"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Process_continue"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Containing"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Part_orientational"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Relational_natural_features"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Activity_ongoing"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Be_in_control"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Exchange"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Process_continue"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 31};
set G[I] := <0> {"0_0","0_31","0_9"}, <1> {"0_31","0_9","1_1","1_9"}, <2> {"0_31","0_9","1_9","2_2"}, <3> {"0_31","0_9","1_9","3_3","3_9"}, <4> {"0_31","0_9","1_9","3_9","4_4","4_9"}, <5> {"0_31","0_9","1_9","3_9","4_9","5_5","5_9"}, <6> {"0_31","0_9","1_9","3_9","4_9","5_9","6_6","6_9"}, <7> {"0_31","0_9","1_9","3_9","4_9","5_9","6_9","7_7"}, <8> {"0_31","0_9","1_9","3_9","4_9","5_9","6_9","8_8"}, <9> {"0_31","0_9","1_9","3_9","4_9","5_9","6_9","9_9"}, <10> {"0_31","10_10"}, <11> {"0_31","11_11"}, <12> {"0_31","12_12","12_13","12_14","12_20"}, <13> {"0_31","12_13","12_14","12_20","13_13"}, <14> {"0_31","12_14","12_20","14_14","14_20"}, <15> {"0_31","12_20","14_20","15_15","15_20"}, <16> {"0_31","12_20","14_20","15_20","16_16","16_20"}, <17> {"0_31","12_20","14_20","15_20","16_20","17_17","17_20"}, <18> {"0_31","12_20","14_20","15_20","16_20","17_20","18_18"}, <19> {"0_31","12_20","14_20","15_20","16_20","17_20","19_19"}, <20> {"0_31","12_20","14_20","15_20","16_20","17_20","20_20"}, <21> {"0_31","21_21"}, <22> {"0_31","22_22","22_25"}, <23> {"0_31","22_25","23_23","23_25"}, <24> {"0_31","22_25","23_25","24_24","24_25"}, <25> {"0_31","22_25","23_25","24_25","25_25"}, <26> {"0_31","26_26"}, <27> {"0_31","27_27"}, <28> {"0_31","28_28","28_30"}, <29> {"0_31","28_30","29_29","29_30"}, <30> {"0_31","28_30","29_30","30_30"}, <31> {"0_31","31_31"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Containing"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Relational_natural_features"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Activity_ongoing"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Be_in_control"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Exchange"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Process_continue"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Containing"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Origin"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Relational_natural_features"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Activity_ongoing"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Be_in_control"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Importance"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Roadways"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Locale"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Exchange"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Process_continue"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc7 := {<"Field","Interested_party">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc10 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion10: forall <ri,rj> in Exc10 do z10[ri,"-1_-1"] + z10[rj,"-1_-1"] >= 1;
set Exc12 := {<"Theme_2","Themes">,<"Theme_1","Themes">,<"Exchanger_2","Exchangers">,<"Exchanger_1","Exchangers">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr12 := {<"Exchanger_1","Exchanger_2">,<"Theme_1","Theme_2">,<"Exchangers","Themes">};
subto require12: forall <ri,rj> in Reqr12 do z12[ri,"-1_-1"] - z12[rj,"-1_-1"] == 0;

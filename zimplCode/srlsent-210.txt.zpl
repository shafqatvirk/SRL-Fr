# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Being_obligated","Correctness","Ranked_expectation","Ranked_expectation","Used_up","Quantity","Money","People","Awareness","Motion","Taking_sides","Judicial_body","Quantity","People_by_vocation","Causation","Path_shape","Locative_relation","Expensiveness","Success_or_failure","Awareness","Money","Cause_to_continue","Intentionally_act"};
set Roles[Frames] :=  <"Being_obligated"> {"Condition","Responsible_party","Place","Frequency","Duty"}, <"Correctness"> {"Domain","Result","Circumstances","Parameter","Time","Frequency","Degree","Communicative_act","Source","Information","Topic","Epistemic_stance","Manner","Medium"}, <"Ranked_expectation"> {"Entity"}, <"Ranked_expectation"> {"Entity"}, <"Used_up"> {"Explanation","Degree","Resource","Excess"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Money"> {"Possessor","Type","Use","Money","Time_of_creation","Origin"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Motion"> {"Speed","Duration","Area","Theme","Distance","Depictive","Manner","Result","Direction","Time","Source","Containing_event","Place","Goal","Purpose","Path","Carrier","Path_shape"}, <"Taking_sides"> {"Time","Descriptor","Concessive","Place","Degree","Cognizer","Particular_iteration","Issue","Side","Manner","Action","Explanation"}, <"Judicial_body"> {"Rank","Judges","Judicial_body","Jurisdiction","Place"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"People_by_vocation"> {"Type","Origin","Contract_basis","Ethnicity","Employer","Place_of_employment","Person","Descriptor","Rank","Compensation","Persistent_characteristic"}, <"Causation"> {"Circumstances","Time","Actor","Place","Frequency","Means","Effect","Cause","Reason","Affected","Manner","Concessive","Explanation"}, <"Path_shape"> {"Purpose","Result","Depictive","Goal","Place","Area","Degree","Direction","Means","Source","Distance","Path","Road","Path_shape","Manner","Speed"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Expensiveness"> {"Asset","Goods","Rate","Origin","Intended_event","Degree","Payer"}, <"Success_or_failure"> {"Place","Agent","Goal","Degree","Re_enconding","Depictive","Explanation","Time","Circumstances","Means","Role"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Money"> {"Possessor","Type","Use","Money","Time_of_creation","Origin"}, <"Cause_to_continue"> {"Duration","Agent","Instrument","State","Time","Process","Purpose","Cause"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"};
set Spans := {"-1_-1","0_0","0_17","0_33","0_53","10_10","11_11","11_17","12_12","12_14","13_13","14_14","15_15","15_17","16_16","16_17","17_17","18_18","19_19","1_1","20_20","21_21","22_22","22_33","23_23","23_29","24_24","24_29","25_25","25_29","26_26","27_27","28_28","29_29","2_17","2_2","30_30","31_31","31_33","32_32","32_33","33_33","34_34","35_35","36_36","37_37","37_52","38_38","38_39","39_39","3_17","3_3","40_40","40_41","41_41","42_42","43_43","43_47","44_44","44_47","45_45","46_46","46_47","47_47","48_48","49_49","49_50","49_52","4_17","4_4","50_50","50_52","51_51","51_52","52_52","53_53","5_17","5_5","6_6","6_9","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Being_obligated"]] binary;
var z1[Assignment["Correctness"]] binary;
var z2[Assignment["Ranked_expectation"]] binary;
var z3[Assignment["Ranked_expectation"]] binary;
var z4[Assignment["Used_up"]] binary;
var z5[Assignment["Quantity"]] binary;
var z6[Assignment["Money"]] binary;
var z7[Assignment["People"]] binary;
var z8[Assignment["Awareness"]] binary;
var z9[Assignment["Motion"]] binary;
var z10[Assignment["Taking_sides"]] binary;
var z11[Assignment["Judicial_body"]] binary;
var z12[Assignment["Quantity"]] binary;
var z13[Assignment["People_by_vocation"]] binary;
var z14[Assignment["Causation"]] binary;
var z15[Assignment["Path_shape"]] binary;
var z16[Assignment["Locative_relation"]] binary;
var z17[Assignment["Expensiveness"]] binary;
var z18[Assignment["Success_or_failure"]] binary;
var z19[Assignment["Awareness"]] binary;
var z20[Assignment["Money"]] binary;
var z21[Assignment["Cause_to_continue"]] binary;
var z22[Assignment["Intentionally_act"]] binary;
param probabilities0[Assignment["Being_obligated"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Correctness"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Ranked_expectation"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Ranked_expectation"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Used_up"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Quantity"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Money"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["People"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Awareness"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Motion"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Taking_sides"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Judicial_body"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Quantity"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["People_by_vocation"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Causation"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Path_shape"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Locative_relation"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Expensiveness"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Success_or_failure"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Awareness"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Money"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Cause_to_continue"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Intentionally_act"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Being_obligated"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Correctness"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Ranked_expectation"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Ranked_expectation"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Used_up"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Money"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["People"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Motion"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Taking_sides"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Judicial_body"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["People_by_vocation"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Causation"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Path_shape"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Expensiveness"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Success_or_failure"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Money"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Cause_to_continue"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities22[r,s] * z22[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 53};
set G[I] := <0> {"0_0","0_17","0_33","0_53"}, <1> {"0_17","0_33","0_53","1_1"}, <2> {"0_17","0_33","0_53","2_17","2_2"}, <3> {"0_17","0_33","0_53","2_17","3_17","3_3"}, <4> {"0_17","0_33","0_53","2_17","3_17","4_17","4_4"}, <5> {"0_17","0_33","0_53","2_17","3_17","4_17","5_17","5_5"}, <6> {"0_17","0_33","0_53","2_17","3_17","4_17","5_17","6_6","6_9"}, <7> {"0_17","0_33","0_53","2_17","3_17","4_17","5_17","6_9","7_7"}, <8> {"0_17","0_33","0_53","2_17","3_17","4_17","5_17","6_9","8_8"}, <9> {"0_17","0_33","0_53","2_17","3_17","4_17","5_17","6_9","9_9"}, <10> {"0_17","0_33","0_53","10_10","2_17","3_17","4_17","5_17"}, <11> {"0_17","0_33","0_53","11_11","11_17","2_17","3_17","4_17","5_17"}, <12> {"0_17","0_33","0_53","11_17","12_12","12_14","2_17","3_17","4_17","5_17"}, <13> {"0_17","0_33","0_53","11_17","12_14","13_13","2_17","3_17","4_17","5_17"}, <14> {"0_17","0_33","0_53","11_17","12_14","14_14","2_17","3_17","4_17","5_17"}, <15> {"0_17","0_33","0_53","11_17","15_15","15_17","2_17","3_17","4_17","5_17"}, <16> {"0_17","0_33","0_53","11_17","15_17","16_16","16_17","2_17","3_17","4_17","5_17"}, <17> {"0_17","0_33","0_53","11_17","15_17","16_17","17_17","2_17","3_17","4_17","5_17"}, <18> {"0_33","0_53","18_18"}, <19> {"0_33","0_53","19_19"}, <20> {"0_33","0_53","20_20"}, <21> {"0_33","0_53","21_21"}, <22> {"0_33","0_53","22_22","22_33"}, <23> {"0_33","0_53","22_33","23_23","23_29"}, <24> {"0_33","0_53","22_33","23_29","24_24","24_29"}, <25> {"0_33","0_53","22_33","23_29","24_29","25_25","25_29"}, <26> {"0_33","0_53","22_33","23_29","24_29","25_29","26_26"}, <27> {"0_33","0_53","22_33","23_29","24_29","25_29","27_27"}, <28> {"0_33","0_53","22_33","23_29","24_29","25_29","28_28"}, <29> {"0_33","0_53","22_33","23_29","24_29","25_29","29_29"}, <30> {"0_33","0_53","22_33","30_30"}, <31> {"0_33","0_53","22_33","31_31","31_33"}, <32> {"0_33","0_53","22_33","31_33","32_32","32_33"}, <33> {"0_33","0_53","22_33","31_33","32_33","33_33"}, <34> {"0_53","34_34"}, <35> {"0_53","35_35"}, <36> {"0_53","36_36"}, <37> {"0_53","37_37","37_52"}, <38> {"0_53","37_52","38_38","38_39"}, <39> {"0_53","37_52","38_39","39_39"}, <40> {"0_53","37_52","40_40","40_41"}, <41> {"0_53","37_52","40_41","41_41"}, <42> {"0_53","37_52","42_42"}, <43> {"0_53","37_52","43_43","43_47"}, <44> {"0_53","37_52","43_47","44_44","44_47"}, <45> {"0_53","37_52","43_47","44_47","45_45"}, <46> {"0_53","37_52","43_47","44_47","46_46","46_47"}, <47> {"0_53","37_52","43_47","44_47","46_47","47_47"}, <48> {"0_53","37_52","48_48"}, <49> {"0_53","37_52","49_49","49_50","49_52"}, <50> {"0_53","37_52","49_50","49_52","50_50","50_52"}, <51> {"0_53","37_52","49_52","50_52","51_51","51_52"}, <52> {"0_53","37_52","49_52","50_52","51_52","52_52"}, <53> {"0_53","53_53"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Being_obligated"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Correctness"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Ranked_expectation"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Ranked_expectation"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Used_up"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Money"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Motion"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Taking_sides"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Judicial_body"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["People_by_vocation"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Causation"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Path_shape"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Expensiveness"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Success_or_failure"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Money"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Cause_to_continue"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Being_obligated"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Correctness"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Ranked_expectation"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Ranked_expectation"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Used_up"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Quantity"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Money"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["People"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Awareness"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Motion"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Taking_sides"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Judicial_body"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Quantity"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["People_by_vocation"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Causation"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Path_shape"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Expensiveness"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Success_or_failure"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Awareness"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Money"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Cause_to_continue"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z22[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Source","Topic">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc5 := {<"Individuals","Mass">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc8 := {<"Cognizer","Expressor">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc9 := {<"Area","Direction">,<"Area","Distance">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc12 := {<"Individuals","Mass">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
set Exc15 := {<"Area","Direction">,<"Area","Goal">,<"Area","Path">,<"Area","Source">};
subto exclusion15: forall <ri,rj> in Exc15 do z15[ri,"-1_-1"] + z15[rj,"-1_-1"] >= 1;
set Exc16 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
set Exc17 := {<"Goods","Intended_event">};
subto exclusion17: forall <ri,rj> in Exc17 do z17[ri,"-1_-1"] + z17[rj,"-1_-1"] >= 1;
set Exc18 := {<"Goal","Role">};
subto exclusion18: forall <ri,rj> in Exc18 do z18[ri,"-1_-1"] + z18[rj,"-1_-1"] >= 1;
set Exc19 := {<"Cognizer","Expressor">};
subto exclusion19: forall <ri,rj> in Exc19 do z19[ri,"-1_-1"] + z19[rj,"-1_-1"] >= 1;
set Exc21 := {<"Agent","Cause">,<"Process","State">};
subto exclusion21: forall <ri,rj> in Exc21 do z21[ri,"-1_-1"] + z21[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Quantity","Quantity","Roadways","Gizmo","Intoxicants","Emotion_directed","Locale_by_use","Evaluative_comparison","Ride_vehicle","Performers_and_roles","Vehicle","Political_locales","Locale_by_use"};
set Roles[Frames] :=  <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Gizmo"> {"Descriptor","Power_source","Gizmo","Use","User"}, <"Intoxicants"> {"Country_of_origin","Type","Descriptor","Intoxicant"}, <"Emotion_directed"> {"Topic","Circumstances","Parameter","Degree","Experiencer","Event","Expressor","Reason","Empathy_target","Manner","State","Stimulus","Frequency"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Evaluative_comparison"> {"Attribute","Place","Degree","Standard_item","Profiled_item","Profiled_attribute","Comparison_set","Standard_attribute"}, <"Ride_vehicle"> {"Duration","Goal","Theme","Source","Path","Manner","Area","Time","Vehicle","Purpose","Cotheme"}, <"Performers_and_roles"> {"Type","Place","Performance","Performer1","Manner","Performer2","Time","Role","Medium","Performer","Event_description"}, <"Vehicle"> {"Itinerary","Possessor","Descriptor","Vehicle","Use"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_12","0_31","0_9","10_10","11_11","12_12","13_13","14_14","15_15","16_16","16_17","16_21","17_17","18_18","18_21","19_19","19_21","1_1","1_4","20_20","21_21","22_22","22_23","23_23","24_24","24_30","25_25","25_27","25_30","26_26","27_27","28_28","28_30","29_29","29_30","2_2","2_4","30_30","31_31","3_3","4_4","5_5","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Quantity"]] binary;
var z1[Assignment["Quantity"]] binary;
var z2[Assignment["Roadways"]] binary;
var z3[Assignment["Gizmo"]] binary;
var z4[Assignment["Intoxicants"]] binary;
var z5[Assignment["Emotion_directed"]] binary;
var z6[Assignment["Locale_by_use"]] binary;
var z7[Assignment["Evaluative_comparison"]] binary;
var z8[Assignment["Ride_vehicle"]] binary;
var z9[Assignment["Performers_and_roles"]] binary;
var z10[Assignment["Vehicle"]] binary;
var z11[Assignment["Political_locales"]] binary;
var z12[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Quantity"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Quantity"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Roadways"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Gizmo"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Intoxicants"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Emotion_directed"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locale_by_use"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Evaluative_comparison"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Ride_vehicle"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Performers_and_roles"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Vehicle"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Political_locales"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Locale_by_use"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Quantity"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Gizmo"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Intoxicants"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Emotion_directed"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Evaluative_comparison"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Ride_vehicle"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Performers_and_roles"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Vehicle"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities12[r,s] * z12[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 31};
set G[I] := <0> {"0_0","0_12","0_31","0_9"}, <1> {"0_12","0_31","0_9","1_1","1_4"}, <2> {"0_12","0_31","0_9","1_4","2_2","2_4"}, <3> {"0_12","0_31","0_9","1_4","2_4","3_3"}, <4> {"0_12","0_31","0_9","1_4","2_4","4_4"}, <5> {"0_12","0_31","0_9","5_5"}, <6> {"0_12","0_31","0_9","6_6"}, <7> {"0_12","0_31","0_9","7_7"}, <8> {"0_12","0_31","0_9","8_8"}, <9> {"0_12","0_31","0_9","9_9"}, <10> {"0_12","0_31","10_10"}, <11> {"0_12","0_31","11_11"}, <12> {"0_12","0_31","12_12"}, <13> {"0_31","13_13"}, <14> {"0_31","14_14"}, <15> {"0_31","15_15"}, <16> {"0_31","16_16","16_17","16_21"}, <17> {"0_31","16_17","16_21","17_17"}, <18> {"0_31","16_21","18_18","18_21"}, <19> {"0_31","16_21","18_21","19_19","19_21"}, <20> {"0_31","16_21","18_21","19_21","20_20"}, <21> {"0_31","16_21","18_21","19_21","21_21"}, <22> {"0_31","22_22","22_23"}, <23> {"0_31","22_23","23_23"}, <24> {"0_31","24_24","24_30"}, <25> {"0_31","24_30","25_25","25_27","25_30"}, <26> {"0_31","24_30","25_27","25_30","26_26"}, <27> {"0_31","24_30","25_27","25_30","27_27"}, <28> {"0_31","24_30","25_30","28_28","28_30"}, <29> {"0_31","24_30","25_30","28_30","29_29","29_30"}, <30> {"0_31","24_30","25_30","28_30","29_30","30_30"}, <31> {"0_31","31_31"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Gizmo"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Intoxicants"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Emotion_directed"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Evaluative_comparison"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Ride_vehicle"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Performers_and_roles"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Vehicle"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Quantity"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Quantity"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Roadways"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Gizmo"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Intoxicants"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Emotion_directed"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Evaluative_comparison"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Ride_vehicle"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Performers_and_roles"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Vehicle"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z12[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Individuals","Mass">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc1 := {<"Individuals","Mass">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc5 := {<"Event","Experiencer">,<"Experiencer","Expressor">,<"Event","Expressor">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc7 := {<"Attribute","Profiled_attribute">,<"Attribute","Standard_attribute">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc8 := {<"Area","Source">,<"Area","Goal">,<"Area","Path">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc9 := {<"Performer","Performer1">,<"Performer","Performer2">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr9 := {<"Performer1","Performer2">};
subto require9: forall <ri,rj> in Reqr9 do z9[ri,"-1_-1"] - z9[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Leadership","Medical_specialties","Buildings","Telling","Building_subparts","Relative_time","Calendric_unit","Appeal","Political_locales","Leadership","Removing","Buildings","Political_locales","Be_in_control","Statement","Political_locales","Being_at_risk","Buildings"};
set Roles[Frames] :=  <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Medical_specialties"> {"Specialty","Type"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Telling"> {"Iteration","Topic","Time","Descriptor","Place","Addressee","Epistemic_stance","Manner","Means","Message","Speaker","Medium"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"}, <"Relative_time"> {"Focal_participant","Interval","Degree","Focal_occasion","Landmark_occasion"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Appeal"> {"Grounds","Convict","Court","Decision","Representative"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Removing"> {"Direction","Subevent","Theme","Distance","Depictive","Circumstances","Agent","Manner","Means","Result","Explanation","Instrument","Cause","Time","Source","Degree","Place","Frequency","Goal","Vehicle","Particular_iteration","Path","Purpose"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Be_in_control"> {"Time","Dependent_entity","Controlling_entity"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Being_at_risk"> {"Domain","Time","Place","Degree","Situation","Asset","Harmful_event","Depictive","Duration","Dangerous_entity","Frequency","Explanation"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"};
set Spans := {"-1_-1","0_0","0_13","0_44","10_10","11_11","12_12","13_13","14_14","14_44","15_15","15_17","16_16","17_17","18_18","18_19","19_19","1_1","20_20","20_43","21_21","21_22","21_43","22_22","22_43","23_23","23_43","24_24","24_27","25_25","25_27","26_26","27_27","28_28","28_43","29_29","29_43","2_12","2_2","30_30","30_31","31_31","32_32","32_34","33_33","33_34","34_34","35_35","36_36","36_43","37_37","37_39","37_42","37_43","38_38","39_39","3_12","3_3","40_40","41_41","42_42","43_43","44_44","4_4","5_5","5_6","6_6","7_12","7_7","8_12","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Leadership"]] binary;
var z1[Assignment["Medical_specialties"]] binary;
var z2[Assignment["Buildings"]] binary;
var z3[Assignment["Telling"]] binary;
var z4[Assignment["Building_subparts"]] binary;
var z5[Assignment["Relative_time"]] binary;
var z6[Assignment["Calendric_unit"]] binary;
var z7[Assignment["Appeal"]] binary;
var z8[Assignment["Political_locales"]] binary;
var z9[Assignment["Leadership"]] binary;
var z10[Assignment["Removing"]] binary;
var z11[Assignment["Buildings"]] binary;
var z12[Assignment["Political_locales"]] binary;
var z13[Assignment["Be_in_control"]] binary;
var z14[Assignment["Statement"]] binary;
var z15[Assignment["Political_locales"]] binary;
var z16[Assignment["Being_at_risk"]] binary;
var z17[Assignment["Buildings"]] binary;
param probabilities0[Assignment["Leadership"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Medical_specialties"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Buildings"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Telling"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Building_subparts"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Relative_time"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Calendric_unit"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Appeal"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Political_locales"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Leadership"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Removing"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Buildings"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Political_locales"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Be_in_control"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Statement"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Political_locales"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Being_at_risk"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Buildings"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Leadership"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Medical_specialties"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Telling"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Relative_time"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Appeal"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Removing"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Be_in_control"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Being_at_risk"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities17[r,s] * z17[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 44};
set G[I] := <0> {"0_0","0_13","0_44"}, <1> {"0_13","0_44","1_1"}, <2> {"0_13","0_44","2_12","2_2"}, <3> {"0_13","0_44","2_12","3_12","3_3"}, <4> {"0_13","0_44","2_12","3_12","4_4"}, <5> {"0_13","0_44","2_12","3_12","5_5","5_6"}, <6> {"0_13","0_44","2_12","3_12","5_6","6_6"}, <7> {"0_13","0_44","2_12","3_12","7_12","7_7"}, <8> {"0_13","0_44","2_12","3_12","7_12","8_12","8_8","8_9"}, <9> {"0_13","0_44","2_12","3_12","7_12","8_12","8_9","9_9"}, <10> {"0_13","0_44","10_10","2_12","3_12","7_12","8_12"}, <11> {"0_13","0_44","11_11","2_12","3_12","7_12","8_12"}, <12> {"0_13","0_44","12_12","2_12","3_12","7_12","8_12"}, <13> {"0_13","0_44","13_13"}, <14> {"0_44","14_14","14_44"}, <15> {"0_44","14_44","15_15","15_17"}, <16> {"0_44","14_44","15_17","16_16"}, <17> {"0_44","14_44","15_17","17_17"}, <18> {"0_44","14_44","18_18","18_19"}, <19> {"0_44","14_44","18_19","19_19"}, <20> {"0_44","14_44","20_20","20_43"}, <21> {"0_44","14_44","20_43","21_21","21_22","21_43"}, <22> {"0_44","14_44","20_43","21_22","21_43","22_22","22_43"}, <23> {"0_44","14_44","20_43","21_43","22_43","23_23","23_43"}, <24> {"0_44","14_44","20_43","21_43","22_43","23_43","24_24","24_27"}, <25> {"0_44","14_44","20_43","21_43","22_43","23_43","24_27","25_25","25_27"}, <26> {"0_44","14_44","20_43","21_43","22_43","23_43","24_27","25_27","26_26"}, <27> {"0_44","14_44","20_43","21_43","22_43","23_43","24_27","25_27","27_27"}, <28> {"0_44","14_44","20_43","21_43","22_43","23_43","28_28","28_43"}, <29> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_29","29_43"}, <30> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","30_30","30_31"}, <31> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","30_31","31_31"}, <32> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","32_32","32_34"}, <33> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","32_34","33_33","33_34"}, <34> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","32_34","33_34","34_34"}, <35> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","35_35"}, <36> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_36","36_43"}, <37> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_37","37_39","37_42","37_43"}, <38> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_39","37_42","37_43","38_38"}, <39> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_39","37_42","37_43","39_39"}, <40> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_42","37_43","40_40"}, <41> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_42","37_43","41_41"}, <42> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_42","37_43","42_42"}, <43> {"0_44","14_44","20_43","21_43","22_43","23_43","28_43","29_43","36_43","37_43","43_43"}, <44> {"0_44","14_44","44_44"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Medical_specialties"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Telling"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Relative_time"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Appeal"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Removing"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Be_in_control"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Being_at_risk"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Leadership"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Medical_specialties"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Buildings"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Telling"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Relative_time"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Appeal"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Leadership"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Removing"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Buildings"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Be_in_control"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Statement"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Being_at_risk"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Buildings"] do sum <s> in Spans : z17[r,s] == 1;
#pairwise exclusion constraint
set Exc10 := {<"Agent","Cause">};
subto exclusion10: forall <ri,rj> in Exc10 do z10[ri,"-1_-1"] + z10[rj,"-1_-1"] >= 1;
set Exc16 := {<"Dangerous_entity","Harmful_event">};
subto exclusion16: forall <ri,rj> in Exc16 do z16[ri,"-1_-1"] + z16[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

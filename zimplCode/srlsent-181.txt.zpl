# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Intentionally_create","Statement","Businesses","Intentionally_act","Capability","Building_subparts","Employing","Employing","Possession","Gizmo","Secrecy_status","Locale","Inclusion","Foreign_or_domestic_country","Businesses"};
set Roles[Frames] :=  <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Businesses"> {"Descriptor","Business_Name","Service_provider","Business","Place","Product","Proprietor"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"}, <"Employing"> {"Purpose","Time","Descriptor","Place","Field","Task","Employer","Compensation","Position","Manner","Contract_basis","Employee"}, <"Employing"> {"Purpose","Time","Descriptor","Place","Field","Task","Employer","Compensation","Position","Manner","Contract_basis","Employee"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Gizmo"> {"Descriptor","Power_source","Gizmo","Use","User"}, <"Secrecy_status"> {"Time","Phenomenon","Degree","Epistemic_stance","Cognizer"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"}, <"Foreign_or_domestic_country"> {"Relative_location","Name","Descriptor","Current_country","Population","Discourse_salient_country"}, <"Businesses"> {"Descriptor","Business_Name","Service_provider","Business","Place","Product","Proprietor"};
set Spans := {"-1_-1","0_0","0_28","10_10","10_27","11_11","12_12","13_13","14_14","14_18","15_15","15_18","16_16","17_17","18_18","19_19","19_27","1_1","1_28","20_20","20_27","21_21","22_22","23_23","24_24","24_27","25_25","25_27","26_26","27_27","28_28","2_2","2_27","2_5","2_6","3_3","3_5","4_4","4_5","5_5","6_27","6_6","7_27","7_7","8_27","8_8","9_27","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Intentionally_create"]] binary;
var z1[Assignment["Statement"]] binary;
var z2[Assignment["Businesses"]] binary;
var z3[Assignment["Intentionally_act"]] binary;
var z4[Assignment["Capability"]] binary;
var z5[Assignment["Building_subparts"]] binary;
var z6[Assignment["Employing"]] binary;
var z7[Assignment["Employing"]] binary;
var z8[Assignment["Possession"]] binary;
var z9[Assignment["Gizmo"]] binary;
var z10[Assignment["Secrecy_status"]] binary;
var z11[Assignment["Locale"]] binary;
var z12[Assignment["Inclusion"]] binary;
var z13[Assignment["Foreign_or_domestic_country"]] binary;
var z14[Assignment["Businesses"]] binary;
param probabilities0[Assignment["Intentionally_create"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Statement"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Businesses"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Intentionally_act"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Capability"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Building_subparts"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Employing"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Employing"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Possession"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Gizmo"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Secrecy_status"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Locale"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Inclusion"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Foreign_or_domestic_country"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Businesses"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Intentionally_create"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Businesses"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Employing"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Employing"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Gizmo"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Secrecy_status"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Foreign_or_domestic_country"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Businesses"] : probabilities14[r,s] * z14[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 28};
set G[I] := <0> {"0_0","0_28"}, <1> {"0_28","1_1","1_28"}, <2> {"0_28","1_28","2_2","2_27","2_5","2_6"}, <3> {"0_28","1_28","2_27","2_5","2_6","3_3","3_5"}, <4> {"0_28","1_28","2_27","2_5","2_6","3_5","4_4","4_5"}, <5> {"0_28","1_28","2_27","2_5","2_6","3_5","4_5","5_5"}, <6> {"0_28","1_28","2_27","2_6","6_27","6_6"}, <7> {"0_28","1_28","2_27","6_27","7_27","7_7"}, <8> {"0_28","1_28","2_27","6_27","7_27","8_27","8_8"}, <9> {"0_28","1_28","2_27","6_27","7_27","8_27","9_27","9_9"}, <10> {"0_28","10_10","10_27","1_28","2_27","6_27","7_27","8_27","9_27"}, <11> {"0_28","10_27","11_11","1_28","2_27","6_27","7_27","8_27","9_27"}, <12> {"0_28","10_27","12_12","1_28","2_27","6_27","7_27","8_27","9_27"}, <13> {"0_28","10_27","13_13","1_28","2_27","6_27","7_27","8_27","9_27"}, <14> {"0_28","10_27","14_14","14_18","1_28","2_27","6_27","7_27","8_27","9_27"}, <15> {"0_28","10_27","14_18","15_15","15_18","1_28","2_27","6_27","7_27","8_27","9_27"}, <16> {"0_28","10_27","14_18","15_18","16_16","1_28","2_27","6_27","7_27","8_27","9_27"}, <17> {"0_28","10_27","14_18","15_18","17_17","1_28","2_27","6_27","7_27","8_27","9_27"}, <18> {"0_28","10_27","14_18","15_18","18_18","1_28","2_27","6_27","7_27","8_27","9_27"}, <19> {"0_28","10_27","19_19","19_27","1_28","2_27","6_27","7_27","8_27","9_27"}, <20> {"0_28","10_27","19_27","1_28","20_20","20_27","2_27","6_27","7_27","8_27","9_27"}, <21> {"0_28","10_27","19_27","1_28","20_27","21_21","2_27","6_27","7_27","8_27","9_27"}, <22> {"0_28","10_27","19_27","1_28","20_27","22_22","2_27","6_27","7_27","8_27","9_27"}, <23> {"0_28","10_27","19_27","1_28","20_27","23_23","2_27","6_27","7_27","8_27","9_27"}, <24> {"0_28","10_27","19_27","1_28","20_27","24_24","24_27","2_27","6_27","7_27","8_27","9_27"}, <25> {"0_28","10_27","19_27","1_28","20_27","24_27","25_25","25_27","2_27","6_27","7_27","8_27","9_27"}, <26> {"0_28","10_27","19_27","1_28","20_27","24_27","25_27","26_26","2_27","6_27","7_27","8_27","9_27"}, <27> {"0_28","10_27","19_27","1_28","20_27","24_27","25_27","27_27","2_27","6_27","7_27","8_27","9_27"}, <28> {"0_28","1_28","28_28"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Businesses"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Employing"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Employing"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Gizmo"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Secrecy_status"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Foreign_or_domestic_country"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Businesses"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Statement"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Businesses"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Capability"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Employing"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Employing"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Possession"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Gizmo"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Secrecy_status"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Locale"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Foreign_or_domestic_country"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Businesses"] do sum <s> in Spans : z14[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Natural_features","Activity_prepare","Importance","Increment","Catastrophe","Political_locales","Political_locales","Leadership","Evidence","Fields","Hear","Leadership","Foreign_or_domestic_country","Being_at_risk","Locale_by_use","Calendric_unit","Inclusion","Intentionally_create","Communication","System","Aggregate","Removing","Purpose"};
set Roles[Frames] :=  <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Activity_prepare"> {"Agent","Time","Degree","Means","Activity"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Catastrophe"> {"Undesirable_Event","Place","Degree","Manner","Undergoer","Time","Circumstances","Cause"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Evidence"> {"Domain_of_Relevance","Support","Manner","Depictive","Proposition","Degree","Cognizer"}, <"Fields"> {"Practitioner","Time","Type","Work","Place","Salient_entity","Activity"}, <"Hear"> {"Hearer","Medium","Topic","Speaker","Message","Period_of_iterations"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Foreign_or_domestic_country"> {"Relative_location","Name","Descriptor","Current_country","Population","Discourse_salient_country"}, <"Being_at_risk"> {"Domain","Time","Place","Degree","Situation","Asset","Harmful_event","Depictive","Duration","Dangerous_entity","Frequency","Explanation"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Communication"> {"Amount_of_information","Duration","Addressee","Medium","Topic","Manner","Communicator","Time","Message","Means","Frequency"}, <"System"> {"Component_entities","Function","Possessor","Descriptor","Salient_entity","Complex"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Removing"> {"Direction","Subevent","Theme","Distance","Depictive","Circumstances","Agent","Manner","Means","Result","Explanation","Instrument","Cause","Time","Source","Degree","Place","Frequency","Goal","Vehicle","Particular_iteration","Path","Purpose"}, <"Purpose"> {"Attribute","Agent","Goal","Time","Restrictor","Value","Domain","Means"};
set Spans := {"-1_-1","0_0","0_41","10_10","11_11","12_12","13_13","14_14","15_15","15_17","15_18","16_16","17_17","18_18","19_19","1_1","1_13","1_2","1_3","20_20","20_30","21_21","21_23","21_30","22_22","23_23","24_24","24_30","25_25","25_30","26_26","27_27","28_28","29_29","2_2","30_30","31_31","32_32","32_40","33_33","33_36","33_40","34_34","34_36","35_35","36_36","37_37","38_38","39_39","3_13","3_3","40_40","41_41","4_13","4_4","5_5","6_13","6_6","7_13","7_7","7_9","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Natural_features"]] binary;
var z1[Assignment["Activity_prepare"]] binary;
var z2[Assignment["Importance"]] binary;
var z3[Assignment["Increment"]] binary;
var z4[Assignment["Catastrophe"]] binary;
var z5[Assignment["Political_locales"]] binary;
var z6[Assignment["Political_locales"]] binary;
var z7[Assignment["Leadership"]] binary;
var z8[Assignment["Evidence"]] binary;
var z9[Assignment["Fields"]] binary;
var z10[Assignment["Hear"]] binary;
var z11[Assignment["Leadership"]] binary;
var z12[Assignment["Foreign_or_domestic_country"]] binary;
var z13[Assignment["Being_at_risk"]] binary;
var z14[Assignment["Locale_by_use"]] binary;
var z15[Assignment["Calendric_unit"]] binary;
var z16[Assignment["Inclusion"]] binary;
var z17[Assignment["Intentionally_create"]] binary;
var z18[Assignment["Communication"]] binary;
var z19[Assignment["System"]] binary;
var z20[Assignment["Aggregate"]] binary;
var z21[Assignment["Removing"]] binary;
var z22[Assignment["Purpose"]] binary;
param probabilities0[Assignment["Natural_features"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Activity_prepare"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Importance"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Increment"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Catastrophe"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Political_locales"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Political_locales"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Leadership"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Evidence"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Fields"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Hear"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Leadership"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Foreign_or_domestic_country"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Being_at_risk"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Locale_by_use"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Calendric_unit"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Inclusion"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Intentionally_create"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Communication"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["System"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Aggregate"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Removing"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Purpose"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Natural_features"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Activity_prepare"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Catastrophe"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Evidence"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Fields"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Hear"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Foreign_or_domestic_country"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Being_at_risk"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Communication"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["System"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Removing"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Purpose"] : probabilities22[r,s] * z22[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 41};
set G[I] := <0> {"0_0","0_41"}, <1> {"0_41","1_1","1_13","1_2","1_3"}, <2> {"0_41","1_13","1_2","1_3","2_2"}, <3> {"0_41","1_13","1_3","3_13","3_3"}, <4> {"0_41","1_13","3_13","4_13","4_4"}, <5> {"0_41","1_13","3_13","4_13","5_5"}, <6> {"0_41","1_13","3_13","4_13","6_13","6_6"}, <7> {"0_41","1_13","3_13","4_13","6_13","7_13","7_7","7_9"}, <8> {"0_41","1_13","3_13","4_13","6_13","7_13","7_9","8_8"}, <9> {"0_41","1_13","3_13","4_13","6_13","7_13","7_9","9_9"}, <10> {"0_41","10_10","1_13","3_13","4_13","6_13","7_13"}, <11> {"0_41","11_11","1_13","3_13","4_13","6_13","7_13"}, <12> {"0_41","12_12","1_13","3_13","4_13","6_13","7_13"}, <13> {"0_41","13_13","1_13","3_13","4_13","6_13","7_13"}, <14> {"0_41","14_14"}, <15> {"0_41","15_15","15_17","15_18"}, <16> {"0_41","15_17","15_18","16_16"}, <17> {"0_41","15_17","15_18","17_17"}, <18> {"0_41","15_18","18_18"}, <19> {"0_41","19_19"}, <20> {"0_41","20_20","20_30"}, <21> {"0_41","20_30","21_21","21_23","21_30"}, <22> {"0_41","20_30","21_23","21_30","22_22"}, <23> {"0_41","20_30","21_23","21_30","23_23"}, <24> {"0_41","20_30","21_30","24_24","24_30"}, <25> {"0_41","20_30","21_30","24_30","25_25","25_30"}, <26> {"0_41","20_30","21_30","24_30","25_30","26_26"}, <27> {"0_41","20_30","21_30","24_30","25_30","27_27"}, <28> {"0_41","20_30","21_30","24_30","25_30","28_28"}, <29> {"0_41","20_30","21_30","24_30","25_30","29_29"}, <30> {"0_41","20_30","21_30","24_30","25_30","30_30"}, <31> {"0_41","31_31"}, <32> {"0_41","32_32","32_40"}, <33> {"0_41","32_40","33_33","33_36","33_40"}, <34> {"0_41","32_40","33_36","33_40","34_34","34_36"}, <35> {"0_41","32_40","33_36","33_40","34_36","35_35"}, <36> {"0_41","32_40","33_36","33_40","34_36","36_36"}, <37> {"0_41","32_40","33_40","37_37"}, <38> {"0_41","32_40","33_40","38_38"}, <39> {"0_41","32_40","33_40","39_39"}, <40> {"0_41","32_40","33_40","40_40"}, <41> {"0_41","41_41"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Activity_prepare"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Catastrophe"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Evidence"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Fields"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Hear"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Foreign_or_domestic_country"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Being_at_risk"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Communication"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["System"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Removing"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Purpose"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Activity_prepare"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Importance"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Increment"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Catastrophe"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Leadership"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Evidence"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Fields"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Hear"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Leadership"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Foreign_or_domestic_country"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Being_at_risk"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Communication"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["System"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Removing"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Purpose"] do sum <s> in Spans : z22[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Field","Interested_party">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc13 := {<"Dangerous_entity","Harmful_event">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
set Exc21 := {<"Agent","Cause">};
subto exclusion21: forall <ri,rj> in Exc21 do z21[ri,"-1_-1"] + z21[rj,"-1_-1"] >= 1;
set Exc22 := {<"Attribute","Goal">,<"Goal","Value">};
subto exclusion22: forall <ri,rj> in Exc22 do z22[ri,"-1_-1"] + z22[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr22 := {<"Attribute","Value">};
subto require22: forall <ri,rj> in Reqr22 do z22[ri,"-1_-1"] - z22[rj,"-1_-1"] == 0;

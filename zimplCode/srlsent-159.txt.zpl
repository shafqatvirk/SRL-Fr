# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Buildings","Statement","Calendric_unit","Experiencer_focus","Emotion_directed","Arriving","Buildings","Political_locales","Origin","Relational_political_locales"};
set Roles[Frames] :=  <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Experiencer_focus"> {"Topic","Circumstances","Parameter","Time","Degree","Experiencer","Event","Expressor","Reason","State","Content","Manner"}, <"Emotion_directed"> {"Topic","Circumstances","Parameter","Degree","Experiencer","Event","Expressor","Reason","Empathy_target","Manner","State","Stimulus","Frequency"}, <"Arriving"> {"Theme","Cotheme","Means","Depictive","Circumstances","Manner","Time","Source","Period_of_iterations","Degree","Event_description","Re_encoding","Goal","Purpose","Goal_conditions","Path","Frequency","Mode_of_transportation"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Origin"> {"Entity","Origin"}, <"Relational_political_locales"> {"Relative_location","Container_possessor","Descriptor","Name","Population","Locale"};
set Spans := {"-1_-1","0_0","0_25","10_10","11_11","11_12","12_12","13_13","13_24","14_14","14_24","15_15","15_16","15_24","16_16","17_17","17_24","18_18","18_20","18_24","19_19","1_1","1_25","20_20","21_21","21_24","22_22","22_24","23_23","24_24","25_25","2_2","2_3","3_3","4_24","4_4","5_24","5_5","6_24","6_6","7_10","7_12","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Buildings"]] binary;
var z1[Assignment["Statement"]] binary;
var z2[Assignment["Calendric_unit"]] binary;
var z3[Assignment["Experiencer_focus"]] binary;
var z4[Assignment["Emotion_directed"]] binary;
var z5[Assignment["Arriving"]] binary;
var z6[Assignment["Buildings"]] binary;
var z7[Assignment["Political_locales"]] binary;
var z8[Assignment["Origin"]] binary;
var z9[Assignment["Relational_political_locales"]] binary;
param probabilities0[Assignment["Buildings"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Statement"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Calendric_unit"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Experiencer_focus"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Emotion_directed"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Arriving"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Buildings"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Political_locales"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Origin"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Relational_political_locales"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Buildings"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Experiencer_focus"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Emotion_directed"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Arriving"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Relational_political_locales"] : probabilities9[r,s] * z9[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 25};
set G[I] := <0> {"0_0","0_25"}, <1> {"0_25","1_1","1_25"}, <2> {"0_25","1_25","2_2","2_3"}, <3> {"0_25","1_25","2_3","3_3"}, <4> {"0_25","1_25","4_24","4_4"}, <5> {"0_25","1_25","4_24","5_24","5_5"}, <6> {"0_25","1_25","4_24","5_24","6_24","6_6"}, <7> {"0_25","1_25","4_24","5_24","6_24","7_10","7_12","7_7"}, <8> {"0_25","1_25","4_24","5_24","6_24","7_10","7_12","8_8"}, <9> {"0_25","1_25","4_24","5_24","6_24","7_10","7_12","9_9"}, <10> {"0_25","10_10","1_25","4_24","5_24","6_24","7_10","7_12"}, <11> {"0_25","11_11","11_12","1_25","4_24","5_24","6_24","7_12"}, <12> {"0_25","11_12","12_12","1_25","4_24","5_24","6_24","7_12"}, <13> {"0_25","13_13","13_24","1_25","4_24","5_24","6_24"}, <14> {"0_25","13_24","14_14","14_24","1_25","4_24","5_24","6_24"}, <15> {"0_25","13_24","14_24","15_15","15_16","15_24","1_25","4_24","5_24","6_24"}, <16> {"0_25","13_24","14_24","15_16","15_24","16_16","1_25","4_24","5_24","6_24"}, <17> {"0_25","13_24","14_24","15_24","17_17","17_24","1_25","4_24","5_24","6_24"}, <18> {"0_25","13_24","14_24","15_24","17_24","18_18","18_20","18_24","1_25","4_24","5_24","6_24"}, <19> {"0_25","13_24","14_24","15_24","17_24","18_20","18_24","19_19","1_25","4_24","5_24","6_24"}, <20> {"0_25","13_24","14_24","15_24","17_24","18_20","18_24","1_25","20_20","4_24","5_24","6_24"}, <21> {"0_25","13_24","14_24","15_24","17_24","18_24","1_25","21_21","21_24","4_24","5_24","6_24"}, <22> {"0_25","13_24","14_24","15_24","17_24","18_24","1_25","21_24","22_22","22_24","4_24","5_24","6_24"}, <23> {"0_25","13_24","14_24","15_24","17_24","18_24","1_25","21_24","22_24","23_23","4_24","5_24","6_24"}, <24> {"0_25","13_24","14_24","15_24","17_24","18_24","1_25","21_24","22_24","24_24","4_24","5_24","6_24"}, <25> {"0_25","1_25","25_25"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Experiencer_focus"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Emotion_directed"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Arriving"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Relational_political_locales"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Buildings"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Statement"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Experiencer_focus"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Emotion_directed"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Arriving"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Buildings"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Origin"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Relational_political_locales"] do sum <s> in Spans : z9[r,s] == 1;
#pairwise exclusion constraint
set Exc4 := {<"Event","Experiencer">,<"Experiencer","Expressor">,<"Event","Expressor">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

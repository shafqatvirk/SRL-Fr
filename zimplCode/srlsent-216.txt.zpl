# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Committing_crime","Calendric_unit","Attack","Political_locales","Buildings","Political_locales","Membership","Organization","Categorization","Leadership","Aggregate","Opinion"};
set Roles[Frames] :=  <"Committing_crime"> {"Place","Instrument","Manner","Time","Perpetrator","Reason","Purpose","Crime"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Attack"> {"Particular_iteration","Iteration","Event_description","Means","Depictive","Circumstances","Manner","Result","Explanation","Time","Source","Containing_event","Place","Re_encoding","Weapon","Purpose","Victim","Path","Assailant"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Membership"> {"Member","Standing","Group"}, <"Organization"> {"Period_of_existence","Members","Place","Name","Container_possessor","Organization","Purpose","Descriptor"}, <"Categorization"> {"Cognizer","Item","Manner","Explanation","Criteria","Time","Circumstances","Category","Concessive"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Opinion"> {"Cognizer","Topic","Manner","Time","Circumstances","Domain","Constancy","Opinion","Evidence"};
set Spans := {"-1_-1","0_0","0_16","0_36","10_10","10_12","10_15","11_11","12_12","13_13","13_15","14_14","14_15","15_15","16_16","17_17","17_36","18_18","18_25","19_19","19_20","19_24","1_1","1_16","20_20","21_21","21_24","22_22","22_24","23_23","24_24","25_25","26_26","26_35","27_27","28_28","28_35","29_29","29_33","29_35","2_2","30_30","31_31","32_32","33_33","34_34","34_35","35_35","36_36","3_15","3_3","4_15","4_4","5_15","5_5","5_8","6_6","7_7","8_8","9_15","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Committing_crime"]] binary;
var z1[Assignment["Calendric_unit"]] binary;
var z2[Assignment["Attack"]] binary;
var z3[Assignment["Political_locales"]] binary;
var z4[Assignment["Buildings"]] binary;
var z5[Assignment["Political_locales"]] binary;
var z6[Assignment["Membership"]] binary;
var z7[Assignment["Organization"]] binary;
var z8[Assignment["Categorization"]] binary;
var z9[Assignment["Leadership"]] binary;
var z10[Assignment["Aggregate"]] binary;
var z11[Assignment["Opinion"]] binary;
param probabilities0[Assignment["Committing_crime"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Calendric_unit"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Attack"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Political_locales"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Buildings"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Political_locales"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Membership"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Organization"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Categorization"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Leadership"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Aggregate"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Opinion"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Committing_crime"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Attack"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Membership"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Organization"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Categorization"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Opinion"] : probabilities11[r,s] * z11[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 36};
set G[I] := <0> {"0_0","0_16","0_36"}, <1> {"0_16","0_36","1_1","1_16"}, <2> {"0_16","0_36","1_16","2_2"}, <3> {"0_16","0_36","1_16","3_15","3_3"}, <4> {"0_16","0_36","1_16","3_15","4_15","4_4"}, <5> {"0_16","0_36","1_16","3_15","4_15","5_15","5_5","5_8"}, <6> {"0_16","0_36","1_16","3_15","4_15","5_15","5_8","6_6"}, <7> {"0_16","0_36","1_16","3_15","4_15","5_15","5_8","7_7"}, <8> {"0_16","0_36","1_16","3_15","4_15","5_15","5_8","8_8"}, <9> {"0_16","0_36","1_16","3_15","4_15","5_15","9_15","9_9"}, <10> {"0_16","0_36","10_10","10_12","10_15","1_16","3_15","4_15","5_15","9_15"}, <11> {"0_16","0_36","10_12","10_15","11_11","1_16","3_15","4_15","5_15","9_15"}, <12> {"0_16","0_36","10_12","10_15","12_12","1_16","3_15","4_15","5_15","9_15"}, <13> {"0_16","0_36","10_15","13_13","13_15","1_16","3_15","4_15","5_15","9_15"}, <14> {"0_16","0_36","10_15","13_15","14_14","14_15","1_16","3_15","4_15","5_15","9_15"}, <15> {"0_16","0_36","10_15","13_15","14_15","15_15","1_16","3_15","4_15","5_15","9_15"}, <16> {"0_16","0_36","16_16","1_16"}, <17> {"0_36","17_17","17_36"}, <18> {"0_36","17_36","18_18","18_25"}, <19> {"0_36","17_36","18_25","19_19","19_20","19_24"}, <20> {"0_36","17_36","18_25","19_20","19_24","20_20"}, <21> {"0_36","17_36","18_25","19_24","21_21","21_24"}, <22> {"0_36","17_36","18_25","19_24","21_24","22_22","22_24"}, <23> {"0_36","17_36","18_25","19_24","21_24","22_24","23_23"}, <24> {"0_36","17_36","18_25","19_24","21_24","22_24","24_24"}, <25> {"0_36","17_36","18_25","25_25"}, <26> {"0_36","17_36","26_26","26_35"}, <27> {"0_36","17_36","26_35","27_27"}, <28> {"0_36","17_36","26_35","28_28","28_35"}, <29> {"0_36","17_36","26_35","28_35","29_29","29_33","29_35"}, <30> {"0_36","17_36","26_35","28_35","29_33","29_35","30_30"}, <31> {"0_36","17_36","26_35","28_35","29_33","29_35","31_31"}, <32> {"0_36","17_36","26_35","28_35","29_33","29_35","32_32"}, <33> {"0_36","17_36","26_35","28_35","29_33","29_35","33_33"}, <34> {"0_36","17_36","26_35","28_35","29_35","34_34","34_35"}, <35> {"0_36","17_36","26_35","28_35","29_35","34_35","35_35"}, <36> {"0_36","17_36","36_36"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Committing_crime"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Attack"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Membership"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Organization"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Categorization"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Opinion"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Committing_crime"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Attack"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Buildings"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Membership"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Organization"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Categorization"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Leadership"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Opinion"] do sum <s> in Spans : z11[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

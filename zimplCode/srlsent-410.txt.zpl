# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Time_vector","Evidence","Position_on_a_scale","Employing","Political_locales","Building_subparts","Locative_relation","Political_locales","Being_obligated","Increment","Political_locales","Law","Intentionally_create","Intentionally_act","Kinship","Building_subparts"};
set Roles[Frames] :=  <"Time_vector"> {"Distance","Event","Landmark_event","Direction"}, <"Evidence"> {"Domain_of_Relevance","Support","Manner","Depictive","Proposition","Degree","Cognizer"}, <"Position_on_a_scale"> {"Domain","Value","Item","Variable","Degree"}, <"Employing"> {"Purpose","Time","Descriptor","Place","Field","Task","Employer","Compensation","Position","Manner","Contract_basis","Employee"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Being_obligated"> {"Condition","Responsible_party","Place","Frequency","Duty"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Law"> {"Type","Use","Time_of_creation","Required","Name","Law","Jurisdiction","Forbidden","Creator"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Kinship"> {"Relatives","Descriptor","Ego","Degree","Alter"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"};
set Spans := {"-1_-1","0_0","0_38","10_10","10_12","10_16","11_11","12_12","13_13","13_16","14_14","14_16","15_15","16_16","17_17","17_37","18_18","18_37","19_19","19_37","1_1","20_20","21_21","21_37","22_22","22_24","22_25","22_26","22_37","23_23","24_24","25_25","25_26","26_26","27_27","28_28","28_31","29_29","2_2","2_6","30_30","31_31","32_32","33_33","34_34","34_37","35_35","35_37","36_36","36_37","37_37","38_38","3_3","3_6","4_4","4_6","5_5","5_6","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Time_vector"]] binary;
var z1[Assignment["Evidence"]] binary;
var z2[Assignment["Position_on_a_scale"]] binary;
var z3[Assignment["Employing"]] binary;
var z4[Assignment["Political_locales"]] binary;
var z5[Assignment["Building_subparts"]] binary;
var z6[Assignment["Locative_relation"]] binary;
var z7[Assignment["Political_locales"]] binary;
var z8[Assignment["Being_obligated"]] binary;
var z9[Assignment["Increment"]] binary;
var z10[Assignment["Political_locales"]] binary;
var z11[Assignment["Law"]] binary;
var z12[Assignment["Intentionally_create"]] binary;
var z13[Assignment["Intentionally_act"]] binary;
var z14[Assignment["Kinship"]] binary;
var z15[Assignment["Building_subparts"]] binary;
param probabilities0[Assignment["Time_vector"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Evidence"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Position_on_a_scale"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Employing"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Political_locales"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Building_subparts"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locative_relation"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Political_locales"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Being_obligated"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Increment"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Political_locales"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Law"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Intentionally_create"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Intentionally_act"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Kinship"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Building_subparts"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Time_vector"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Evidence"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Position_on_a_scale"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Employing"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Being_obligated"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Law"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Kinship"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities15[r,s] * z15[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 38};
set G[I] := <0> {"0_0","0_38"}, <1> {"0_38","1_1"}, <2> {"0_38","2_2","2_6"}, <3> {"0_38","2_6","3_3","3_6"}, <4> {"0_38","2_6","3_6","4_4","4_6"}, <5> {"0_38","2_6","3_6","4_6","5_5","5_6"}, <6> {"0_38","2_6","3_6","4_6","5_6","6_6"}, <7> {"0_38","7_7"}, <8> {"0_38","8_8"}, <9> {"0_38","9_9"}, <10> {"0_38","10_10","10_12","10_16"}, <11> {"0_38","10_12","10_16","11_11"}, <12> {"0_38","10_12","10_16","12_12"}, <13> {"0_38","10_16","13_13","13_16"}, <14> {"0_38","10_16","13_16","14_14","14_16"}, <15> {"0_38","10_16","13_16","14_16","15_15"}, <16> {"0_38","10_16","13_16","14_16","16_16"}, <17> {"0_38","17_17","17_37"}, <18> {"0_38","17_37","18_18","18_37"}, <19> {"0_38","17_37","18_37","19_19","19_37"}, <20> {"0_38","17_37","18_37","19_37","20_20"}, <21> {"0_38","17_37","18_37","19_37","21_21","21_37"}, <22> {"0_38","17_37","18_37","19_37","21_37","22_22","22_24","22_25","22_26","22_37"}, <23> {"0_38","17_37","18_37","19_37","21_37","22_24","22_25","22_26","22_37","23_23"}, <24> {"0_38","17_37","18_37","19_37","21_37","22_24","22_25","22_26","22_37","24_24"}, <25> {"0_38","17_37","18_37","19_37","21_37","22_25","22_26","22_37","25_25","25_26"}, <26> {"0_38","17_37","18_37","19_37","21_37","22_26","22_37","25_26","26_26"}, <27> {"0_38","17_37","18_37","19_37","21_37","22_37","27_27"}, <28> {"0_38","17_37","18_37","19_37","21_37","22_37","28_28","28_31"}, <29> {"0_38","17_37","18_37","19_37","21_37","22_37","28_31","29_29"}, <30> {"0_38","17_37","18_37","19_37","21_37","22_37","28_31","30_30"}, <31> {"0_38","17_37","18_37","19_37","21_37","22_37","28_31","31_31"}, <32> {"0_38","17_37","18_37","19_37","21_37","22_37","32_32"}, <33> {"0_38","17_37","18_37","19_37","21_37","22_37","33_33"}, <34> {"0_38","17_37","18_37","19_37","21_37","22_37","34_34","34_37"}, <35> {"0_38","17_37","18_37","19_37","21_37","22_37","34_37","35_35","35_37"}, <36> {"0_38","17_37","18_37","19_37","21_37","22_37","34_37","35_37","36_36","36_37"}, <37> {"0_38","17_37","18_37","19_37","21_37","22_37","34_37","35_37","36_37","37_37"}, <38> {"0_38","38_38"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Time_vector"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Evidence"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Position_on_a_scale"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Employing"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Being_obligated"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Law"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Kinship"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Time_vector"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Evidence"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Position_on_a_scale"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Employing"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Being_obligated"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Increment"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Law"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Kinship"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z15[r,s] == 1;
#pairwise exclusion constraint
set Exc6 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc14 := {<"Ego","Relatives">,<"Alter","Relatives">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr14 := {<"Alter","Ego">};
subto require14: forall <ri,rj> in Reqr14 do z14[ri,"-1_-1"] - z14[rj,"-1_-1"] == 0;

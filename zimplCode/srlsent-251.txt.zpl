# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Existence","Intentionally_act","Substance","Weapon","Defend","Military","Practice","Vehicle","Working_on","Ride_vehicle","Quantity","Evidence","Cause_to_make_progress","Weapon","Weapon","Suitability","Weapon"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Defend"> {"Defender","Place","Instrument","Manner","Victim","Assailant","Means","Purpose","Depictive","Reason"}, <"Military"> {"Members","Descriptor","Possessor","Goal","Domain","Force"}, <"Practice"> {"Place","Duration","Agent","Action","Iteration","Co_participant","Time","Means","Manner","Purpose","Occasion"}, <"Vehicle"> {"Itinerary","Possessor","Descriptor","Vehicle","Use"}, <"Working_on"> {"Purpose","Descriptor","Event_description","Time","Goal","Salient_entity","Place","Frequency","Degree","Means","Domain","Depictive","Duration","Particular_iteration","Manner","Agent"}, <"Ride_vehicle"> {"Duration","Goal","Theme","Source","Path","Manner","Area","Time","Vehicle","Purpose","Cotheme"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Evidence"> {"Domain_of_Relevance","Support","Manner","Depictive","Proposition","Degree","Cognizer"}, <"Cause_to_make_progress"> {"Purpose","Time","Place","Degree","Rate","Means","Domain","Duration","Particular_iteration","Project","Post_state","Manner","Explanation","Agent","Prior_state"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Suitability"> {"Purpose","Evaluee","Degree","User"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"};
set Spans := {"-1_-1","0_0","0_40","10_10","10_12","11_11","11_12","12_12","13_13","14_14","14_39","15_15","15_19","16_16","16_19","17_17","18_18","19_19","1_1","1_40","20_20","21_21","21_39","22_22","22_23","22_39","23_23","23_39","24_24","24_26","24_39","25_25","26_26","27_27","27_39","28_28","28_29","28_39","29_29","29_39","2_2","30_30","30_39","31_31","31_33","31_39","32_32","33_33","34_34","34_35","34_39","35_35","35_39","36_36","36_39","37_37","37_39","38_38","38_39","39_39","3_12","3_3","40_40","4_12","4_4","4_9","5_5","6_6","7_7","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Existence"]] binary;
var z2[Assignment["Intentionally_act"]] binary;
var z3[Assignment["Substance"]] binary;
var z4[Assignment["Weapon"]] binary;
var z5[Assignment["Defend"]] binary;
var z6[Assignment["Military"]] binary;
var z7[Assignment["Practice"]] binary;
var z8[Assignment["Vehicle"]] binary;
var z9[Assignment["Working_on"]] binary;
var z10[Assignment["Ride_vehicle"]] binary;
var z11[Assignment["Quantity"]] binary;
var z12[Assignment["Evidence"]] binary;
var z13[Assignment["Cause_to_make_progress"]] binary;
var z14[Assignment["Weapon"]] binary;
var z15[Assignment["Weapon"]] binary;
var z16[Assignment["Suitability"]] binary;
var z17[Assignment["Weapon"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Existence"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Intentionally_act"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Substance"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Weapon"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Defend"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Military"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Practice"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Vehicle"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Working_on"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Ride_vehicle"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Quantity"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Evidence"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Cause_to_make_progress"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Weapon"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Weapon"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Suitability"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Weapon"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Existence"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Defend"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Military"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Practice"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Vehicle"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Working_on"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Ride_vehicle"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Evidence"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Cause_to_make_progress"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Suitability"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities17[r,s] * z17[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 40};
set G[I] := <0> {"0_0","0_40"}, <1> {"0_40","1_1","1_40"}, <2> {"0_40","1_40","2_2"}, <3> {"0_40","1_40","3_12","3_3"}, <4> {"0_40","1_40","3_12","4_12","4_4","4_9"}, <5> {"0_40","1_40","3_12","4_12","4_9","5_5"}, <6> {"0_40","1_40","3_12","4_12","4_9","6_6"}, <7> {"0_40","1_40","3_12","4_12","4_9","7_7"}, <8> {"0_40","1_40","3_12","4_12","4_9","8_8"}, <9> {"0_40","1_40","3_12","4_12","4_9","9_9"}, <10> {"0_40","10_10","10_12","1_40","3_12","4_12"}, <11> {"0_40","10_12","11_11","11_12","1_40","3_12","4_12"}, <12> {"0_40","10_12","11_12","12_12","1_40","3_12","4_12"}, <13> {"0_40","13_13","1_40"}, <14> {"0_40","14_14","14_39","1_40"}, <15> {"0_40","14_39","15_15","15_19","1_40"}, <16> {"0_40","14_39","15_19","16_16","16_19","1_40"}, <17> {"0_40","14_39","15_19","16_19","17_17","1_40"}, <18> {"0_40","14_39","15_19","16_19","18_18","1_40"}, <19> {"0_40","14_39","15_19","16_19","19_19","1_40"}, <20> {"0_40","14_39","1_40","20_20"}, <21> {"0_40","14_39","1_40","21_21","21_39"}, <22> {"0_40","14_39","1_40","21_39","22_22","22_23","22_39"}, <23> {"0_40","14_39","1_40","21_39","22_23","22_39","23_23","23_39"}, <24> {"0_40","14_39","1_40","21_39","22_39","23_39","24_24","24_26","24_39"}, <25> {"0_40","14_39","1_40","21_39","22_39","23_39","24_26","24_39","25_25"}, <26> {"0_40","14_39","1_40","21_39","22_39","23_39","24_26","24_39","26_26"}, <27> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_27","27_39"}, <28> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_28","28_29","28_39"}, <29> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_29","28_39","29_29","29_39"}, <30> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_30","30_39"}, <31> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_31","31_33","31_39"}, <32> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_33","31_39","32_32"}, <33> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_33","31_39","33_33"}, <34> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_39","34_34","34_35","34_39"}, <35> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_39","34_35","34_39","35_35","35_39"}, <36> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_39","34_39","35_39","36_36","36_39"}, <37> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_39","34_39","35_39","36_39","37_37","37_39"}, <38> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_39","34_39","35_39","36_39","37_39","38_38","38_39"}, <39> {"0_40","14_39","1_40","21_39","22_39","23_39","24_39","27_39","28_39","29_39","30_39","31_39","34_39","35_39","36_39","37_39","38_39","39_39"}, <40> {"0_40","1_40","40_40"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Defend"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Military"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Practice"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Vehicle"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Working_on"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Ride_vehicle"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Evidence"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Cause_to_make_progress"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Suitability"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Existence"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Substance"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Weapon"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Defend"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Military"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Practice"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Vehicle"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Working_on"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Ride_vehicle"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Quantity"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Evidence"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Cause_to_make_progress"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Weapon"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Weapon"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Suitability"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Weapon"] do sum <s> in Spans : z17[r,s] == 1;
#pairwise exclusion constraint
set Exc9 := {<"Goal","Salient_entity">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc10 := {<"Area","Source">,<"Area","Goal">,<"Area","Path">};
subto exclusion10: forall <ri,rj> in Exc10 do z10[ri,"-1_-1"] + z10[rj,"-1_-1"] >= 1;
set Exc11 := {<"Individuals","Mass">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

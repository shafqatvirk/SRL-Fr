# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Part_orientational","Separating","Rest","Age","Political_locales","Containing","Locative_relation","Besieging","Quantity","Calendric_unit","Military","Getting","Political_locales","Building_subparts","Attaching","Political_locales","Natural_features","Locale"};
set Roles[Frames] :=  <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Separating"> {"Criterion","Result","Recipients","Time","Instrument","Place","Degree","Means","Cause","Whole","Part_2","Part_1","Parts","Manner","Agent"}, <"Rest"> {"Part","Whole","Rest"}, <"Age"> {"Attribute","Degree","Entity","Time","Expressor","Duration","Age","Descriptor"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Containing"> {"Container","Time","Contents"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Besieging"> {"Time","Assailant","Weapon","Victim","Place","Duration"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Military"> {"Members","Descriptor","Possessor","Goal","Domain","Force"}, <"Getting"> {"Recipient","Result","Time","Place","Purpose","Means","Source","Theme","Reason","Beneficiary","Manner","Concessive"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Building_subparts"> {"Whole","Type","Building_part","Use"}, <"Attaching"> {"Purpose","Result","Time","Goal","Instrument","Place","Connector","Means","Items","Period_of_iterations","Handle","Duration","Item","Manner","Agent"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_1","0_2","0_34","10_10","11_11","12_12","13_13","13_33","14_14","15_15","15_16","16_16","17_17","17_19","18_18","18_19","19_19","1_1","1_2","20_20","20_33","21_21","21_22","21_33","22_22","23_23","23_33","24_24","24_26","24_33","25_25","26_26","27_27","27_33","28_28","28_29","29_29","2_2","30_30","30_33","31_31","31_33","32_32","33_33","34_34","3_3","3_34","4_11","4_4","5_11","5_5","5_6","6_6","7_11","7_7","8_11","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Part_orientational"]] binary;
var z1[Assignment["Separating"]] binary;
var z2[Assignment["Rest"]] binary;
var z3[Assignment["Age"]] binary;
var z4[Assignment["Political_locales"]] binary;
var z5[Assignment["Containing"]] binary;
var z6[Assignment["Locative_relation"]] binary;
var z7[Assignment["Besieging"]] binary;
var z8[Assignment["Quantity"]] binary;
var z9[Assignment["Calendric_unit"]] binary;
var z10[Assignment["Military"]] binary;
var z11[Assignment["Getting"]] binary;
var z12[Assignment["Political_locales"]] binary;
var z13[Assignment["Building_subparts"]] binary;
var z14[Assignment["Attaching"]] binary;
var z15[Assignment["Political_locales"]] binary;
var z16[Assignment["Natural_features"]] binary;
var z17[Assignment["Locale"]] binary;
param probabilities0[Assignment["Part_orientational"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Separating"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Rest"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Age"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Political_locales"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Containing"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locative_relation"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Besieging"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Quantity"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Calendric_unit"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Military"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Getting"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Political_locales"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Building_subparts"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Attaching"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Political_locales"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Natural_features"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Locale"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Part_orientational"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Separating"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Rest"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Age"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Containing"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Besieging"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Military"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Getting"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Building_subparts"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Attaching"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities17[r,s] * z17[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 34};
set G[I] := <0> {"0_0","0_1","0_2","0_34"}, <1> {"0_1","0_2","0_34","1_1","1_2"}, <2> {"0_2","0_34","1_2","2_2"}, <3> {"0_34","3_3","3_34"}, <4> {"0_34","3_34","4_11","4_4"}, <5> {"0_34","3_34","4_11","5_11","5_5","5_6"}, <6> {"0_34","3_34","4_11","5_11","5_6","6_6"}, <7> {"0_34","3_34","4_11","5_11","7_11","7_7"}, <8> {"0_34","3_34","4_11","5_11","7_11","8_11","8_8"}, <9> {"0_34","3_34","4_11","5_11","7_11","8_11","9_9"}, <10> {"0_34","10_10","3_34","4_11","5_11","7_11","8_11"}, <11> {"0_34","11_11","3_34","4_11","5_11","7_11","8_11"}, <12> {"0_34","12_12","3_34"}, <13> {"0_34","13_13","13_33","3_34"}, <14> {"0_34","13_33","14_14","3_34"}, <15> {"0_34","13_33","15_15","15_16","3_34"}, <16> {"0_34","13_33","15_16","16_16","3_34"}, <17> {"0_34","13_33","17_17","17_19","3_34"}, <18> {"0_34","13_33","17_19","18_18","18_19","3_34"}, <19> {"0_34","13_33","17_19","18_19","19_19","3_34"}, <20> {"0_34","13_33","20_20","20_33","3_34"}, <21> {"0_34","13_33","20_33","21_21","21_22","21_33","3_34"}, <22> {"0_34","13_33","20_33","21_22","21_33","22_22","3_34"}, <23> {"0_34","13_33","20_33","21_33","23_23","23_33","3_34"}, <24> {"0_34","13_33","20_33","21_33","23_33","24_24","24_26","24_33","3_34"}, <25> {"0_34","13_33","20_33","21_33","23_33","24_26","24_33","25_25","3_34"}, <26> {"0_34","13_33","20_33","21_33","23_33","24_26","24_33","26_26","3_34"}, <27> {"0_34","13_33","20_33","21_33","23_33","24_33","27_27","27_33","3_34"}, <28> {"0_34","13_33","20_33","21_33","23_33","24_33","27_33","28_28","28_29","3_34"}, <29> {"0_34","13_33","20_33","21_33","23_33","24_33","27_33","28_29","29_29","3_34"}, <30> {"0_34","13_33","20_33","21_33","23_33","24_33","27_33","30_30","30_33","3_34"}, <31> {"0_34","13_33","20_33","21_33","23_33","24_33","27_33","30_33","31_31","31_33","3_34"}, <32> {"0_34","13_33","20_33","21_33","23_33","24_33","27_33","30_33","31_33","32_32","3_34"}, <33> {"0_34","13_33","20_33","21_33","23_33","24_33","27_33","30_33","31_33","33_33","3_34"}, <34> {"0_34","34_34","3_34"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Separating"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Rest"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Age"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Containing"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Besieging"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Military"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Getting"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Building_subparts"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Attaching"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Separating"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Rest"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Age"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Containing"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Besieging"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Quantity"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Military"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Getting"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Building_subparts"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Attaching"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Locale"] do sum <s> in Spans : z17[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Agent","Cause">,<"Part_2","Parts">,<"Part_1","Parts">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc3 := {<"Entity","Expressor">,<"Age","Degree">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc6 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc8 := {<"Individuals","Mass">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc14 := {<"Item","Items">,<"Goal","Items">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr1 := {<"Part_1","Part_2">,<"Parts","Whole">};
subto require1: forall <ri,rj> in Reqr1 do z1[ri,"-1_-1"] - z1[rj,"-1_-1"] == 0;
set Reqr14 := {<"Goal","Item">};
subto require14: forall <ri,rj> in Reqr14 do z14[ri,"-1_-1"] - z14[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Capability","Commerce_buy","Cardinal_numbers","Cardinal_numbers","Type","Temporal_collocation","Choosing","Active_substance","Type","Awareness","Political_locales","Leadership","Secrecy_status","Intentionally_act","Type","Awareness","Size","Leadership","Secrecy_status","Cure","People_by_vocation","Seeking_to_achieve","Emotion_directed"};
set Roles[Frames] :=  <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Commerce_buy"> {"Recipient","Time","Goods","Place","Purpose_of_goods","Seller","Purpose","Rate","Manner","Buyer","Means","Money"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Type"> {"Item_Property","Category","Subtype","Type_Property"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Choosing"> {"Contrast","Possibilities","Cognizer","Topic","Manner","Chosen","Time","Reason","Intended_purpose"}, <"Active_substance"> {"Name","Type","Substance","Descriptor","Effect"}, <"Type"> {"Item_Property","Category","Subtype","Type_Property"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Secrecy_status"> {"Time","Phenomenon","Degree","Epistemic_stance","Cognizer"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Type"> {"Item_Property","Category","Subtype","Type_Property"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Size"> {"Degree","Entity"}, <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Secrecy_status"> {"Time","Phenomenon","Degree","Epistemic_stance","Cognizer"}, <"Cure"> {"Duration","Place","Degree","Patient","Manner","Treatment","Healer","Time","Medication","Body_part","Affliction"}, <"People_by_vocation"> {"Type","Origin","Contract_basis","Ethnicity","Employer","Place_of_employment","Person","Descriptor","Rank","Compensation","Persistent_characteristic"}, <"Seeking_to_achieve"> {"Purpose","Circumstances","State_of_affairs","Degree","Means","Source","Sought_entity","Depictive","Duration","Time","Beneficiary","Manner","Explanation","Agent"}, <"Emotion_directed"> {"Topic","Circumstances","Parameter","Degree","Experiencer","Event","Expressor","Reason","Empathy_target","Manner","State","Stimulus","Frequency"};
set Spans := {"-1_-1","0_0","0_1","0_65","10_10","11_11","11_16","12_12","12_13","12_16","13_13","13_16","14_14","14_16","15_15","16_16","17_17","18_18","18_20","18_39","18_44","18_64","19_19","1_1","20_20","21_21","21_39","22_22","22_39","23_23","23_39","24_24","24_26","25_25","26_26","27_27","28_28","28_39","29_29","29_30","29_39","2_2","30_30","31_31","31_39","32_32","32_33","32_39","33_33","34_34","34_39","35_35","35_36","35_39","36_36","37_37","37_39","38_38","38_39","39_39","3_3","40_40","41_41","42_42","43_43","44_44","45_45","45_64","46_46","46_64","47_47","47_64","48_48","48_49","49_49","4_4","50_50","51_51","51_64","52_52","52_53","52_64","53_53","54_54","54_64","55_55","55_64","56_56","56_58","57_57","58_58","59_59","59_64","5_5","5_64","60_60","60_61","60_64","61_61","62_62","62_64","63_63","63_64","64_64","65_65","6_6","7_10","7_7","8_10","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Capability"]] binary;
var z1[Assignment["Commerce_buy"]] binary;
var z2[Assignment["Cardinal_numbers"]] binary;
var z3[Assignment["Cardinal_numbers"]] binary;
var z4[Assignment["Type"]] binary;
var z5[Assignment["Temporal_collocation"]] binary;
var z6[Assignment["Choosing"]] binary;
var z7[Assignment["Active_substance"]] binary;
var z8[Assignment["Type"]] binary;
var z9[Assignment["Awareness"]] binary;
var z10[Assignment["Political_locales"]] binary;
var z11[Assignment["Leadership"]] binary;
var z12[Assignment["Secrecy_status"]] binary;
var z13[Assignment["Intentionally_act"]] binary;
var z14[Assignment["Type"]] binary;
var z15[Assignment["Awareness"]] binary;
var z16[Assignment["Size"]] binary;
var z17[Assignment["Leadership"]] binary;
var z18[Assignment["Secrecy_status"]] binary;
var z19[Assignment["Cure"]] binary;
var z20[Assignment["People_by_vocation"]] binary;
var z21[Assignment["Seeking_to_achieve"]] binary;
var z22[Assignment["Emotion_directed"]] binary;
param probabilities0[Assignment["Capability"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Commerce_buy"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Cardinal_numbers"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Cardinal_numbers"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Type"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Temporal_collocation"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Choosing"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Active_substance"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Type"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Awareness"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Political_locales"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Leadership"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Secrecy_status"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Intentionally_act"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Type"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Awareness"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Size"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Leadership"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Secrecy_status"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Cure"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["People_by_vocation"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Seeking_to_achieve"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Emotion_directed"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Capability"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Commerce_buy"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Type"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Choosing"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Active_substance"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Type"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Secrecy_status"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Type"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Size"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Leadership"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Secrecy_status"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Cure"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["People_by_vocation"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Seeking_to_achieve"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Emotion_directed"] : probabilities22[r,s] * z22[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 65};
set G[I] := <0> {"0_0","0_1","0_65"}, <1> {"0_1","0_65","1_1"}, <2> {"0_65","2_2"}, <3> {"0_65","3_3"}, <4> {"0_65","4_4"}, <5> {"0_65","5_5","5_64"}, <6> {"0_65","5_64","6_6"}, <7> {"0_65","5_64","7_10","7_7"}, <8> {"0_65","5_64","7_10","8_10","8_8"}, <9> {"0_65","5_64","7_10","8_10","9_10","9_9"}, <10> {"0_65","10_10","5_64","7_10","8_10","9_10"}, <11> {"0_65","11_11","11_16","5_64"}, <12> {"0_65","11_16","12_12","12_13","12_16","5_64"}, <13> {"0_65","11_16","12_13","12_16","13_13","13_16","5_64"}, <14> {"0_65","11_16","12_16","13_16","14_14","14_16","5_64"}, <15> {"0_65","11_16","12_16","13_16","14_16","15_15","5_64"}, <16> {"0_65","11_16","12_16","13_16","14_16","16_16","5_64"}, <17> {"0_65","17_17","5_64"}, <18> {"0_65","18_18","18_20","18_39","18_44","18_64","5_64"}, <19> {"0_65","18_20","18_39","18_44","18_64","19_19","5_64"}, <20> {"0_65","18_20","18_39","18_44","18_64","20_20","5_64"}, <21> {"0_65","18_39","18_44","18_64","21_21","21_39","5_64"}, <22> {"0_65","18_39","18_44","18_64","21_39","22_22","22_39","5_64"}, <23> {"0_65","18_39","18_44","18_64","21_39","22_39","23_23","23_39","5_64"}, <24> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","24_24","24_26","5_64"}, <25> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","24_26","25_25","5_64"}, <26> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","24_26","26_26","5_64"}, <27> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","27_27","5_64"}, <28> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_28","28_39","5_64"}, <29> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_29","29_30","29_39","5_64"}, <30> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_30","29_39","30_30","5_64"}, <31> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_31","31_39","5_64"}, <32> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_32","32_33","32_39","5_64"}, <33> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_33","32_39","33_33","5_64"}, <34> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_39","34_34","34_39","5_64"}, <35> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_39","34_39","35_35","35_36","35_39","5_64"}, <36> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_39","34_39","35_36","35_39","36_36","5_64"}, <37> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_39","34_39","35_39","37_37","37_39","5_64"}, <38> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_39","34_39","35_39","37_39","38_38","38_39","5_64"}, <39> {"0_65","18_39","18_44","18_64","21_39","22_39","23_39","28_39","29_39","31_39","32_39","34_39","35_39","37_39","38_39","39_39","5_64"}, <40> {"0_65","18_44","18_64","40_40","5_64"}, <41> {"0_65","18_44","18_64","41_41","5_64"}, <42> {"0_65","18_44","18_64","42_42","5_64"}, <43> {"0_65","18_44","18_64","43_43","5_64"}, <44> {"0_65","18_44","18_64","44_44","5_64"}, <45> {"0_65","18_64","45_45","45_64","5_64"}, <46> {"0_65","18_64","45_64","46_46","46_64","5_64"}, <47> {"0_65","18_64","45_64","46_64","47_47","47_64","5_64"}, <48> {"0_65","18_64","45_64","46_64","47_64","48_48","48_49","5_64"}, <49> {"0_65","18_64","45_64","46_64","47_64","48_49","49_49","5_64"}, <50> {"0_65","18_64","45_64","46_64","47_64","50_50","5_64"}, <51> {"0_65","18_64","45_64","46_64","47_64","51_51","51_64","5_64"}, <52> {"0_65","18_64","45_64","46_64","47_64","51_64","52_52","52_53","52_64","5_64"}, <53> {"0_65","18_64","45_64","46_64","47_64","51_64","52_53","52_64","53_53","5_64"}, <54> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_54","54_64","5_64"}, <55> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_55","55_64","5_64"}, <56> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","56_56","56_58","5_64"}, <57> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","56_58","57_57","5_64"}, <58> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","56_58","58_58","5_64"}, <59> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","59_59","59_64","5_64"}, <60> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","59_64","5_64","60_60","60_61","60_64"}, <61> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","59_64","5_64","60_61","60_64","61_61"}, <62> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","59_64","5_64","60_64","62_62","62_64"}, <63> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","59_64","5_64","60_64","62_64","63_63","63_64"}, <64> {"0_65","18_64","45_64","46_64","47_64","51_64","52_64","54_64","55_64","59_64","5_64","60_64","62_64","63_64","64_64"}, <65> {"0_65","65_65"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Commerce_buy"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Type"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Choosing"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Active_substance"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Type"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Secrecy_status"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Type"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Size"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Secrecy_status"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Cure"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["People_by_vocation"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Seeking_to_achieve"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Emotion_directed"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Capability"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Commerce_buy"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Type"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Choosing"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Active_substance"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Type"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Awareness"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Leadership"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Secrecy_status"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Type"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Awareness"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Size"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Leadership"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Secrecy_status"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Cure"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["People_by_vocation"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Seeking_to_achieve"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Emotion_directed"] do sum <s> in Spans : z22[r,s] == 1;
#pairwise exclusion constraint
set Exc5 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc9 := {<"Cognizer","Expressor">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc15 := {<"Cognizer","Expressor">};
subto exclusion15: forall <ri,rj> in Exc15 do z15[ri,"-1_-1"] + z15[rj,"-1_-1"] >= 1;
set Exc21 := {<"Sought_entity","State_of_affairs">};
subto exclusion21: forall <ri,rj> in Exc21 do z21[ri,"-1_-1"] + z21[rj,"-1_-1"] >= 1;
set Exc22 := {<"Event","Experiencer">,<"Experiencer","Expressor">,<"Event","Expressor">};
subto exclusion22: forall <ri,rj> in Exc22 do z22[ri,"-1_-1"] + z22[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

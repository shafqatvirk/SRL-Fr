# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Quantity","Weapon","Telling","Sending","Experiencer_obj","Temporal_collocation","Calendric_unit","Time_vector","Calendric_unit","Telling","Origin","Being_at_risk","Possession","Communicate_categorization","Locale_by_use","Artifact"};
set Roles[Frames] :=  <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Telling"> {"Iteration","Topic","Time","Descriptor","Place","Addressee","Epistemic_stance","Manner","Means","Message","Speaker","Medium"}, <"Sending"> {"Recipient","Depictive","Time","Place","Goal","Co_theme","Theme","Purpose","Source","Sender","Reason","Transport_means","Container","Path"}, <"Experiencer_obj"> {"Result","Degree","Manner","Explanation","Experiencer","Time","Circumstances","Means","Stimulus"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Time_vector"> {"Distance","Event","Landmark_event","Direction"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Telling"> {"Iteration","Topic","Time","Descriptor","Place","Addressee","Epistemic_stance","Manner","Means","Message","Speaker","Medium"}, <"Origin"> {"Entity","Origin"}, <"Being_at_risk"> {"Domain","Time","Place","Degree","Situation","Asset","Harmful_event","Depictive","Duration","Dangerous_entity","Frequency","Explanation"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Communicate_categorization"> {"Medium","Item","Manner","Criteria","Time","Circumstances","Speaker","Means","Category"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"};
set Spans := {"-1_-1","0_0","0_40","10_10","11_11","12_12","13_13","13_17","14_14","14_17","15_15","16_16","17_17","18_18","19_19","1_1","1_40","20_20","21_21","21_24","22_22","23_23","24_24","25_25","25_38","26_26","27_27","27_38","28_28","28_38","29_29","29_30","29_34","2_2","2_3","30_30","31_31","31_34","32_32","32_34","33_33","34_34","35_35","35_38","36_36","36_38","37_37","38_38","39_39","3_3","40_40","4_38","4_4","4_5","5_38","5_5","6_38","6_6","7_38","7_7","8_10","8_11","8_38","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Quantity"]] binary;
var z1[Assignment["Weapon"]] binary;
var z2[Assignment["Telling"]] binary;
var z3[Assignment["Sending"]] binary;
var z4[Assignment["Experiencer_obj"]] binary;
var z5[Assignment["Temporal_collocation"]] binary;
var z6[Assignment["Calendric_unit"]] binary;
var z7[Assignment["Time_vector"]] binary;
var z8[Assignment["Calendric_unit"]] binary;
var z9[Assignment["Telling"]] binary;
var z10[Assignment["Origin"]] binary;
var z11[Assignment["Being_at_risk"]] binary;
var z12[Assignment["Possession"]] binary;
var z13[Assignment["Communicate_categorization"]] binary;
var z14[Assignment["Locale_by_use"]] binary;
var z15[Assignment["Artifact"]] binary;
param probabilities0[Assignment["Quantity"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Weapon"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Telling"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Sending"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Experiencer_obj"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Temporal_collocation"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Calendric_unit"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Time_vector"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Calendric_unit"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Telling"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Origin"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Being_at_risk"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Possession"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Communicate_categorization"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Locale_by_use"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Artifact"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Quantity"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Telling"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Sending"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Experiencer_obj"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Time_vector"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Telling"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Being_at_risk"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Communicate_categorization"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities15[r,s] * z15[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 40};
set G[I] := <0> {"0_0","0_40"}, <1> {"0_40","1_1","1_40"}, <2> {"0_40","1_40","2_2","2_3"}, <3> {"0_40","1_40","2_3","3_3"}, <4> {"0_40","1_40","4_38","4_4","4_5"}, <5> {"0_40","1_40","4_38","4_5","5_38","5_5"}, <6> {"0_40","1_40","4_38","5_38","6_38","6_6"}, <7> {"0_40","1_40","4_38","5_38","6_38","7_38","7_7"}, <8> {"0_40","1_40","4_38","5_38","6_38","7_38","8_10","8_11","8_38","8_8"}, <9> {"0_40","1_40","4_38","5_38","6_38","7_38","8_10","8_11","8_38","9_9"}, <10> {"0_40","10_10","1_40","4_38","5_38","6_38","7_38","8_10","8_11","8_38"}, <11> {"0_40","11_11","1_40","4_38","5_38","6_38","7_38","8_11","8_38"}, <12> {"0_40","12_12","1_40","4_38","5_38","6_38","7_38","8_38"}, <13> {"0_40","13_13","13_17","1_40","4_38","5_38","6_38","7_38","8_38"}, <14> {"0_40","13_17","14_14","14_17","1_40","4_38","5_38","6_38","7_38","8_38"}, <15> {"0_40","13_17","14_17","15_15","1_40","4_38","5_38","6_38","7_38","8_38"}, <16> {"0_40","13_17","14_17","16_16","1_40","4_38","5_38","6_38","7_38","8_38"}, <17> {"0_40","13_17","14_17","17_17","1_40","4_38","5_38","6_38","7_38","8_38"}, <18> {"0_40","18_18","1_40","4_38","5_38","6_38","7_38","8_38"}, <19> {"0_40","19_19","1_40","4_38","5_38","6_38","7_38","8_38"}, <20> {"0_40","1_40","20_20","4_38","5_38","6_38","7_38","8_38"}, <21> {"0_40","1_40","21_21","21_24","4_38","5_38","6_38","7_38","8_38"}, <22> {"0_40","1_40","21_24","22_22","4_38","5_38","6_38","7_38","8_38"}, <23> {"0_40","1_40","21_24","23_23","4_38","5_38","6_38","7_38","8_38"}, <24> {"0_40","1_40","21_24","24_24","4_38","5_38","6_38","7_38","8_38"}, <25> {"0_40","1_40","25_25","25_38","4_38","5_38","6_38","7_38","8_38"}, <26> {"0_40","1_40","25_38","26_26","4_38","5_38","6_38","7_38","8_38"}, <27> {"0_40","1_40","25_38","27_27","27_38","4_38","5_38","6_38","7_38","8_38"}, <28> {"0_40","1_40","25_38","27_38","28_28","28_38","4_38","5_38","6_38","7_38","8_38"}, <29> {"0_40","1_40","25_38","27_38","28_38","29_29","29_30","29_34","4_38","5_38","6_38","7_38","8_38"}, <30> {"0_40","1_40","25_38","27_38","28_38","29_30","29_34","30_30","4_38","5_38","6_38","7_38","8_38"}, <31> {"0_40","1_40","25_38","27_38","28_38","29_34","31_31","31_34","4_38","5_38","6_38","7_38","8_38"}, <32> {"0_40","1_40","25_38","27_38","28_38","29_34","31_34","32_32","32_34","4_38","5_38","6_38","7_38","8_38"}, <33> {"0_40","1_40","25_38","27_38","28_38","29_34","31_34","32_34","33_33","4_38","5_38","6_38","7_38","8_38"}, <34> {"0_40","1_40","25_38","27_38","28_38","29_34","31_34","32_34","34_34","4_38","5_38","6_38","7_38","8_38"}, <35> {"0_40","1_40","25_38","27_38","28_38","35_35","35_38","4_38","5_38","6_38","7_38","8_38"}, <36> {"0_40","1_40","25_38","27_38","28_38","35_38","36_36","36_38","4_38","5_38","6_38","7_38","8_38"}, <37> {"0_40","1_40","25_38","27_38","28_38","35_38","36_38","37_37","4_38","5_38","6_38","7_38","8_38"}, <38> {"0_40","1_40","25_38","27_38","28_38","35_38","36_38","38_38","4_38","5_38","6_38","7_38","8_38"}, <39> {"0_40","1_40","39_39"}, <40> {"0_40","1_40","40_40"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Telling"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Sending"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Experiencer_obj"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Time_vector"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Telling"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Being_at_risk"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Communicate_categorization"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Quantity"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Weapon"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Telling"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Sending"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Experiencer_obj"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Time_vector"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Telling"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Origin"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Being_at_risk"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Possession"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Communicate_categorization"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Artifact"] do sum <s> in Spans : z15[r,s] == 1;
#pairwise exclusion constraint
set Exc0 := {<"Individuals","Mass">};
subto exclusion0: forall <ri,rj> in Exc0 do z0[ri,"-1_-1"] + z0[rj,"-1_-1"] >= 1;
set Exc5 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc11 := {<"Dangerous_entity","Harmful_event">};
subto exclusion11: forall <ri,rj> in Exc11 do z11[ri,"-1_-1"] + z11[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

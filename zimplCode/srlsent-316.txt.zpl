# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Part_orientational","Unattributed_information","Intentionally_create","Locale_by_use","Manufacturing","Weapon","Locale_by_use","Giving","Capability","Manufacturing","Store","Substance","Substance","Ingestion","Natural_features","Gizmo","Locale_by_use"};
set Roles[Frames] :=  <"Part_orientational"> {"Part_Prop","Part","Whole"}, <"Unattributed_information"> {"Reported_fact","Time","Explanation","Duration"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Giving"> {"Recipient","Donor","Circumstances","Time","Place","Theme","Purpose","Means","Period_of_iterations","Reason","Depictive","Purpose_of_theme","Manner"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Manufacturing"> {"Purpose","Circumstances","Time","Manufacturer","Instrument","Place","Frequency","Resource","Means","Locus","Consumer","Depictive","Factory","Product","Manner"}, <"Store"> {"Possessor","Descriptor","Supply","Resource"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Substance"> {"Source","Type","Use","Descriptor","Substance","Constituents"}, <"Ingestion"> {"Place","Instrument","Ingestibles","Source","Manner","Time","Means","Ingestor"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Gizmo"> {"Descriptor","Power_source","Gizmo","Use","User"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_1","0_42","10_10","10_41","11_11","11_41","12_12","13_13","14_14","15_15","16_16","16_41","17_17","17_41","18_18","18_41","19_19","19_20","19_41","1_1","20_20","21_21","21_22","21_41","22_22","22_41","23_23","23_24","23_41","24_24","25_25","25_41","26_26","26_27","26_41","27_27","27_41","28_28","28_29","28_30","28_31","28_41","29_29","29_30","2_2","2_42","30_30","31_31","31_41","32_32","32_41","33_33","33_41","34_34","34_35","34_37","35_35","36_36","36_37","37_37","38_38","38_41","39_39","39_41","3_3","40_40","41_41","42_42","4_4","4_41","5_41","5_5","5_6","6_6","7_41","7_7","8_41","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Part_orientational"]] binary;
var z1[Assignment["Unattributed_information"]] binary;
var z2[Assignment["Intentionally_create"]] binary;
var z3[Assignment["Locale_by_use"]] binary;
var z4[Assignment["Manufacturing"]] binary;
var z5[Assignment["Weapon"]] binary;
var z6[Assignment["Locale_by_use"]] binary;
var z7[Assignment["Giving"]] binary;
var z8[Assignment["Capability"]] binary;
var z9[Assignment["Manufacturing"]] binary;
var z10[Assignment["Store"]] binary;
var z11[Assignment["Substance"]] binary;
var z12[Assignment["Substance"]] binary;
var z13[Assignment["Ingestion"]] binary;
var z14[Assignment["Natural_features"]] binary;
var z15[Assignment["Gizmo"]] binary;
var z16[Assignment["Locale_by_use"]] binary;
param probabilities0[Assignment["Part_orientational"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Unattributed_information"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Intentionally_create"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Locale_by_use"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Manufacturing"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Weapon"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locale_by_use"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Giving"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Capability"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Manufacturing"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Store"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Substance"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Substance"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Ingestion"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Natural_features"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Gizmo"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Locale_by_use"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Part_orientational"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Unattributed_information"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Giving"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Manufacturing"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Store"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Substance"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Ingestion"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Gizmo"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities16[r,s] * z16[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 42};
set G[I] := <0> {"0_0","0_1","0_42"}, <1> {"0_1","0_42","1_1"}, <2> {"0_42","2_2","2_42"}, <3> {"0_42","2_42","3_3"}, <4> {"0_42","2_42","4_4","4_41"}, <5> {"0_42","2_42","4_41","5_41","5_5","5_6"}, <6> {"0_42","2_42","4_41","5_41","5_6","6_6"}, <7> {"0_42","2_42","4_41","5_41","7_41","7_7"}, <8> {"0_42","2_42","4_41","5_41","7_41","8_41","8_8"}, <9> {"0_42","2_42","4_41","5_41","7_41","8_41","9_9"}, <10> {"0_42","10_10","10_41","2_42","4_41","5_41","7_41","8_41"}, <11> {"0_42","10_41","11_11","11_41","2_42","4_41","5_41","7_41","8_41"}, <12> {"0_42","10_41","11_41","12_12","2_42","4_41","5_41","7_41","8_41"}, <13> {"0_42","10_41","11_41","13_13","2_42","4_41","5_41","7_41","8_41"}, <14> {"0_42","10_41","11_41","14_14","2_42","4_41","5_41","7_41","8_41"}, <15> {"0_42","10_41","11_41","15_15","2_42","4_41","5_41","7_41","8_41"}, <16> {"0_42","10_41","11_41","16_16","16_41","2_42","4_41","5_41","7_41","8_41"}, <17> {"0_42","10_41","11_41","16_41","17_17","17_41","2_42","4_41","5_41","7_41","8_41"}, <18> {"0_42","10_41","11_41","16_41","17_41","18_18","18_41","2_42","4_41","5_41","7_41","8_41"}, <19> {"0_42","10_41","11_41","16_41","17_41","18_41","19_19","19_20","19_41","2_42","4_41","5_41","7_41","8_41"}, <20> {"0_42","10_41","11_41","16_41","17_41","18_41","19_20","19_41","20_20","2_42","4_41","5_41","7_41","8_41"}, <21> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_21","21_22","21_41","2_42","4_41","5_41","7_41","8_41"}, <22> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_22","21_41","22_22","22_41","2_42","4_41","5_41","7_41","8_41"}, <23> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_23","23_24","23_41","2_42","4_41","5_41","7_41","8_41"}, <24> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_24","23_41","24_24","2_42","4_41","5_41","7_41","8_41"}, <25> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_25","25_41","2_42","4_41","5_41","7_41","8_41"}, <26> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_26","26_27","26_41","2_42","4_41","5_41","7_41","8_41"}, <27> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_27","26_41","27_27","27_41","2_42","4_41","5_41","7_41","8_41"}, <28> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_28","28_29","28_30","28_31","28_41","2_42","4_41","5_41","7_41","8_41"}, <29> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_29","28_30","28_31","28_41","29_29","29_30","2_42","4_41","5_41","7_41","8_41"}, <30> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_30","28_31","28_41","29_30","2_42","30_30","4_41","5_41","7_41","8_41"}, <31> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_31","28_41","2_42","31_31","31_41","4_41","5_41","7_41","8_41"}, <32> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_32","32_41","4_41","5_41","7_41","8_41"}, <33> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_33","33_41","4_41","5_41","7_41","8_41"}, <34> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","34_34","34_35","34_37","4_41","5_41","7_41","8_41"}, <35> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","34_35","34_37","35_35","4_41","5_41","7_41","8_41"}, <36> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","34_37","36_36","36_37","4_41","5_41","7_41","8_41"}, <37> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","34_37","36_37","37_37","4_41","5_41","7_41","8_41"}, <38> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","38_38","38_41","4_41","5_41","7_41","8_41"}, <39> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","38_41","39_39","39_41","4_41","5_41","7_41","8_41"}, <40> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","38_41","39_41","40_40","4_41","5_41","7_41","8_41"}, <41> {"0_42","10_41","11_41","16_41","17_41","18_41","19_41","21_41","22_41","23_41","25_41","26_41","27_41","28_41","2_42","31_41","32_41","33_41","38_41","39_41","41_41","4_41","5_41","7_41","8_41"}, <42> {"0_42","2_42","42_42"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Part_orientational"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Unattributed_information"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Giving"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Manufacturing"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Store"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Substance"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Ingestion"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Gizmo"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Part_orientational"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Unattributed_information"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Weapon"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Giving"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Capability"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Manufacturing"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Store"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Substance"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Substance"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Ingestion"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Gizmo"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z16[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

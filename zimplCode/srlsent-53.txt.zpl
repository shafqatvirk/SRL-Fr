# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Commerce_sell","Locale_by_use","Roadways"};
set Roles[Frames] :=  <"Commerce_sell"> {"Purpose","Result","Unit","Purpose_of_Goods","Goods","Place","Seller","Rate","Manner","Relay","Buyer","Means","Time","Money"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"};
set Spans := {"-1_-1","0_0","0_10","10_10","1_1","1_10","2_2","2_3","2_6","3_3","3_6","4_4","4_6","5_5","5_6","6_6","7_7","7_9","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Commerce_sell"]] binary;
var z1[Assignment["Locale_by_use"]] binary;
var z2[Assignment["Roadways"]] binary;
param probabilities0[Assignment["Commerce_sell"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Locale_by_use"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Roadways"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Commerce_sell"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities2[r,s] * z2[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 10};
set G[I] := <0> {"0_0","0_10"}, <1> {"0_10","1_1","1_10"}, <2> {"0_10","1_10","2_2","2_3","2_6"}, <3> {"0_10","1_10","2_3","2_6","3_3","3_6"}, <4> {"0_10","1_10","2_6","3_6","4_4","4_6"}, <5> {"0_10","1_10","2_6","3_6","4_6","5_5","5_6"}, <6> {"0_10","1_10","2_6","3_6","4_6","5_6","6_6"}, <7> {"0_10","1_10","7_7","7_9"}, <8> {"0_10","1_10","7_9","8_8","8_9"}, <9> {"0_10","1_10","7_9","8_9","9_9"}, <10> {"0_10","10_10","1_10"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Commerce_sell"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Commerce_sell"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Roadways"] do sum <s> in Spans : z2[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Leadership","Concessive","Statement","Commitment","Proliferating_in_number","Hostile_encounter","Cognitive_connection","Artifact"};
set Roles[Frames] :=  <"Leadership"> {"Domain","Leader","Type","Depictive","Descriptor","Degree","Means","Role","Activity","Duration","Governed","Manner","Time"}, <"Concessive"> {"Main_statement","Statement"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Commitment"> {"Addressee","Medium","Topic","Manner","Speaker","Time","Message","Purpose"}, <"Proliferating_in_number"> {"Difference","Circumstances","Final_number","Time","Final_state","Place","Degree","Set","Final_correlate","Duration","Attribute","Initial_correlate","Initial_number","Manner","Speed"}, <"Hostile_encounter"> {"Purpose","Result","Depictive","Instrument","Place","Degree","Means","Internal_cause","Reason","Particular_iteration","Duration","Sides","Issue","Side_2","Side_1","Manner","Time"}, <"Cognitive_connection"> {"Point_of_view","Circumstances","Specification","Concept_2","Concept_1","Degree","Concepts"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"};
set Spans := {"-1_-1","0_0","0_19","0_2","10_10","10_18","11_11","11_18","12_12","12_13","12_18","13_13","14_14","14_18","15_15","15_18","16_16","17_17","18_18","19_19","1_1","2_2","3_3","4_4","5_5","6_6","7_18","7_7","8_10","8_18","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Leadership"]] binary;
var z1[Assignment["Concessive"]] binary;
var z2[Assignment["Statement"]] binary;
var z3[Assignment["Commitment"]] binary;
var z4[Assignment["Proliferating_in_number"]] binary;
var z5[Assignment["Hostile_encounter"]] binary;
var z6[Assignment["Cognitive_connection"]] binary;
var z7[Assignment["Artifact"]] binary;
param probabilities0[Assignment["Leadership"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Concessive"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Statement"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Commitment"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Proliferating_in_number"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Hostile_encounter"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Cognitive_connection"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Artifact"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Leadership"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Concessive"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Commitment"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Proliferating_in_number"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Hostile_encounter"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Cognitive_connection"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities7[r,s] * z7[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 19};
set G[I] := <0> {"0_0","0_19","0_2"}, <1> {"0_19","0_2","1_1"}, <2> {"0_19","0_2","2_2"}, <3> {"0_19","3_3"}, <4> {"0_19","4_4"}, <5> {"0_19","5_5"}, <6> {"0_19","6_6"}, <7> {"0_19","7_18","7_7"}, <8> {"0_19","7_18","8_10","8_18","8_8","8_9"}, <9> {"0_19","7_18","8_10","8_18","8_9","9_9"}, <10> {"0_19","10_10","10_18","7_18","8_10","8_18"}, <11> {"0_19","10_18","11_11","11_18","7_18","8_18"}, <12> {"0_19","10_18","11_18","12_12","12_13","12_18","7_18","8_18"}, <13> {"0_19","10_18","11_18","12_13","12_18","13_13","7_18","8_18"}, <14> {"0_19","10_18","11_18","12_18","14_14","14_18","7_18","8_18"}, <15> {"0_19","10_18","11_18","12_18","14_18","15_15","15_18","7_18","8_18"}, <16> {"0_19","10_18","11_18","12_18","14_18","15_18","16_16","7_18","8_18"}, <17> {"0_19","10_18","11_18","12_18","14_18","15_18","17_17","7_18","8_18"}, <18> {"0_19","10_18","11_18","12_18","14_18","15_18","18_18","7_18","8_18"}, <19> {"0_19","19_19"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Leadership"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Concessive"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Commitment"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Proliferating_in_number"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Hostile_encounter"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Cognitive_connection"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Leadership"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Concessive"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Statement"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Commitment"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Proliferating_in_number"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Hostile_encounter"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Cognitive_connection"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Artifact"] do sum <s> in Spans : z7[r,s] == 1;
#pairwise exclusion constraint
set Exc5 := {<"Side_1","Sides">,<"Side_2","Sides">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc6 := {<"Concept_2","Concepts">,<"Concept_1","Concepts">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr5 := {<"Side_1","Side_2">};
subto require5: forall <ri,rj> in Reqr5 do z5[ri,"-1_-1"] - z5[rj,"-1_-1"] == 0;

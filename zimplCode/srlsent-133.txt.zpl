# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Locale_by_use","Locale_by_use","Roadways","Openness","Calendric_unit","Calendric_unit","Cardinal_numbers","Statement","Expensiveness","Containing","Importance","Aggregate","Part_whole","Personal_relationship","Inclusion"};
set Roles[Frames] :=  <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Roadways"> {"Characteristic","Length","Use","Frequency_of_use","Goal","Relative_location","Endpoints","Direction","Source","Material","Path","Roadway","Name","Abundant_entities"}, <"Openness"> {"Useful_location","Barrier"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Cardinal_numbers"> {"Precision","Number","Multiplier","Entity"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Expensiveness"> {"Asset","Goods","Rate","Origin","Intended_event","Degree","Payer"}, <"Containing"> {"Container","Time","Contents"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Aggregate"> {"Individuals","AggregateProperty","Aggregate","Name","Domain","Container_possessor"}, <"Part_whole"> {"Part","Whole","Part_Prop","Orientation"}, <"Personal_relationship"> {"Duration","Relationship","Degree","Partner_2","Partner_1","Source_of_relationship","Partners","Means","Manner","Depictive"}, <"Inclusion"> {"Purpose","Total","Contrast_set","Subregion","Frequency","Part"};
set Spans := {"-1_-1","0_0","0_13","0_2","0_49","0_6","10_10","11_11","11_12","12_12","13_13","14_14","15_15","15_16","16_16","17_17","18_18","18_22","19_19","19_22","1_1","20_20","21_21","21_22","22_22","23_23","24_24","24_26","25_25","25_26","26_26","27_27","28_28","28_30","28_48","29_29","2_2","30_30","31_31","31_48","32_32","32_48","33_33","34_34","34_40","35_35","36_36","36_39","37_37","37_39","38_38","38_39","39_39","3_3","40_40","41_41","42_42","43_43","44_44","44_48","45_45","45_48","46_46","47_47","48_48","49_49","4_4","5_5","6_6","7_7","8_10","8_8","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Locale_by_use"]] binary;
var z1[Assignment["Locale_by_use"]] binary;
var z2[Assignment["Roadways"]] binary;
var z3[Assignment["Openness"]] binary;
var z4[Assignment["Calendric_unit"]] binary;
var z5[Assignment["Calendric_unit"]] binary;
var z6[Assignment["Cardinal_numbers"]] binary;
var z7[Assignment["Statement"]] binary;
var z8[Assignment["Expensiveness"]] binary;
var z9[Assignment["Containing"]] binary;
var z10[Assignment["Importance"]] binary;
var z11[Assignment["Aggregate"]] binary;
var z12[Assignment["Part_whole"]] binary;
var z13[Assignment["Personal_relationship"]] binary;
var z14[Assignment["Inclusion"]] binary;
param probabilities0[Assignment["Locale_by_use"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Locale_by_use"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Roadways"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Openness"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Calendric_unit"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Calendric_unit"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Cardinal_numbers"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Statement"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Expensiveness"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Containing"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Importance"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Aggregate"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Part_whole"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Personal_relationship"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Inclusion"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Locale_by_use"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Roadways"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Openness"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Cardinal_numbers"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Expensiveness"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Containing"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Aggregate"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Part_whole"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Personal_relationship"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Inclusion"] : probabilities14[r,s] * z14[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 49};
set G[I] := <0> {"0_0","0_13","0_2","0_49","0_6"}, <1> {"0_13","0_2","0_49","0_6","1_1"}, <2> {"0_13","0_2","0_49","0_6","2_2"}, <3> {"0_13","0_49","0_6","3_3"}, <4> {"0_13","0_49","0_6","4_4"}, <5> {"0_13","0_49","0_6","5_5"}, <6> {"0_13","0_49","0_6","6_6"}, <7> {"0_13","0_49","7_7"}, <8> {"0_13","0_49","8_10","8_8"}, <9> {"0_13","0_49","8_10","9_9"}, <10> {"0_13","0_49","10_10","8_10"}, <11> {"0_13","0_49","11_11","11_12"}, <12> {"0_13","0_49","11_12","12_12"}, <13> {"0_13","0_49","13_13"}, <14> {"0_49","14_14"}, <15> {"0_49","15_15","15_16"}, <16> {"0_49","15_16","16_16"}, <17> {"0_49","17_17"}, <18> {"0_49","18_18","18_22"}, <19> {"0_49","18_22","19_19","19_22"}, <20> {"0_49","18_22","19_22","20_20"}, <21> {"0_49","18_22","19_22","21_21","21_22"}, <22> {"0_49","18_22","19_22","21_22","22_22"}, <23> {"0_49","23_23"}, <24> {"0_49","24_24","24_26"}, <25> {"0_49","24_26","25_25","25_26"}, <26> {"0_49","24_26","25_26","26_26"}, <27> {"0_49","27_27"}, <28> {"0_49","28_28","28_30","28_48"}, <29> {"0_49","28_30","28_48","29_29"}, <30> {"0_49","28_30","28_48","30_30"}, <31> {"0_49","28_48","31_31","31_48"}, <32> {"0_49","28_48","31_48","32_32","32_48"}, <33> {"0_49","28_48","31_48","32_48","33_33"}, <34> {"0_49","28_48","31_48","32_48","34_34","34_40"}, <35> {"0_49","28_48","31_48","32_48","34_40","35_35"}, <36> {"0_49","28_48","31_48","32_48","34_40","36_36","36_39"}, <37> {"0_49","28_48","31_48","32_48","34_40","36_39","37_37","37_39"}, <38> {"0_49","28_48","31_48","32_48","34_40","36_39","37_39","38_38","38_39"}, <39> {"0_49","28_48","31_48","32_48","34_40","36_39","37_39","38_39","39_39"}, <40> {"0_49","28_48","31_48","32_48","34_40","40_40"}, <41> {"0_49","28_48","31_48","32_48","41_41"}, <42> {"0_49","28_48","31_48","32_48","42_42"}, <43> {"0_49","28_48","31_48","32_48","43_43"}, <44> {"0_49","28_48","31_48","32_48","44_44","44_48"}, <45> {"0_49","28_48","31_48","32_48","44_48","45_45","45_48"}, <46> {"0_49","28_48","31_48","32_48","44_48","45_48","46_46"}, <47> {"0_49","28_48","31_48","32_48","44_48","45_48","47_47"}, <48> {"0_49","28_48","31_48","32_48","44_48","45_48","48_48"}, <49> {"0_49","49_49"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Roadways"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Openness"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Cardinal_numbers"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Expensiveness"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Containing"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Aggregate"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Part_whole"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Personal_relationship"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Inclusion"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Roadways"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Openness"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Cardinal_numbers"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Statement"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Expensiveness"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Containing"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Importance"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Aggregate"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Part_whole"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Personal_relationship"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Inclusion"] do sum <s> in Spans : z14[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Barrier","Useful_location">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc8 := {<"Goods","Intended_event">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc10 := {<"Field","Interested_party">};
subto exclusion10: forall <ri,rj> in Exc10 do z10[ri,"-1_-1"] + z10[rj,"-1_-1"] >= 1;
set Exc13 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion13: forall <ri,rj> in Exc13 do z13[ri,"-1_-1"] + z13[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr13 := {<"Partner_1","Partner_2">};
subto require13: forall <ri,rj> in Reqr13 do z13[ri,"-1_-1"] - z13[rj,"-1_-1"] == 0;

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Statement","Statement","Receiving","Artifact"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Receiving"> {"Mode_of_transfer","Place","Theme","Path","Manner","Donor","Means","Time","Purpose_of_theme","Countertransfer","Recipient"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"};
set Spans := {"-1_-1","0_0","0_16","10_10","10_12","10_15","11_11","12_12","13_13","13_14","13_15","14_14","14_15","15_15","16_16","1_1","1_16","2_15","2_2","3_15","3_3","3_4","4_15","4_4","5_15","5_5","6_6","6_8","7_7","8_8","9_15","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Statement"]] binary;
var z2[Assignment["Statement"]] binary;
var z3[Assignment["Receiving"]] binary;
var z4[Assignment["Artifact"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Statement"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Statement"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Receiving"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Artifact"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Receiving"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities4[r,s] * z4[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 16};
set G[I] := <0> {"0_0","0_16"}, <1> {"0_16","1_1","1_16"}, <2> {"0_16","1_16","2_15","2_2"}, <3> {"0_16","1_16","2_15","3_15","3_3","3_4"}, <4> {"0_16","1_16","2_15","3_15","3_4","4_15","4_4"}, <5> {"0_16","1_16","2_15","3_15","4_15","5_15","5_5"}, <6> {"0_16","1_16","2_15","3_15","4_15","5_15","6_6","6_8"}, <7> {"0_16","1_16","2_15","3_15","4_15","5_15","6_8","7_7"}, <8> {"0_16","1_16","2_15","3_15","4_15","5_15","6_8","8_8"}, <9> {"0_16","1_16","2_15","3_15","4_15","5_15","9_15","9_9"}, <10> {"0_16","10_10","10_12","10_15","1_16","2_15","3_15","4_15","5_15","9_15"}, <11> {"0_16","10_12","10_15","11_11","1_16","2_15","3_15","4_15","5_15","9_15"}, <12> {"0_16","10_12","10_15","12_12","1_16","2_15","3_15","4_15","5_15","9_15"}, <13> {"0_16","10_15","13_13","13_14","13_15","1_16","2_15","3_15","4_15","5_15","9_15"}, <14> {"0_16","10_15","13_14","13_15","14_14","14_15","1_16","2_15","3_15","4_15","5_15","9_15"}, <15> {"0_16","10_15","13_15","14_15","15_15","1_16","2_15","3_15","4_15","5_15","9_15"}, <16> {"0_16","16_16","1_16"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Receiving"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Statement"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Statement"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Receiving"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Artifact"] do sum <s> in Spans : z4[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Existence","People","Rape","Quantity","People_by_religion","People","Ingest_substance","Theft","People_by_religion","Money","Political_locales","Increment","People","Intentionally_act","Rape","Theft","Taking","Quantity","People_by_religion","Increment","Importance","Political_locales"};
set Roles[Frames] :=  <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Rape"> {"Duration","Place","Instrument","Result","Degree","Manner","Victim","Time","Perpetrator","Frequency"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"People_by_religion"> {"Person","Religion","Ethnicity","Persistent_characteristic","Descriptor","Age","Origin"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Ingest_substance"> {"Place","Duration","Substance","Time","Manner","Purpose","Ingestor","Delivery_device","Means","Frequency","Entry_path"}, <"Theft"> {"Purpose","Time","Goods","Instrument","Place","Frequency","Means","Source","Reason","Perpetrator","Victim","Manner"}, <"People_by_religion"> {"Person","Religion","Ethnicity","Persistent_characteristic","Descriptor","Age","Origin"}, <"Money"> {"Possessor","Type","Use","Money","Time_of_creation","Origin"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Rape"> {"Duration","Place","Instrument","Result","Degree","Manner","Victim","Time","Perpetrator","Frequency"}, <"Theft"> {"Purpose","Time","Goods","Instrument","Place","Frequency","Means","Source","Reason","Perpetrator","Victim","Manner"}, <"Taking"> {"Place","Agent","Containing_event","Theme","Source","Manner","Time","Reason","Purpose"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"People_by_religion"> {"Person","Religion","Ethnicity","Persistent_characteristic","Descriptor","Age","Origin"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Importance"> {"Place","Undertaking","Explanation","Field","Time","Factor","Reason","Frequency","Degree","Interested_party"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"};
set Spans := {"-1_-1","0_0","0_32","0_56","10_10","10_12","11_11","11_12","12_12","13_13","13_15","14_14","14_15","15_15","16_16","17_17","18_18","18_22","19_19","19_22","1_1","20_20","21_21","22_22","23_23","24_24","25_25","25_26","25_30","26_26","27_27","27_30","28_28","28_30","29_29","2_2","2_22","30_30","31_31","32_32","33_33","34_34","35_35","36_36","37_37","37_38","38_38","39_39","39_55","3_22","3_3","3_4","40_40","40_55","41_41","41_55","42_42","42_55","43_43","43_55","44_44","45_45","45_55","46_46","46_55","47_47","47_48","47_55","48_48","49_49","4_22","4_4","50_50","51_51","52_52","53_53","54_54","55_55","56_56","5_22","5_5","6_22","6_6","7_22","7_7","8_22","8_8","9_12","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Existence"]] binary;
var z1[Assignment["People"]] binary;
var z2[Assignment["Rape"]] binary;
var z3[Assignment["Quantity"]] binary;
var z4[Assignment["People_by_religion"]] binary;
var z5[Assignment["People"]] binary;
var z6[Assignment["Ingest_substance"]] binary;
var z7[Assignment["Theft"]] binary;
var z8[Assignment["People_by_religion"]] binary;
var z9[Assignment["Money"]] binary;
var z10[Assignment["Political_locales"]] binary;
var z11[Assignment["Increment"]] binary;
var z12[Assignment["People"]] binary;
var z13[Assignment["Intentionally_act"]] binary;
var z14[Assignment["Rape"]] binary;
var z15[Assignment["Theft"]] binary;
var z16[Assignment["Taking"]] binary;
var z17[Assignment["Quantity"]] binary;
var z18[Assignment["People_by_religion"]] binary;
var z19[Assignment["Increment"]] binary;
var z20[Assignment["Importance"]] binary;
var z21[Assignment["Political_locales"]] binary;
param probabilities0[Assignment["Existence"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["People"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Rape"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Quantity"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["People_by_religion"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["People"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Ingest_substance"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Theft"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["People_by_religion"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Money"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Political_locales"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Increment"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["People"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Intentionally_act"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Rape"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Theft"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Taking"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Quantity"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["People_by_religion"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Increment"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Importance"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Political_locales"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Existence"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["People"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Rape"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["People_by_religion"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["People"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Ingest_substance"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Theft"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["People_by_religion"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Money"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["People"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Rape"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Theft"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Taking"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["People_by_religion"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Importance"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities21[r,s] * z21[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 56};
set G[I] := <0> {"0_0","0_32","0_56"}, <1> {"0_32","0_56","1_1"}, <2> {"0_32","0_56","2_2","2_22"}, <3> {"0_32","0_56","2_22","3_22","3_3","3_4"}, <4> {"0_32","0_56","2_22","3_22","3_4","4_22","4_4"}, <5> {"0_32","0_56","2_22","3_22","4_22","5_22","5_5"}, <6> {"0_32","0_56","2_22","3_22","4_22","5_22","6_22","6_6"}, <7> {"0_32","0_56","2_22","3_22","4_22","5_22","6_22","7_22","7_7"}, <8> {"0_32","0_56","2_22","3_22","4_22","5_22","6_22","7_22","8_22","8_8"}, <9> {"0_32","0_56","2_22","3_22","4_22","5_22","6_22","7_22","8_22","9_12","9_9"}, <10> {"0_32","0_56","10_10","10_12","2_22","3_22","4_22","5_22","6_22","7_22","8_22","9_12"}, <11> {"0_32","0_56","10_12","11_11","11_12","2_22","3_22","4_22","5_22","6_22","7_22","8_22","9_12"}, <12> {"0_32","0_56","10_12","11_12","12_12","2_22","3_22","4_22","5_22","6_22","7_22","8_22","9_12"}, <13> {"0_32","0_56","13_13","13_15","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <14> {"0_32","0_56","13_15","14_14","14_15","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <15> {"0_32","0_56","13_15","14_15","15_15","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <16> {"0_32","0_56","16_16","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <17> {"0_32","0_56","17_17","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <18> {"0_32","0_56","18_18","18_22","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <19> {"0_32","0_56","18_22","19_19","19_22","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <20> {"0_32","0_56","18_22","19_22","20_20","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <21> {"0_32","0_56","18_22","19_22","21_21","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <22> {"0_32","0_56","18_22","19_22","22_22","2_22","3_22","4_22","5_22","6_22","7_22","8_22"}, <23> {"0_32","0_56","23_23"}, <24> {"0_32","0_56","24_24"}, <25> {"0_32","0_56","25_25","25_26","25_30"}, <26> {"0_32","0_56","25_26","25_30","26_26"}, <27> {"0_32","0_56","25_30","27_27","27_30"}, <28> {"0_32","0_56","25_30","27_30","28_28","28_30"}, <29> {"0_32","0_56","25_30","27_30","28_30","29_29"}, <30> {"0_32","0_56","25_30","27_30","28_30","30_30"}, <31> {"0_32","0_56","31_31"}, <32> {"0_32","0_56","32_32"}, <33> {"0_56","33_33"}, <34> {"0_56","34_34"}, <35> {"0_56","35_35"}, <36> {"0_56","36_36"}, <37> {"0_56","37_37","37_38"}, <38> {"0_56","37_38","38_38"}, <39> {"0_56","39_39","39_55"}, <40> {"0_56","39_55","40_40","40_55"}, <41> {"0_56","39_55","40_55","41_41","41_55"}, <42> {"0_56","39_55","40_55","41_55","42_42","42_55"}, <43> {"0_56","39_55","40_55","41_55","42_55","43_43","43_55"}, <44> {"0_56","39_55","40_55","41_55","42_55","43_55","44_44"}, <45> {"0_56","39_55","40_55","41_55","42_55","43_55","45_45","45_55"}, <46> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_46","46_55"}, <47> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_47","47_48","47_55"}, <48> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_48","47_55","48_48"}, <49> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","49_49"}, <50> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","50_50"}, <51> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","51_51"}, <52> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","52_52"}, <53> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","53_53"}, <54> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","54_54"}, <55> {"0_56","39_55","40_55","41_55","42_55","43_55","45_55","46_55","47_55","55_55"}, <56> {"0_56","56_56"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Rape"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["People_by_religion"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Ingest_substance"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Theft"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["People_by_religion"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Money"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Rape"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Theft"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Taking"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["People_by_religion"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Importance"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Existence"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["People"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Rape"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Quantity"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["People_by_religion"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["People"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Ingest_substance"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Theft"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["People_by_religion"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Money"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Increment"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["People"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Rape"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Theft"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Taking"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Quantity"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["People_by_religion"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Increment"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Importance"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z21[r,s] == 1;
#pairwise exclusion constraint
set Exc3 := {<"Individuals","Mass">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
set Exc17 := {<"Individuals","Mass">};
subto exclusion17: forall <ri,rj> in Exc17 do z17[ri,"-1_-1"] + z17[rj,"-1_-1"] >= 1;
set Exc20 := {<"Field","Interested_party">};
subto exclusion20: forall <ri,rj> in Exc20 do z20[ri,"-1_-1"] + z20[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

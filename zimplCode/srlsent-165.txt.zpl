# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Event","Protecting","Locative_relation","Quantity","Intentionally_act","Locale"};
set Roles[Frames] :=  <"Event"> {"Time","Duration","Place","Manner","Reason","Event","Frequency"}, <"Protecting"> {"Protection","Time","Descriptor","Instrument","Place","Degree","Asset","Means","Depictive","Danger","Duration","Beneficiary","Manner","Explanation"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Locale"> {"Formational_cause","Locale","Relative_location","Name","Container_possessor","Related_event","Constituent_parts","Descriptor"};
set Spans := {"-1_-1","0_0","0_11","10_10","11_11","1_1","1_11","2_2","3_10","3_3","3_4","4_4","5_10","5_5","6_10","6_6","7_7","8_10","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Event"]] binary;
var z1[Assignment["Protecting"]] binary;
var z2[Assignment["Locative_relation"]] binary;
var z3[Assignment["Quantity"]] binary;
var z4[Assignment["Intentionally_act"]] binary;
var z5[Assignment["Locale"]] binary;
param probabilities0[Assignment["Event"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Protecting"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Locative_relation"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Quantity"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Intentionally_act"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Locale"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Event"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Protecting"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Locale"] : probabilities5[r,s] * z5[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 11};
set G[I] := <0> {"0_0","0_11"}, <1> {"0_11","1_1","1_11"}, <2> {"0_11","1_11","2_2"}, <3> {"0_11","1_11","3_10","3_3","3_4"}, <4> {"0_11","1_11","3_10","3_4","4_4"}, <5> {"0_11","1_11","3_10","5_10","5_5"}, <6> {"0_11","1_11","3_10","5_10","6_10","6_6"}, <7> {"0_11","1_11","3_10","5_10","6_10","7_7"}, <8> {"0_11","1_11","3_10","5_10","6_10","8_10","8_8"}, <9> {"0_11","1_11","3_10","5_10","6_10","8_10","9_10","9_9"}, <10> {"0_11","10_10","1_11","3_10","5_10","6_10","8_10","9_10"}, <11> {"0_11","11_11","1_11"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Event"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Protecting"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Locale"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Event"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Protecting"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Quantity"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Locale"] do sum <s> in Spans : z5[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc3 := {<"Individuals","Mass">};
subto exclusion3: forall <ri,rj> in Exc3 do z3[ri,"-1_-1"] + z3[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

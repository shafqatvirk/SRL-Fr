# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Assistance","Intentionally_create","Locale_by_use","Building","Weapon","Weapon"};
set Roles[Frames] :=  <"Assistance"> {"Purpose","Time","Goal","Place","Frequency","Degree","Helper","Means","Benefited_party","Domain","Duration","Focal_entity","Manner","Explanation"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Building"> {"Purpose","Result","Components","Time","Descriptor","Instrument","Place","Created_entity","Means","Period_of_iterations","Particular_iteration","Duration","Beneficiary","Manner","Agent"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"};
set Spans := {"-1_-1","0_0","0_14","10_10","11_11","12_12","13_13","14_14","1_1","1_13","2_13","2_2","2_3","3_3","4_13","4_4","5_13","5_5","5_6","6_6","7_13","7_7","7_8","8_13","8_8","9_13","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Assistance"]] binary;
var z1[Assignment["Intentionally_create"]] binary;
var z2[Assignment["Locale_by_use"]] binary;
var z3[Assignment["Building"]] binary;
var z4[Assignment["Weapon"]] binary;
var z5[Assignment["Weapon"]] binary;
param probabilities0[Assignment["Assistance"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Intentionally_create"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Locale_by_use"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Building"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Weapon"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Weapon"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Assistance"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Building"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities5[r,s] * z5[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 14};
set G[I] := <0> {"0_0","0_14"}, <1> {"0_14","1_1","1_13"}, <2> {"0_14","1_13","2_13","2_2","2_3"}, <3> {"0_14","1_13","2_13","2_3","3_3"}, <4> {"0_14","1_13","2_13","4_13","4_4"}, <5> {"0_14","1_13","2_13","4_13","5_13","5_5","5_6"}, <6> {"0_14","1_13","2_13","4_13","5_13","5_6","6_6"}, <7> {"0_14","1_13","2_13","4_13","5_13","7_13","7_7","7_8"}, <8> {"0_14","1_13","2_13","4_13","5_13","7_13","7_8","8_13","8_8"}, <9> {"0_14","1_13","2_13","4_13","5_13","7_13","8_13","9_13","9_9"}, <10> {"0_14","10_10","1_13","2_13","4_13","5_13","7_13","8_13","9_13"}, <11> {"0_14","11_11","1_13","2_13","4_13","5_13","7_13","8_13","9_13"}, <12> {"0_14","12_12","1_13","2_13","4_13","5_13","7_13","8_13","9_13"}, <13> {"0_14","13_13","1_13","2_13","4_13","5_13","7_13","8_13","9_13"}, <14> {"0_14","14_14"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Assistance"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Building"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Assistance"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Building"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Weapon"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Weapon"] do sum <s> in Spans : z5[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Statement","Possession","Degree","Scrutiny","Relational_quantity","Verification"};
set Roles[Frames] :=  <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Possession"> {"Explanation","Time","Owner","Possession","Duration","Manner","Depictive"}, <"Degree"> {"Gradable_attribute"}, <"Scrutiny"> {"Instrument","Cognizer","Phenomenon","Degree","Manner","Ground","Time","Means","Medium","Purpose","Direction"}, <"Relational_quantity"> {"Mass","Denoted_quantity","Reference_quantity","Individuals"}, <"Verification"> {"Purpose","Inspector","Time","Descriptor","Place","Degree","Means","Unconfirmed_content","Condition","Epistemic_stance","Manner","Explanation","Medium"};
set Spans := {"-1_-1","0_0","0_1","0_12","10_10","11_11","12_12","1_1","2_12","2_2","3_3","4_4","4_5","4_7","5_5","5_7","6_6","6_7","7_7","8_8","9_10","9_11","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Statement"]] binary;
var z1[Assignment["Possession"]] binary;
var z2[Assignment["Degree"]] binary;
var z3[Assignment["Scrutiny"]] binary;
var z4[Assignment["Relational_quantity"]] binary;
var z5[Assignment["Verification"]] binary;
param probabilities0[Assignment["Statement"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Possession"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Degree"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Scrutiny"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Relational_quantity"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Verification"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Statement"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Possession"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Degree"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Scrutiny"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Relational_quantity"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Verification"] : probabilities5[r,s] * z5[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 12};
set G[I] := <0> {"0_0","0_1","0_12"}, <1> {"0_1","0_12","1_1"}, <2> {"0_12","2_12","2_2"}, <3> {"0_12","2_12","3_3"}, <4> {"0_12","2_12","4_4","4_5","4_7"}, <5> {"0_12","2_12","4_5","4_7","5_5","5_7"}, <6> {"0_12","2_12","4_7","5_7","6_6","6_7"}, <7> {"0_12","2_12","4_7","5_7","6_7","7_7"}, <8> {"0_12","2_12","8_8"}, <9> {"0_12","2_12","9_10","9_11","9_9"}, <10> {"0_12","10_10","2_12","9_10","9_11"}, <11> {"0_12","11_11","2_12","9_11"}, <12> {"0_12","12_12","2_12"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Possession"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Degree"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Scrutiny"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Relational_quantity"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Verification"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Statement"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Possession"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Degree"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Scrutiny"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Relational_quantity"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Verification"] do sum <s> in Spans : z5[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

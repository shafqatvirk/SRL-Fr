# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Temporal_subregion","Change_position_on_a_scale","Linguistic_meaning","Relational_political_locales","Political_locales"};
set Roles[Frames] :=  <"Temporal_subregion"> {"Time_period","Time","Degree","Sub_part"}, <"Change_position_on_a_scale"> {"Speed","Duration","Item","Value_range","Attribute","Correlate","Initial_value","Circumstances","Difference","Manner","Result","Final_state","Time","Period_of_iterations","Degree","Group","Final_correlate","Initial_correlate","Initial_state","Particular_iteration","Path","Final_value","Place"}, <"Linguistic_meaning"> {"Meaning","Context","Form","Degree","Referent"}, <"Relational_political_locales"> {"Relative_location","Container_possessor","Descriptor","Name","Population","Locale"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"};
set Spans := {"-1_-1","0_0","0_24","0_6","10_10","11_11","11_13","11_23","12_12","13_13","14_14","14_23","15_15","15_16","15_23","16_16","16_23","17_17","17_20","17_23","18_18","19_19","1_1","1_3","20_20","21_21","21_23","22_22","22_23","23_23","24_24","2_2","3_3","4_4","4_6","5_5","5_6","6_6","7_7","8_8","8_9","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Temporal_subregion"]] binary;
var z1[Assignment["Change_position_on_a_scale"]] binary;
var z2[Assignment["Linguistic_meaning"]] binary;
var z3[Assignment["Relational_political_locales"]] binary;
var z4[Assignment["Political_locales"]] binary;
param probabilities0[Assignment["Temporal_subregion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Change_position_on_a_scale"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Linguistic_meaning"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Relational_political_locales"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Political_locales"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Temporal_subregion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Change_position_on_a_scale"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Linguistic_meaning"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Relational_political_locales"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities4[r,s] * z4[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 24};
set G[I] := <0> {"0_0","0_24","0_6"}, <1> {"0_24","0_6","1_1","1_3"}, <2> {"0_24","0_6","1_3","2_2"}, <3> {"0_24","0_6","1_3","3_3"}, <4> {"0_24","0_6","4_4","4_6"}, <5> {"0_24","0_6","4_6","5_5","5_6"}, <6> {"0_24","0_6","4_6","5_6","6_6"}, <7> {"0_24","7_7"}, <8> {"0_24","8_8","8_9"}, <9> {"0_24","8_9","9_9"}, <10> {"0_24","10_10"}, <11> {"0_24","11_11","11_13","11_23"}, <12> {"0_24","11_13","11_23","12_12"}, <13> {"0_24","11_13","11_23","13_13"}, <14> {"0_24","11_23","14_14","14_23"}, <15> {"0_24","11_23","14_23","15_15","15_16","15_23"}, <16> {"0_24","11_23","14_23","15_16","15_23","16_16","16_23"}, <17> {"0_24","11_23","14_23","15_23","16_23","17_17","17_20","17_23"}, <18> {"0_24","11_23","14_23","15_23","16_23","17_20","17_23","18_18"}, <19> {"0_24","11_23","14_23","15_23","16_23","17_20","17_23","19_19"}, <20> {"0_24","11_23","14_23","15_23","16_23","17_20","17_23","20_20"}, <21> {"0_24","11_23","14_23","15_23","16_23","17_23","21_21","21_23"}, <22> {"0_24","11_23","14_23","15_23","16_23","17_23","21_23","22_22","22_23"}, <23> {"0_24","11_23","14_23","15_23","16_23","17_23","21_23","22_23","23_23"}, <24> {"0_24","24_24"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Temporal_subregion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Change_position_on_a_scale"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Linguistic_meaning"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Relational_political_locales"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Temporal_subregion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Change_position_on_a_scale"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Linguistic_meaning"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Relational_political_locales"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z4[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Initial_state","Value_range">,<"Final_value","Value_range">,<"Initial_value","Value_range">,<"Final_state","Value_range">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

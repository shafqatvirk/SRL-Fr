# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Intentionally_act","Change_position_on_a_scale","Political_locales","Military","Temporal_collocation","Intentionally_create","Electricity","Organization"};
set Roles[Frames] :=  <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Change_position_on_a_scale"> {"Speed","Duration","Item","Value_range","Attribute","Correlate","Initial_value","Circumstances","Difference","Manner","Result","Final_state","Time","Period_of_iterations","Degree","Group","Final_correlate","Initial_correlate","Initial_state","Particular_iteration","Path","Final_value","Place"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Military"> {"Members","Descriptor","Possessor","Goal","Domain","Force"}, <"Temporal_collocation"> {"Event_description","Landmark_period","Trajector_entity","Landmark_entity","Landmark_event","Trajector_period","Trajector_event"}, <"Intentionally_create"> {"Created_entity","Place","Role","Manner","Components","Creator","Time","Means","Purpose","Co_participant"}, <"Electricity"> {"Electricity","Descriptor","Source","Use"}, <"Organization"> {"Period_of_existence","Members","Place","Name","Container_possessor","Organization","Purpose","Descriptor"};
set Spans := {"-1_-1","0_0","0_24","10_10","10_11","10_23","11_11","12_12","13_13","14_14","14_15","15_15","16_16","17_17","18_18","19_19","19_20","1_1","1_24","20_20","21_21","21_22","21_23","22_22","22_23","23_23","24_24","2_2","3_23","3_3","4_23","4_4","5_23","5_5","5_7","5_8","6_6","7_7","8_23","8_8","9_23","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Intentionally_act"]] binary;
var z1[Assignment["Change_position_on_a_scale"]] binary;
var z2[Assignment["Political_locales"]] binary;
var z3[Assignment["Military"]] binary;
var z4[Assignment["Temporal_collocation"]] binary;
var z5[Assignment["Intentionally_create"]] binary;
var z6[Assignment["Electricity"]] binary;
var z7[Assignment["Organization"]] binary;
param probabilities0[Assignment["Intentionally_act"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Change_position_on_a_scale"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Political_locales"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Military"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Temporal_collocation"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Intentionally_create"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Electricity"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Organization"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Intentionally_act"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Change_position_on_a_scale"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Military"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Temporal_collocation"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Intentionally_create"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Electricity"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Organization"] : probabilities7[r,s] * z7[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 24};
set G[I] := <0> {"0_0","0_24"}, <1> {"0_24","1_1","1_24"}, <2> {"0_24","1_24","2_2"}, <3> {"0_24","1_24","3_23","3_3"}, <4> {"0_24","1_24","3_23","4_23","4_4"}, <5> {"0_24","1_24","3_23","4_23","5_23","5_5","5_7","5_8"}, <6> {"0_24","1_24","3_23","4_23","5_23","5_7","5_8","6_6"}, <7> {"0_24","1_24","3_23","4_23","5_23","5_7","5_8","7_7"}, <8> {"0_24","1_24","3_23","4_23","5_23","5_8","8_23","8_8"}, <9> {"0_24","1_24","3_23","4_23","5_23","8_23","9_23","9_9"}, <10> {"0_24","10_10","10_11","10_23","1_24","3_23","4_23","5_23","8_23","9_23"}, <11> {"0_24","10_11","10_23","11_11","1_24","3_23","4_23","5_23","8_23","9_23"}, <12> {"0_24","10_23","12_12","1_24","3_23","4_23","5_23","8_23","9_23"}, <13> {"0_24","10_23","13_13","1_24","3_23","4_23","5_23","8_23","9_23"}, <14> {"0_24","10_23","14_14","14_15","1_24","3_23","4_23","5_23","8_23","9_23"}, <15> {"0_24","10_23","14_15","15_15","1_24","3_23","4_23","5_23","8_23","9_23"}, <16> {"0_24","10_23","16_16","1_24","3_23","4_23","5_23","8_23","9_23"}, <17> {"0_24","10_23","17_17","1_24","3_23","4_23","5_23","8_23","9_23"}, <18> {"0_24","10_23","18_18","1_24","3_23","4_23","5_23","8_23","9_23"}, <19> {"0_24","10_23","19_19","19_20","1_24","3_23","4_23","5_23","8_23","9_23"}, <20> {"0_24","10_23","19_20","1_24","20_20","3_23","4_23","5_23","8_23","9_23"}, <21> {"0_24","10_23","1_24","21_21","21_22","21_23","3_23","4_23","5_23","8_23","9_23"}, <22> {"0_24","10_23","1_24","21_22","21_23","22_22","22_23","3_23","4_23","5_23","8_23","9_23"}, <23> {"0_24","10_23","1_24","21_23","22_23","23_23","3_23","4_23","5_23","8_23","9_23"}, <24> {"0_24","1_24","24_24"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Change_position_on_a_scale"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Military"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Temporal_collocation"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Intentionally_create"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Electricity"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Organization"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Change_position_on_a_scale"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Military"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Temporal_collocation"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Intentionally_create"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Electricity"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Organization"] do sum <s> in Spans : z7[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Initial_state","Value_range">,<"Final_value","Value_range">,<"Initial_value","Value_range">,<"Final_state","Value_range">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc4 := {<"Trajector_event","Trajector_period">,<"Landmark_entity","Landmark_event">,<"Landmark_event","Landmark_period">,<"Trajector_entity","Trajector_event">};
subto exclusion4: forall <ri,rj> in Exc4 do z4[ri,"-1_-1"] + z4[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

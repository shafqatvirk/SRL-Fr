# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Suspicion","Locale_by_use","Capability","Verification","Capability","Scrutiny"};
set Roles[Frames] :=  <"Suspicion"> {"Incident","Suspect"}, <"Locale_by_use"> {"Formational_cause","Use","Locale","Relative_location","Name","Container_possessor","Constituent_parts","Descriptor"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Verification"> {"Purpose","Inspector","Time","Descriptor","Place","Degree","Means","Unconfirmed_content","Condition","Epistemic_stance","Manner","Explanation","Medium"}, <"Capability"> {"Degree","Status","Entity","Relevant_feature","Circumstances","Role","Event","Cause"}, <"Scrutiny"> {"Instrument","Cognizer","Phenomenon","Degree","Manner","Ground","Time","Means","Medium","Purpose","Direction"};
set Spans := {"-1_-1","0_0","0_14","0_7","10_10","11_11","12_12","12_13","13_13","14_14","1_1","1_2","1_4","1_5","1_7","2_2","2_4","3_3","3_4","4_4","5_5","5_7","6_6","6_7","7_7","8_8","9_10","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Suspicion"]] binary;
var z1[Assignment["Locale_by_use"]] binary;
var z2[Assignment["Capability"]] binary;
var z3[Assignment["Verification"]] binary;
var z4[Assignment["Capability"]] binary;
var z5[Assignment["Scrutiny"]] binary;
param probabilities0[Assignment["Suspicion"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Locale_by_use"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Capability"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Verification"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Capability"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Scrutiny"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Suspicion"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Locale_by_use"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Verification"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Capability"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Scrutiny"] : probabilities5[r,s] * z5[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 14};
set G[I] := <0> {"0_0","0_14","0_7"}, <1> {"0_14","0_7","1_1","1_2","1_4","1_5","1_7"}, <2> {"0_14","0_7","1_2","1_4","1_5","1_7","2_2","2_4"}, <3> {"0_14","0_7","1_4","1_5","1_7","2_4","3_3","3_4"}, <4> {"0_14","0_7","1_4","1_5","1_7","2_4","3_4","4_4"}, <5> {"0_14","0_7","1_5","1_7","5_5","5_7"}, <6> {"0_14","0_7","1_7","5_7","6_6","6_7"}, <7> {"0_14","0_7","1_7","5_7","6_7","7_7"}, <8> {"0_14","8_8"}, <9> {"0_14","9_10","9_9"}, <10> {"0_14","10_10","9_10"}, <11> {"0_14","11_11"}, <12> {"0_14","12_12","12_13"}, <13> {"0_14","12_13","13_13"}, <14> {"0_14","14_14"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Suspicion"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Locale_by_use"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Verification"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Capability"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Scrutiny"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Suspicion"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Locale_by_use"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Capability"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Verification"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Capability"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Scrutiny"] do sum <s> in Spans : z5[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

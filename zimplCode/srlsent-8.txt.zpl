# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Type","People","Commerce_pay","Operating_a_system","People_by_age","Buildings"};
set Roles[Frames] :=  <"Type"> {"Item_Property","Category","Subtype","Type_Property"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Commerce_pay"> {"Purpose","Circumstances","Time","Goods","Frequency","Seller","Rate","Reason","Manner","Buyer","Means","Money"}, <"Operating_a_system"> {"Duration","Place","System","Manner","Time","Means","Purpose","Operator"}, <"People_by_age"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Buildings"> {"Type","Place","Function","Time_of_creation","Relative_location","Name","Building","Descriptor","Material","Builder"};
set Spans := {"-1_-1","0_0","0_14","0_3","10_10","10_12","10_13","11_11","12_12","13_13","14_14","1_1","2_2","2_3","3_3","4_14","4_4","5_5","5_7","6_6","6_7","7_7","8_13","8_8","8_9","9_13","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Type"]] binary;
var z1[Assignment["People"]] binary;
var z2[Assignment["Commerce_pay"]] binary;
var z3[Assignment["Operating_a_system"]] binary;
var z4[Assignment["People_by_age"]] binary;
var z5[Assignment["Buildings"]] binary;
param probabilities0[Assignment["Type"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["People"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Commerce_pay"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Operating_a_system"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["People_by_age"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Buildings"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Type"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["People"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Commerce_pay"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Operating_a_system"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["People_by_age"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Buildings"] : probabilities5[r,s] * z5[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 14};
set G[I] := <0> {"0_0","0_14","0_3"}, <1> {"0_14","0_3","1_1"}, <2> {"0_14","0_3","2_2","2_3"}, <3> {"0_14","0_3","2_3","3_3"}, <4> {"0_14","4_14","4_4"}, <5> {"0_14","4_14","5_5","5_7"}, <6> {"0_14","4_14","5_7","6_6","6_7"}, <7> {"0_14","4_14","5_7","6_7","7_7"}, <8> {"0_14","4_14","8_13","8_8","8_9"}, <9> {"0_14","4_14","8_13","8_9","9_13","9_9"}, <10> {"0_14","10_10","10_12","10_13","4_14","8_13","9_13"}, <11> {"0_14","10_12","10_13","11_11","4_14","8_13","9_13"}, <12> {"0_14","10_12","10_13","12_12","4_14","8_13","9_13"}, <13> {"0_14","10_13","13_13","4_14","8_13","9_13"}, <14> {"0_14","14_14","4_14"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Type"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Commerce_pay"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Operating_a_system"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["People_by_age"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Buildings"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Type"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["People"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Commerce_pay"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Operating_a_system"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["People_by_age"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Buildings"] do sum <s> in Spans : z5[r,s] == 1;
#pairwise exclusion constraint
#pairwise requirement constraint

# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Continued_state_of_affairs","Intentionally_act","Discussion","Concessive","Using","Membership","Successful_action","Awareness","Political_locales","Origin","Weapon","Artifact","Transfer","Existence"};
set Roles[Frames] :=  <"Continued_state_of_affairs"> {"State_of_affairs","Circumstances","Reference_occasion"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Discussion"> {"Purpose","Topic","Depictive","Containing_event","Amount_of_discussion","Frequency","Means","Interlocutor_2","Interlocutor_1","Period_of_iterations","Means_of_communication","Domain","Duration","Place","Manner","Interlocutors","Time"}, <"Concessive"> {"Main_statement","Statement"}, <"Using"> {"Duration","Depictive","Purpose","Means","Role","Circumstances","Agent","Manner","Explanation","Outcome","Instrument","Time","Period_of_iterations","Containing_event","Degree","Place","Frequency","Group"}, <"Membership"> {"Member","Standing","Group"}, <"Successful_action"> {"Circumstances","Time","Containing_event","Instrument","Place","Goal","Degree","Protagonist","Role","Cause","Means","Explanation"}, <"Awareness"> {"Cognizer","Topic","Degree","Role","Manner","Evidence","Explanation","Time","Content","Expressor","Paradigm"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Origin"> {"Entity","Origin"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Transfer"> {"Place","Theme","Manner","Donor","Time","Transferors","Reason","Means","Recipient","Purpose"}, <"Existence"> {"Place","Duration","Inherent_purpose","Entity","Point_of_view","Time","Circumstances","State","Cause"};
set Spans := {"-1_-1","0_0","0_1","0_40","10_10","10_11","11_11","12_12","13_13","14_14","15_15","15_16","15_18","16_16","16_18","17_17","17_18","18_18","19_19","1_1","20_20","20_22","21_21","21_22","22_22","23_23","23_39","24_24","24_39","25_25","26_26","27_27","28_28","28_29","28_32","29_29","29_32","2_2","30_30","30_32","31_31","32_32","33_33","34_34","34_39","35_35","35_38","35_39","36_36","37_37","38_38","39_39","3_11","3_3","3_4","40_40","4_11","4_4","5_11","5_5","6_11","6_6","7_11","7_7","8_11","8_8","9_11","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Continued_state_of_affairs"]] binary;
var z1[Assignment["Intentionally_act"]] binary;
var z2[Assignment["Discussion"]] binary;
var z3[Assignment["Concessive"]] binary;
var z4[Assignment["Using"]] binary;
var z5[Assignment["Membership"]] binary;
var z6[Assignment["Successful_action"]] binary;
var z7[Assignment["Awareness"]] binary;
var z8[Assignment["Political_locales"]] binary;
var z9[Assignment["Origin"]] binary;
var z10[Assignment["Weapon"]] binary;
var z11[Assignment["Artifact"]] binary;
var z12[Assignment["Transfer"]] binary;
var z13[Assignment["Existence"]] binary;
param probabilities0[Assignment["Continued_state_of_affairs"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Intentionally_act"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Discussion"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Concessive"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Using"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Membership"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Successful_action"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Awareness"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Political_locales"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Origin"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Weapon"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Artifact"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Transfer"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Existence"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Continued_state_of_affairs"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Discussion"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Concessive"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Using"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Membership"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Successful_action"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Awareness"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Transfer"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Existence"] : probabilities13[r,s] * z13[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 40};
set G[I] := <0> {"0_0","0_1","0_40"}, <1> {"0_1","0_40","1_1"}, <2> {"0_40","2_2"}, <3> {"0_40","3_11","3_3","3_4"}, <4> {"0_40","3_11","3_4","4_11","4_4"}, <5> {"0_40","3_11","4_11","5_11","5_5"}, <6> {"0_40","3_11","4_11","5_11","6_11","6_6"}, <7> {"0_40","3_11","4_11","5_11","6_11","7_11","7_7"}, <8> {"0_40","3_11","4_11","5_11","6_11","7_11","8_11","8_8"}, <9> {"0_40","3_11","4_11","5_11","6_11","7_11","8_11","9_11","9_9"}, <10> {"0_40","10_10","10_11","3_11","4_11","5_11","6_11","7_11","8_11","9_11"}, <11> {"0_40","10_11","11_11","3_11","4_11","5_11","6_11","7_11","8_11","9_11"}, <12> {"0_40","12_12"}, <13> {"0_40","13_13"}, <14> {"0_40","14_14"}, <15> {"0_40","15_15","15_16","15_18"}, <16> {"0_40","15_16","15_18","16_16","16_18"}, <17> {"0_40","15_18","16_18","17_17","17_18"}, <18> {"0_40","15_18","16_18","17_18","18_18"}, <19> {"0_40","19_19"}, <20> {"0_40","20_20","20_22"}, <21> {"0_40","20_22","21_21","21_22"}, <22> {"0_40","20_22","21_22","22_22"}, <23> {"0_40","23_23","23_39"}, <24> {"0_40","23_39","24_24","24_39"}, <25> {"0_40","23_39","24_39","25_25"}, <26> {"0_40","23_39","24_39","26_26"}, <27> {"0_40","23_39","24_39","27_27"}, <28> {"0_40","23_39","24_39","28_28","28_29","28_32"}, <29> {"0_40","23_39","24_39","28_29","28_32","29_29","29_32"}, <30> {"0_40","23_39","24_39","28_32","29_32","30_30","30_32"}, <31> {"0_40","23_39","24_39","28_32","29_32","30_32","31_31"}, <32> {"0_40","23_39","24_39","28_32","29_32","30_32","32_32"}, <33> {"0_40","23_39","24_39","33_33"}, <34> {"0_40","23_39","24_39","34_34","34_39"}, <35> {"0_40","23_39","24_39","34_39","35_35","35_38","35_39"}, <36> {"0_40","23_39","24_39","34_39","35_38","35_39","36_36"}, <37> {"0_40","23_39","24_39","34_39","35_38","35_39","37_37"}, <38> {"0_40","23_39","24_39","34_39","35_38","35_39","38_38"}, <39> {"0_40","23_39","24_39","34_39","35_39","39_39"}, <40> {"0_40","40_40"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Continued_state_of_affairs"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Discussion"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Concessive"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Using"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Membership"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Successful_action"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Awareness"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Transfer"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Existence"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Continued_state_of_affairs"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Discussion"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Concessive"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Using"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Membership"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Successful_action"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Awareness"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Origin"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Weapon"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Artifact"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Transfer"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Existence"] do sum <s> in Spans : z13[r,s] == 1;
#pairwise exclusion constraint
set Exc2 := {<"Interlocutor_1","Interlocutors">,<"Interlocutor_2","Interlocutors">};
subto exclusion2: forall <ri,rj> in Exc2 do z2[ri,"-1_-1"] + z2[rj,"-1_-1"] >= 1;
set Exc6 := {<"Instrument","Means">,<"Goal","Role">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
set Exc7 := {<"Cognizer","Expressor">};
subto exclusion7: forall <ri,rj> in Exc7 do z7[ri,"-1_-1"] + z7[rj,"-1_-1"] >= 1;
set Exc12 := {<"Donor","Transferors">,<"Recipient","Transferors">};
subto exclusion12: forall <ri,rj> in Exc12 do z12[ri,"-1_-1"] + z12[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr2 := {<"Interlocutor_1","Interlocutor_2">};
subto require2: forall <ri,rj> in Reqr2 do z2[ri,"-1_-1"] - z2[rj,"-1_-1"] == 0;

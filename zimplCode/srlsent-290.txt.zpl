# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Confronting_problem","Likelihood","Revenge","Political_locales","Instance","Compliance","Request","Statement","Calendric_unit","Collaboration","Completeness","Reveal_secret","Sign_agreement","Increment","Law","Activity_start","Ratification","Means","Activity_pause","Quantity","Processing_materials","Processing_materials","Intentionally_act","Duration_attribute","Frequency"};
set Roles[Frames] :=  <"Confronting_problem"> {"Agent","Means","Issue","Particular_iteration","Frequency"}, <"Likelihood"> {"Time","Place","Circumstances","Reason","Hypothetical_event","Degree"}, <"Revenge"> {"Purpose","Avenger","Depictive","Offender","Instrument","Place","Degree","Injury","Duration","Punishment","Injured_Party","Manner","Time"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Instance"> {"Type","Instance","Instance_Prop"}, <"Compliance"> {"State_of_Affairs","Degree","Manner","Time","Protagonist","Norm","Means","Act"}, <"Request"> {"Addressee","Containing_event","Medium","Topic","Speaker","Time","Message","Iteration","Means","Manner","Depictive"}, <"Statement"> {"Message","Medium","Place","Iteration","Means","Depictive","Manner","Epistemic_stance","Speaker","Event_description","Addressee","Time","Containing_event","Degree","Occasion","Group","Frequency","Particular_iteration","Internal_cause","Topic"}, <"Calendric_unit"> {"Relative_time","Unit","Count","Name","Salient_event","Whole"}, <"Collaboration"> {"Duration","Place","Undertaking","Partner_2","Partner_1","Time","Partners","Manner","Degree"}, <"Completeness"> {"Degree","Whole","Time"}, <"Reveal_secret"> {"Medium","Place","Means","Depictive","Speaker","Location_of_protagonist","Manner","Completeness","Period_of_iterations","Information","Addressee","Time","Containing_event","Event_description","Frequency","Re-encoding","Internal_cause","Topic","Source_material"}, <"Sign_agreement"> {"Purpose","Time","Signatory","Place","Role","Reason","Depictive","Manner","Co_participant","Beneficiary","Agreement","Signature"}, <"Increment"> {"Initial_set","Class","Increment","Added_set"}, <"Law"> {"Type","Use","Time_of_creation","Required","Name","Law","Jurisdiction","Forbidden","Creator"}, <"Activity_start"> {"Purpose","Circumstances","Subevent","Depictive","Containing_event","Place","Particular_iteration","Activity","Event_description","Manner","Time","Means","Concessive","Explanation","Agent"}, <"Ratification"> {"Ratifier","Proposal","Time","Place","Reason"}, <"Means"> {"Agent","Purpose","Descriptor","Time","Means"}, <"Activity_pause"> {"Place","Duration","Agent","Legal_basis","Explanation","Time","Depictive","Purpose","Completeness","Activity"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Processing_materials"> {"Place","Duration","Agent","Result","Material","Dimension","Time","Alterant","Reason","Purpose","Subregion"}, <"Processing_materials"> {"Place","Duration","Agent","Result","Material","Dimension","Time","Alterant","Reason","Purpose","Subregion"}, <"Intentionally_act"> {"Purpose","Result","Time","Place","Frequency","Means","Event_dscription","Period_of_iterations","Domain","Act","Particular_iteration","Manner","Explanation","Agent"}, <"Duration_attribute"> {"Degree","Period","Eventuality"}, <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"};
set Spans := {"-1_-1","0_0","0_16","0_62","10_10","10_16","11_11","11_16","12_12","12_16","13_13","13_15","13_16","14_14","15_15","16_16","17_17","18_18","19_19","1_1","1_16","20_20","20_23","21_21","21_22","21_23","22_22","22_23","23_23","24_24","24_60","25_25","25_26","25_60","26_26","26_60","27_27","27_60","28_28","28_30","29_29","29_30","2_16","2_2","2_4","2_7","30_30","31_31","31_35","32_32","32_35","33_33","34_34","35_35","36_36","37_37","37_40","38_38","38_40","39_39","3_3","3_4","40_40","41_41","42_42","42_45","43_43","43_45","44_44","45_45","46_46","47_47","48_48","48_60","49_49","49_60","4_4","50_50","51_51","52_52","53_53","54_54","55_55","55_60","56_56","56_60","57_57","57_60","58_58","59_59","5_5","60_60","61_61","62_62","6_6","7_7","8_16","8_8","9_16","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Confronting_problem"]] binary;
var z1[Assignment["Likelihood"]] binary;
var z2[Assignment["Revenge"]] binary;
var z3[Assignment["Political_locales"]] binary;
var z4[Assignment["Instance"]] binary;
var z5[Assignment["Compliance"]] binary;
var z6[Assignment["Request"]] binary;
var z7[Assignment["Statement"]] binary;
var z8[Assignment["Calendric_unit"]] binary;
var z9[Assignment["Collaboration"]] binary;
var z10[Assignment["Completeness"]] binary;
var z11[Assignment["Reveal_secret"]] binary;
var z12[Assignment["Sign_agreement"]] binary;
var z13[Assignment["Increment"]] binary;
var z14[Assignment["Law"]] binary;
var z15[Assignment["Activity_start"]] binary;
var z16[Assignment["Ratification"]] binary;
var z17[Assignment["Means"]] binary;
var z18[Assignment["Activity_pause"]] binary;
var z19[Assignment["Quantity"]] binary;
var z20[Assignment["Processing_materials"]] binary;
var z21[Assignment["Processing_materials"]] binary;
var z22[Assignment["Intentionally_act"]] binary;
var z23[Assignment["Duration_attribute"]] binary;
var z24[Assignment["Frequency"]] binary;
param probabilities0[Assignment["Confronting_problem"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Likelihood"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Revenge"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Political_locales"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Instance"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Compliance"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Request"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Statement"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Calendric_unit"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Collaboration"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Completeness"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Reveal_secret"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Sign_agreement"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Increment"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Law"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;
param probabilities15[Assignment["Activity_start"]] := read "../frameData/frame15.txt" as "<1s,2s> 3n" skip 2;
param probabilities16[Assignment["Ratification"]] := read "../frameData/frame16.txt" as "<1s,2s> 3n" skip 2;
param probabilities17[Assignment["Means"]] := read "../frameData/frame17.txt" as "<1s,2s> 3n" skip 2;
param probabilities18[Assignment["Activity_pause"]] := read "../frameData/frame18.txt" as "<1s,2s> 3n" skip 2;
param probabilities19[Assignment["Quantity"]] := read "../frameData/frame19.txt" as "<1s,2s> 3n" skip 2;
param probabilities20[Assignment["Processing_materials"]] := read "../frameData/frame20.txt" as "<1s,2s> 3n" skip 2;
param probabilities21[Assignment["Processing_materials"]] := read "../frameData/frame21.txt" as "<1s,2s> 3n" skip 2;
param probabilities22[Assignment["Intentionally_act"]] := read "../frameData/frame22.txt" as "<1s,2s> 3n" skip 2;
param probabilities23[Assignment["Duration_attribute"]] := read "../frameData/frame23.txt" as "<1s,2s> 3n" skip 2;
param probabilities24[Assignment["Frequency"]] := read "../frameData/frame24.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Confronting_problem"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Likelihood"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Revenge"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Instance"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Compliance"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Request"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Statement"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Calendric_unit"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Collaboration"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Completeness"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Reveal_secret"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Sign_agreement"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Increment"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Law"] : probabilities14[r,s] * z14[r,s])+(sum <r,s> in Assignment["Activity_start"] : probabilities15[r,s] * z15[r,s])+(sum <r,s> in Assignment["Ratification"] : probabilities16[r,s] * z16[r,s])+(sum <r,s> in Assignment["Means"] : probabilities17[r,s] * z17[r,s])+(sum <r,s> in Assignment["Activity_pause"] : probabilities18[r,s] * z18[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities19[r,s] * z19[r,s])+(sum <r,s> in Assignment["Processing_materials"] : probabilities20[r,s] * z20[r,s])+(sum <r,s> in Assignment["Processing_materials"] : probabilities21[r,s] * z21[r,s])+(sum <r,s> in Assignment["Intentionally_act"] : probabilities22[r,s] * z22[r,s])+(sum <r,s> in Assignment["Duration_attribute"] : probabilities23[r,s] * z23[r,s])+(sum <r,s> in Assignment["Frequency"] : probabilities24[r,s] * z24[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 62};
set G[I] := <0> {"0_0","0_16","0_62"}, <1> {"0_16","0_62","1_1","1_16"}, <2> {"0_16","0_62","1_16","2_16","2_2","2_4","2_7"}, <3> {"0_16","0_62","1_16","2_16","2_4","2_7","3_3","3_4"}, <4> {"0_16","0_62","1_16","2_16","2_4","2_7","3_4","4_4"}, <5> {"0_16","0_62","1_16","2_16","2_7","5_5"}, <6> {"0_16","0_62","1_16","2_16","2_7","6_6"}, <7> {"0_16","0_62","1_16","2_16","2_7","7_7"}, <8> {"0_16","0_62","1_16","2_16","8_16","8_8"}, <9> {"0_16","0_62","1_16","2_16","8_16","9_16","9_9"}, <10> {"0_16","0_62","10_10","10_16","1_16","2_16","8_16","9_16"}, <11> {"0_16","0_62","10_16","11_11","11_16","1_16","2_16","8_16","9_16"}, <12> {"0_16","0_62","10_16","11_16","12_12","12_16","1_16","2_16","8_16","9_16"}, <13> {"0_16","0_62","10_16","11_16","12_16","13_13","13_15","13_16","1_16","2_16","8_16","9_16"}, <14> {"0_16","0_62","10_16","11_16","12_16","13_15","13_16","14_14","1_16","2_16","8_16","9_16"}, <15> {"0_16","0_62","10_16","11_16","12_16","13_15","13_16","15_15","1_16","2_16","8_16","9_16"}, <16> {"0_16","0_62","10_16","11_16","12_16","13_16","16_16","1_16","2_16","8_16","9_16"}, <17> {"0_62","17_17"}, <18> {"0_62","18_18"}, <19> {"0_62","19_19"}, <20> {"0_62","20_20","20_23"}, <21> {"0_62","20_23","21_21","21_22","21_23"}, <22> {"0_62","20_23","21_22","21_23","22_22","22_23"}, <23> {"0_62","20_23","21_23","22_23","23_23"}, <24> {"0_62","24_24","24_60"}, <25> {"0_62","24_60","25_25","25_26","25_60"}, <26> {"0_62","24_60","25_26","25_60","26_26","26_60"}, <27> {"0_62","24_60","25_60","26_60","27_27","27_60"}, <28> {"0_62","24_60","25_60","26_60","27_60","28_28","28_30"}, <29> {"0_62","24_60","25_60","26_60","27_60","28_30","29_29","29_30"}, <30> {"0_62","24_60","25_60","26_60","27_60","28_30","29_30","30_30"}, <31> {"0_62","24_60","25_60","26_60","27_60","31_31","31_35"}, <32> {"0_62","24_60","25_60","26_60","27_60","31_35","32_32","32_35"}, <33> {"0_62","24_60","25_60","26_60","27_60","31_35","32_35","33_33"}, <34> {"0_62","24_60","25_60","26_60","27_60","31_35","32_35","34_34"}, <35> {"0_62","24_60","25_60","26_60","27_60","31_35","32_35","35_35"}, <36> {"0_62","24_60","25_60","26_60","27_60","36_36"}, <37> {"0_62","24_60","25_60","26_60","27_60","37_37","37_40"}, <38> {"0_62","24_60","25_60","26_60","27_60","37_40","38_38","38_40"}, <39> {"0_62","24_60","25_60","26_60","27_60","37_40","38_40","39_39"}, <40> {"0_62","24_60","25_60","26_60","27_60","37_40","38_40","40_40"}, <41> {"0_62","24_60","25_60","26_60","27_60","41_41"}, <42> {"0_62","24_60","25_60","26_60","27_60","42_42","42_45"}, <43> {"0_62","24_60","25_60","26_60","27_60","42_45","43_43","43_45"}, <44> {"0_62","24_60","25_60","26_60","27_60","42_45","43_45","44_44"}, <45> {"0_62","24_60","25_60","26_60","27_60","42_45","43_45","45_45"}, <46> {"0_62","24_60","25_60","26_60","27_60","46_46"}, <47> {"0_62","24_60","25_60","26_60","27_60","47_47"}, <48> {"0_62","24_60","25_60","26_60","27_60","48_48","48_60"}, <49> {"0_62","24_60","25_60","26_60","27_60","48_60","49_49","49_60"}, <50> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","50_50"}, <51> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","51_51"}, <52> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","52_52"}, <53> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","53_53"}, <54> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","54_54"}, <55> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","55_55","55_60"}, <56> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","55_60","56_56","56_60"}, <57> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","55_60","56_60","57_57","57_60"}, <58> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","55_60","56_60","57_60","58_58"}, <59> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","55_60","56_60","57_60","59_59"}, <60> {"0_62","24_60","25_60","26_60","27_60","48_60","49_60","55_60","56_60","57_60","60_60"}, <61> {"0_62","61_61"}, <62> {"0_62","62_62"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Confronting_problem"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Likelihood"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Revenge"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Instance"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Compliance"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Request"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Statement"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Calendric_unit"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Collaboration"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Completeness"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Reveal_secret"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Sign_agreement"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Increment"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Law"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
subto overlap15: forall <i> in I do 
 sum <r> in Roles["Activity_start"] do 
 sum <s> in G[i] do z15[r,s] <= 1;
subto overlap16: forall <i> in I do 
 sum <r> in Roles["Ratification"] do 
 sum <s> in G[i] do z16[r,s] <= 1;
subto overlap17: forall <i> in I do 
 sum <r> in Roles["Means"] do 
 sum <s> in G[i] do z17[r,s] <= 1;
subto overlap18: forall <i> in I do 
 sum <r> in Roles["Activity_pause"] do 
 sum <s> in G[i] do z18[r,s] <= 1;
subto overlap19: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z19[r,s] <= 1;
subto overlap20: forall <i> in I do 
 sum <r> in Roles["Processing_materials"] do 
 sum <s> in G[i] do z20[r,s] <= 1;
subto overlap21: forall <i> in I do 
 sum <r> in Roles["Processing_materials"] do 
 sum <s> in G[i] do z21[r,s] <= 1;
subto overlap22: forall <i> in I do 
 sum <r> in Roles["Intentionally_act"] do 
 sum <s> in G[i] do z22[r,s] <= 1;
subto overlap23: forall <i> in I do 
 sum <r> in Roles["Duration_attribute"] do 
 sum <s> in G[i] do z23[r,s] <= 1;
subto overlap24: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z24[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Confronting_problem"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Likelihood"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Revenge"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Instance"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Compliance"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Request"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Statement"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Calendric_unit"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Collaboration"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Completeness"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Reveal_secret"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Sign_agreement"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Increment"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Law"] do sum <s> in Spans : z14[r,s] == 1;
subto unique15: forall <r> in Roles["Activity_start"] do sum <s> in Spans : z15[r,s] == 1;
subto unique16: forall <r> in Roles["Ratification"] do sum <s> in Spans : z16[r,s] == 1;
subto unique17: forall <r> in Roles["Means"] do sum <s> in Spans : z17[r,s] == 1;
subto unique18: forall <r> in Roles["Activity_pause"] do sum <s> in Spans : z18[r,s] == 1;
subto unique19: forall <r> in Roles["Quantity"] do sum <s> in Spans : z19[r,s] == 1;
subto unique20: forall <r> in Roles["Processing_materials"] do sum <s> in Spans : z20[r,s] == 1;
subto unique21: forall <r> in Roles["Processing_materials"] do sum <s> in Spans : z21[r,s] == 1;
subto unique22: forall <r> in Roles["Intentionally_act"] do sum <s> in Spans : z22[r,s] == 1;
subto unique23: forall <r> in Roles["Duration_attribute"] do sum <s> in Spans : z23[r,s] == 1;
subto unique24: forall <r> in Roles["Frequency"] do sum <s> in Spans : z24[r,s] == 1;
#pairwise exclusion constraint
set Exc9 := {<"Partner_2","Partners">,<"Partner_1","Partners">};
subto exclusion9: forall <ri,rj> in Exc9 do z9[ri,"-1_-1"] + z9[rj,"-1_-1"] >= 1;
set Exc19 := {<"Individuals","Mass">};
subto exclusion19: forall <ri,rj> in Exc19 do z19[ri,"-1_-1"] + z19[rj,"-1_-1"] >= 1;
set Exc24 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion24: forall <ri,rj> in Exc24 do z24[ri,"-1_-1"] + z24[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr9 := {<"Partner_1","Partner_2">};
subto require9: forall <ri,rj> in Reqr9 do z9[ri,"-1_-1"] - z9[rj,"-1_-1"] == 0;

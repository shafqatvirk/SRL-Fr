# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Weapon","Proliferating_in_number","Documents","Permitting","Transfer","Weapon","Artifact","Purpose","Political_locales","Political_locales","Taking_sides","Origin","Origin","Make_agreement_on_action"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Proliferating_in_number"> {"Difference","Circumstances","Final_number","Time","Final_state","Place","Degree","Set","Final_correlate","Duration","Attribute","Initial_correlate","Initial_number","Manner","Speed"}, <"Documents"> {"Obligation","Descriptor","Specification","Status","Issuer","Document","Bearer"}, <"Permitting"> {"State_of_affairs","Circumstances","Principle","Time"}, <"Transfer"> {"Place","Theme","Manner","Donor","Time","Transferors","Reason","Means","Recipient","Purpose"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Purpose"> {"Attribute","Agent","Goal","Time","Restrictor","Value","Domain","Means"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Political_locales"> {"Relative_location","Constituent_parts","Container_possessor","Descriptor","Name","Population","Locale"}, <"Taking_sides"> {"Time","Descriptor","Concessive","Place","Degree","Cognizer","Particular_iteration","Issue","Side","Manner","Action","Explanation"}, <"Origin"> {"Entity","Origin"}, <"Origin"> {"Entity","Origin"}, <"Make_agreement_on_action"> {"Place","Party_2","Party_1","Medium","Topic","Manner","Time","Parties","Obligation","Descriptor"};
set Spans := {"-1_-1","0_0","0_21","0_34","10_10","10_15","11_11","11_12","11_15","12_12","13_13","13_15","14_14","14_15","15_15","16_16","16_21","17_17","17_21","18_18","19_19","1_1","1_21","1_4","1_7","20_20","21_21","22_22","23_23","23_25","24_24","25_25","26_26","27_27","28_28","28_33","29_29","29_33","2_2","30_30","30_31","31_31","32_32","33_33","34_34","3_3","4_4","5_5","5_6","5_7","6_6","6_7","7_7","8_21","8_8","9_15","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Weapon"]] binary;
var z2[Assignment["Proliferating_in_number"]] binary;
var z3[Assignment["Documents"]] binary;
var z4[Assignment["Permitting"]] binary;
var z5[Assignment["Transfer"]] binary;
var z6[Assignment["Weapon"]] binary;
var z7[Assignment["Artifact"]] binary;
var z8[Assignment["Purpose"]] binary;
var z9[Assignment["Political_locales"]] binary;
var z10[Assignment["Political_locales"]] binary;
var z11[Assignment["Taking_sides"]] binary;
var z12[Assignment["Origin"]] binary;
var z13[Assignment["Origin"]] binary;
var z14[Assignment["Make_agreement_on_action"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Weapon"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Proliferating_in_number"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Documents"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Permitting"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Transfer"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Weapon"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Artifact"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Purpose"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;
param probabilities9[Assignment["Political_locales"]] := read "../frameData/frame9.txt" as "<1s,2s> 3n" skip 2;
param probabilities10[Assignment["Political_locales"]] := read "../frameData/frame10.txt" as "<1s,2s> 3n" skip 2;
param probabilities11[Assignment["Taking_sides"]] := read "../frameData/frame11.txt" as "<1s,2s> 3n" skip 2;
param probabilities12[Assignment["Origin"]] := read "../frameData/frame12.txt" as "<1s,2s> 3n" skip 2;
param probabilities13[Assignment["Origin"]] := read "../frameData/frame13.txt" as "<1s,2s> 3n" skip 2;
param probabilities14[Assignment["Make_agreement_on_action"]] := read "../frameData/frame14.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Proliferating_in_number"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Documents"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Permitting"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Transfer"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Purpose"] : probabilities8[r,s] * z8[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities9[r,s] * z9[r,s])+(sum <r,s> in Assignment["Political_locales"] : probabilities10[r,s] * z10[r,s])+(sum <r,s> in Assignment["Taking_sides"] : probabilities11[r,s] * z11[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities12[r,s] * z12[r,s])+(sum <r,s> in Assignment["Origin"] : probabilities13[r,s] * z13[r,s])+(sum <r,s> in Assignment["Make_agreement_on_action"] : probabilities14[r,s] * z14[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 34};
set G[I] := <0> {"0_0","0_21","0_34"}, <1> {"0_21","0_34","1_1","1_21","1_4","1_7"}, <2> {"0_21","0_34","1_21","1_4","1_7","2_2"}, <3> {"0_21","0_34","1_21","1_4","1_7","3_3"}, <4> {"0_21","0_34","1_21","1_4","1_7","4_4"}, <5> {"0_21","0_34","1_21","1_7","5_5","5_6","5_7"}, <6> {"0_21","0_34","1_21","1_7","5_6","5_7","6_6","6_7"}, <7> {"0_21","0_34","1_21","1_7","5_7","6_7","7_7"}, <8> {"0_21","0_34","1_21","8_21","8_8"}, <9> {"0_21","0_34","1_21","8_21","9_15","9_9"}, <10> {"0_21","0_34","10_10","10_15","1_21","8_21","9_15"}, <11> {"0_21","0_34","10_15","11_11","11_12","11_15","1_21","8_21","9_15"}, <12> {"0_21","0_34","10_15","11_12","11_15","12_12","1_21","8_21","9_15"}, <13> {"0_21","0_34","10_15","11_15","13_13","13_15","1_21","8_21","9_15"}, <14> {"0_21","0_34","10_15","11_15","13_15","14_14","14_15","1_21","8_21","9_15"}, <15> {"0_21","0_34","10_15","11_15","13_15","14_15","15_15","1_21","8_21","9_15"}, <16> {"0_21","0_34","16_16","16_21","1_21","8_21"}, <17> {"0_21","0_34","16_21","17_17","17_21","1_21","8_21"}, <18> {"0_21","0_34","16_21","17_21","18_18","1_21","8_21"}, <19> {"0_21","0_34","16_21","17_21","19_19","1_21","8_21"}, <20> {"0_21","0_34","16_21","17_21","1_21","20_20","8_21"}, <21> {"0_21","0_34","16_21","17_21","1_21","21_21","8_21"}, <22> {"0_34","22_22"}, <23> {"0_34","23_23","23_25"}, <24> {"0_34","23_25","24_24"}, <25> {"0_34","23_25","25_25"}, <26> {"0_34","26_26"}, <27> {"0_34","27_27"}, <28> {"0_34","28_28","28_33"}, <29> {"0_34","28_33","29_29","29_33"}, <30> {"0_34","28_33","29_33","30_30","30_31"}, <31> {"0_34","28_33","29_33","30_31","31_31"}, <32> {"0_34","28_33","29_33","32_32"}, <33> {"0_34","28_33","29_33","33_33"}, <34> {"0_34","34_34"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Proliferating_in_number"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Documents"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Permitting"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Transfer"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Purpose"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
subto overlap9: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z9[r,s] <= 1;
subto overlap10: forall <i> in I do 
 sum <r> in Roles["Political_locales"] do 
 sum <s> in G[i] do z10[r,s] <= 1;
subto overlap11: forall <i> in I do 
 sum <r> in Roles["Taking_sides"] do 
 sum <s> in G[i] do z11[r,s] <= 1;
subto overlap12: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z12[r,s] <= 1;
subto overlap13: forall <i> in I do 
 sum <r> in Roles["Origin"] do 
 sum <s> in G[i] do z13[r,s] <= 1;
subto overlap14: forall <i> in I do 
 sum <r> in Roles["Make_agreement_on_action"] do 
 sum <s> in G[i] do z14[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Weapon"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Proliferating_in_number"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Documents"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Permitting"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Transfer"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Weapon"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Artifact"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Purpose"] do sum <s> in Spans : z8[r,s] == 1;
subto unique9: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z9[r,s] == 1;
subto unique10: forall <r> in Roles["Political_locales"] do sum <s> in Spans : z10[r,s] == 1;
subto unique11: forall <r> in Roles["Taking_sides"] do sum <s> in Spans : z11[r,s] == 1;
subto unique12: forall <r> in Roles["Origin"] do sum <s> in Spans : z12[r,s] == 1;
subto unique13: forall <r> in Roles["Origin"] do sum <s> in Spans : z13[r,s] == 1;
subto unique14: forall <r> in Roles["Make_agreement_on_action"] do sum <s> in Spans : z14[r,s] == 1;
#pairwise exclusion constraint
set Exc5 := {<"Donor","Transferors">,<"Recipient","Transferors">};
subto exclusion5: forall <ri,rj> in Exc5 do z5[ri,"-1_-1"] + z5[rj,"-1_-1"] >= 1;
set Exc8 := {<"Attribute","Goal">,<"Goal","Value">};
subto exclusion8: forall <ri,rj> in Exc8 do z8[ri,"-1_-1"] + z8[rj,"-1_-1"] >= 1;
set Exc14 := {<"Parties","Party_2">,<"Parties","Party_1">};
subto exclusion14: forall <ri,rj> in Exc14 do z14[ri,"-1_-1"] + z14[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
set Reqr8 := {<"Attribute","Value">};
subto require8: forall <ri,rj> in Reqr8 do z8[ri,"-1_-1"] - z8[rj,"-1_-1"] == 0;

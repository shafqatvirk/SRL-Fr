# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Weapon","Frequency","Arriving","People","Seeking","Weapon","Artifact","Weapon","Type"};
set Roles[Frames] :=  <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Frequency"> {"Time_span","Attribute","Degree","Time","Event","Interval","Rate","Salient_entity"}, <"Arriving"> {"Theme","Cotheme","Means","Depictive","Circumstances","Manner","Time","Source","Period_of_iterations","Degree","Event_description","Re_encoding","Goal","Purpose","Goal_conditions","Path","Frequency","Mode_of_transportation"}, <"People"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Seeking"> {"Sought_entity","Cognizer_agent","Ground","Manner","Outcome","Means"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Artifact"> {"Creator","Type","Use","Material","Time_of_creation","Name","Artifact"}, <"Weapon"> {"Type","Use","Wielder","Descriptor","Material","Name","Part","Weapon","Time_of_creation","Creator"}, <"Type"> {"Item_Property","Category","Subtype","Type_Property"};
set Spans := {"-1_-1","0_0","0_32","10_10","10_15","10_17","11_11","12_12","13_13","13_14","14_14","15_15","16_16","16_17","17_17","18_18","18_19","18_20","19_19","19_20","1_1","1_32","20_20","21_21","22_22","23_23","24_24","25_25","26_26","27_27","28_28","28_31","29_29","29_31","2_2","2_31","30_30","31_31","32_32","3_3","3_31","3_4","4_4","5_31","5_5","6_31","6_6","6_8","7_7","8_8","9_23","9_27","9_31","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Weapon"]] binary;
var z1[Assignment["Frequency"]] binary;
var z2[Assignment["Arriving"]] binary;
var z3[Assignment["People"]] binary;
var z4[Assignment["Seeking"]] binary;
var z5[Assignment["Weapon"]] binary;
var z6[Assignment["Artifact"]] binary;
var z7[Assignment["Weapon"]] binary;
var z8[Assignment["Type"]] binary;
param probabilities0[Assignment["Weapon"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Frequency"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Arriving"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["People"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["Seeking"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Weapon"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Artifact"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;
param probabilities7[Assignment["Weapon"]] := read "../frameData/frame7.txt" as "<1s,2s> 3n" skip 2;
param probabilities8[Assignment["Type"]] := read "../frameData/frame8.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Weapon"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Frequency"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Arriving"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["People"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["Seeking"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Artifact"] : probabilities6[r,s] * z6[r,s])+(sum <r,s> in Assignment["Weapon"] : probabilities7[r,s] * z7[r,s])+(sum <r,s> in Assignment["Type"] : probabilities8[r,s] * z8[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 32};
set G[I] := <0> {"0_0","0_32"}, <1> {"0_32","1_1","1_32"}, <2> {"0_32","1_32","2_2","2_31"}, <3> {"0_32","1_32","2_31","3_3","3_31","3_4"}, <4> {"0_32","1_32","2_31","3_31","3_4","4_4"}, <5> {"0_32","1_32","2_31","3_31","5_31","5_5"}, <6> {"0_32","1_32","2_31","3_31","5_31","6_31","6_6","6_8"}, <7> {"0_32","1_32","2_31","3_31","5_31","6_31","6_8","7_7"}, <8> {"0_32","1_32","2_31","3_31","5_31","6_31","6_8","8_8"}, <9> {"0_32","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31","9_9"}, <10> {"0_32","10_10","10_15","10_17","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <11> {"0_32","10_15","10_17","11_11","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <12> {"0_32","10_15","10_17","12_12","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <13> {"0_32","10_15","10_17","13_13","13_14","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <14> {"0_32","10_15","10_17","13_14","14_14","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <15> {"0_32","10_15","10_17","15_15","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <16> {"0_32","10_17","16_16","16_17","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <17> {"0_32","10_17","16_17","17_17","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <18> {"0_32","18_18","18_19","18_20","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <19> {"0_32","18_19","18_20","19_19","19_20","1_32","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <20> {"0_32","18_20","19_20","1_32","20_20","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <21> {"0_32","1_32","21_21","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <22> {"0_32","1_32","22_22","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <23> {"0_32","1_32","23_23","2_31","3_31","5_31","6_31","9_23","9_27","9_31"}, <24> {"0_32","1_32","24_24","2_31","3_31","5_31","6_31","9_27","9_31"}, <25> {"0_32","1_32","25_25","2_31","3_31","5_31","6_31","9_27","9_31"}, <26> {"0_32","1_32","26_26","2_31","3_31","5_31","6_31","9_27","9_31"}, <27> {"0_32","1_32","27_27","2_31","3_31","5_31","6_31","9_27","9_31"}, <28> {"0_32","1_32","28_28","28_31","2_31","3_31","5_31","6_31","9_31"}, <29> {"0_32","1_32","28_31","29_29","29_31","2_31","3_31","5_31","6_31","9_31"}, <30> {"0_32","1_32","28_31","29_31","2_31","30_30","3_31","5_31","6_31","9_31"}, <31> {"0_32","1_32","28_31","29_31","2_31","31_31","3_31","5_31","6_31","9_31"}, <32> {"0_32","1_32","32_32"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Frequency"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Arriving"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["People"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["Seeking"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Artifact"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
subto overlap7: forall <i> in I do 
 sum <r> in Roles["Weapon"] do 
 sum <s> in G[i] do z7[r,s] <= 1;
subto overlap8: forall <i> in I do 
 sum <r> in Roles["Type"] do 
 sum <s> in G[i] do z8[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Weapon"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Frequency"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Arriving"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["People"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["Seeking"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Weapon"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Artifact"] do sum <s> in Spans : z6[r,s] == 1;
subto unique7: forall <r> in Roles["Weapon"] do sum <s> in Spans : z7[r,s] == 1;
subto unique8: forall <r> in Roles["Type"] do sum <s> in Spans : z8[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Degree","Rate">,<"Interval","Salient_entity">,<"Event","Salient_entity">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
#pairwise requirement constraint

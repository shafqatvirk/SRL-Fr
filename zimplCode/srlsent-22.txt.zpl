# An autogenerated ZIMPL code to jointly map roles to spans for N number of frame in one sentence
set Frames := {"Being_obligated","Quantity","Departing","Fleeing","People_by_origin","Natural_features","Locative_relation"};
set Roles[Frames] :=  <"Being_obligated"> {"Condition","Responsible_party","Place","Frequency","Duty"}, <"Quantity"> {"Mass","Q_Prop","Degree","Quantity","Individuals"}, <"Departing"> {"Speed","Place","Theme","Cotheme","Distance","Depictive","Circumstances","Source","Manner","Journey","Explanation","Time","Reason","Containing_event","Event_description","Re_encoding","Goal","Duration_of_end_state","Purpose","Frequency","Path","Mode_of_transportation"}, <"Fleeing"> {"Purpose","Time","Place","Goal","Direction","Source","Internal_cause","Depictive","Path","Vehicle","Self_mover","Manner","External_cause"}, <"People_by_origin"> {"Person","Ethnicity","Persistent_characteristic","Context_of_acquaintance","Descriptor","Age","Origin"}, <"Natural_features"> {"Type","Locale","Relative_location","Name","Formational_cause","Container_possessor","Constituent_parts","Descriptor"}, <"Locative_relation"> {"Time","Distance","Figure","Ground","Direction","Figures"};
set Spans := {"-1_-1","0_0","0_21","10_10","11_11","12_12","13_13","14_14","15_15","16_16","17_17","18_18","19_19","19_20","1_1","20_20","21_21","2_2","2_3","2_5","3_3","3_5","4_4","4_5","5_5","6_6","7_20","7_7","8_20","8_8","9_14","9_18","9_9"};
set Assignment[<f> in Frames] := {Roles[f]*Spans};
var z0[Assignment["Being_obligated"]] binary;
var z1[Assignment["Quantity"]] binary;
var z2[Assignment["Departing"]] binary;
var z3[Assignment["Fleeing"]] binary;
var z4[Assignment["People_by_origin"]] binary;
var z5[Assignment["Natural_features"]] binary;
var z6[Assignment["Locative_relation"]] binary;
param probabilities0[Assignment["Being_obligated"]] := read "../frameData/frame0.txt" as "<1s,2s> 3n" skip 2;
param probabilities1[Assignment["Quantity"]] := read "../frameData/frame1.txt" as "<1s,2s> 3n" skip 2;
param probabilities2[Assignment["Departing"]] := read "../frameData/frame2.txt" as "<1s,2s> 3n" skip 2;
param probabilities3[Assignment["Fleeing"]] := read "../frameData/frame3.txt" as "<1s,2s> 3n" skip 2;
param probabilities4[Assignment["People_by_origin"]] := read "../frameData/frame4.txt" as "<1s,2s> 3n" skip 2;
param probabilities5[Assignment["Natural_features"]] := read "../frameData/frame5.txt" as "<1s,2s> 3n" skip 2;
param probabilities6[Assignment["Locative_relation"]] := read "../frameData/frame6.txt" as "<1s,2s> 3n" skip 2;

 #Objective Function 
maximize assign : (sum <r,s> in Assignment["Being_obligated"] : probabilities0[r,s] * z0[r,s])+(sum <r,s> in Assignment["Quantity"] : probabilities1[r,s] * z1[r,s])+(sum <r,s> in Assignment["Departing"] : probabilities2[r,s] * z2[r,s])+(sum <r,s> in Assignment["Fleeing"] : probabilities3[r,s] * z3[r,s])+(sum <r,s> in Assignment["People_by_origin"] : probabilities4[r,s] * z4[r,s])+(sum <r,s> in Assignment["Natural_features"] : probabilities5[r,s] * z5[r,s])+(sum <r,s> in Assignment["Locative_relation"] : probabilities6[r,s] * z6[r,s]);
#Constraints
#Overlap Constraints
set I := {0 to 21};
set G[I] := <0> {"0_0","0_21"}, <1> {"0_21","1_1"}, <2> {"0_21","2_2","2_3","2_5"}, <3> {"0_21","2_3","2_5","3_3","3_5"}, <4> {"0_21","2_5","3_5","4_4","4_5"}, <5> {"0_21","2_5","3_5","4_5","5_5"}, <6> {"0_21","6_6"}, <7> {"0_21","7_20","7_7"}, <8> {"0_21","7_20","8_20","8_8"}, <9> {"0_21","7_20","8_20","9_14","9_18","9_9"}, <10> {"0_21","10_10","7_20","8_20","9_14","9_18"}, <11> {"0_21","11_11","7_20","8_20","9_14","9_18"}, <12> {"0_21","12_12","7_20","8_20","9_14","9_18"}, <13> {"0_21","13_13","7_20","8_20","9_14","9_18"}, <14> {"0_21","14_14","7_20","8_20","9_14","9_18"}, <15> {"0_21","15_15","7_20","8_20","9_18"}, <16> {"0_21","16_16","7_20","8_20","9_18"}, <17> {"0_21","17_17","7_20","8_20","9_18"}, <18> {"0_21","18_18","7_20","8_20","9_18"}, <19> {"0_21","19_19","19_20","7_20","8_20"}, <20> {"0_21","19_20","20_20","7_20","8_20"}, <21> {"0_21","21_21"};
subto overlap0: forall <i> in I do 
 sum <r> in Roles["Being_obligated"] do 
 sum <s> in G[i] do z0[r,s] <= 1;
subto overlap1: forall <i> in I do 
 sum <r> in Roles["Quantity"] do 
 sum <s> in G[i] do z1[r,s] <= 1;
subto overlap2: forall <i> in I do 
 sum <r> in Roles["Departing"] do 
 sum <s> in G[i] do z2[r,s] <= 1;
subto overlap3: forall <i> in I do 
 sum <r> in Roles["Fleeing"] do 
 sum <s> in G[i] do z3[r,s] <= 1;
subto overlap4: forall <i> in I do 
 sum <r> in Roles["People_by_origin"] do 
 sum <s> in G[i] do z4[r,s] <= 1;
subto overlap5: forall <i> in I do 
 sum <r> in Roles["Natural_features"] do 
 sum <s> in G[i] do z5[r,s] <= 1;
subto overlap6: forall <i> in I do 
 sum <r> in Roles["Locative_relation"] do 
 sum <s> in G[i] do z6[r,s] <= 1;
#Uniqueness Constraint
subto unique0: forall <r> in Roles["Being_obligated"] do sum <s> in Spans : z0[r,s] == 1;
subto unique1: forall <r> in Roles["Quantity"] do sum <s> in Spans : z1[r,s] == 1;
subto unique2: forall <r> in Roles["Departing"] do sum <s> in Spans : z2[r,s] == 1;
subto unique3: forall <r> in Roles["Fleeing"] do sum <s> in Spans : z3[r,s] == 1;
subto unique4: forall <r> in Roles["People_by_origin"] do sum <s> in Spans : z4[r,s] == 1;
subto unique5: forall <r> in Roles["Natural_features"] do sum <s> in Spans : z5[r,s] == 1;
subto unique6: forall <r> in Roles["Locative_relation"] do sum <s> in Spans : z6[r,s] == 1;
#pairwise exclusion constraint
set Exc1 := {<"Individuals","Mass">};
subto exclusion1: forall <ri,rj> in Exc1 do z1[ri,"-1_-1"] + z1[rj,"-1_-1"] >= 1;
set Exc6 := {<"Figure","Figures">,<"Figures","Ground">};
subto exclusion6: forall <ri,rj> in Exc6 do z6[ri,"-1_-1"] + z6[rj,"-1_-1"] >= 1;
#pairwise requirement constraint
